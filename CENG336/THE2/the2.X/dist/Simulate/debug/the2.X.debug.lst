

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Apr 19 18:06:01 2024

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F8722 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	smallconst
    76  001000                     __psmallconst:
    77                           	callstack 0
    78  001000  00                 	db	0
    79  001001                     _L:
    80                           	callstack 0
    81  001001  02                 	db	2
    82  001002  00                 	db	0
    83  001003  00                 	db	0
    84  001004  E0                 	db	224
    85  001005                     __end_of_L:
    86                           	callstack 0
    87  001005  01                 	db	1
    88  001006  00                 	db	0
    89  001007  00                 	db	0
    90  001008  F0                 	db	240
    91  001009                     __end_of_SQUARE:
    92                           	callstack 0
    93  001009  00                 	db	0
    94  00100A  00                 	db	0
    95  00100B  00                 	db	0
    96  00100C  80                 	db	128
    97  00100D                     __end_of_DOT:
    98                           	callstack 0
    99  00100D  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           	psect	nvCOMRAM
   102  000043                     __pnvCOMRAM:
   103                           	callstack 0
   104  000043                     _lastPortB:
   105                           	callstack 0
   106  000043                     	ds	1
   107  000044                     _lastPortA:
   108                           	callstack 0
   109  000044                     	ds	1
   110  0000                     _INTCONbits	set	4082
   111  0000                     _RCONbits	set	4048
   112  0000                     _INTCON	set	4082
   113  0000                     _T0CONbits	set	4053
   114  0000                     _TMR0L	set	4054
   115  0000                     _TMR0H	set	4055
   116  0000                     _T0CON	set	4053
   117  0000                     _TRISF	set	3991
   118  0000                     _TRISE	set	3990
   119  0000                     _TRISD	set	3989
   120  0000                     _TRISC	set	3988
   121  0000                     _LATF	set	3982
   122  0000                     _LATE	set	3981
   123  0000                     _LATD	set	3980
   124  0000                     _LATC	set	3979
   125  0000                     _TRISB	set	3987
   126  0000                     _LATB	set	3978
   127  0000                     _PORTB	set	3969
   128  0000                     _TRISA	set	3986
   129  0000                     _LATA	set	3977
   130  0000                     _PORTA	set	3968
   131  0000                     _ADCON1	set	4033
   132                           
   133                           ; #config settings
   134                           
   135                           	psect	cinit
   136  001EE6                     __pcinit:
   137                           	callstack 0
   138  001EE6                     start_initialization:
   139                           	callstack 0
   140  001EE6                     __initialization:
   141                           	callstack 0
   142                           
   143                           ; Clear objects allocated to COMRAM (14 bytes)
   144  001EE6  EE00  F035         	lfsr	0,__pbssCOMRAM
   145  001EEA  0E0E               	movlw	14
   146  001EEC                     clear_0:
   147  001EEC  6AEE               	clrf	postinc0,c
   148  001EEE  06E8               	decf	wreg,f,c
   149  001EF0  E1FD               	bnz	clear_0
   150  001EF2                     end_of_initialization:
   151                           	callstack 0
   152  001EF2                     __end_of__initialization:
   153                           	callstack 0
   154  001EF2  9045               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   155  001EF4  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   156  001EF6  0100               	movlb	0
   157  001EF8  EF49  F00F         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160  000035                     __pbssCOMRAM:
   161                           	callstack 0
   162  000035                     HandleTimer@counter:
   163                           	callstack 0
   164  000035                     	ds	1
   165  000036                     _prevA:
   166                           	callstack 0
   167  000036                     	ds	1
   168  000037                     _buffer:
   169                           	callstack 0
   170  000037                     	ds	4
   171  00003B                     _board:
   172                           	callstack 0
   173  00003B                     	ds	4
   174  00003F                     _curTet:
   175                           	callstack 0
   176  00003F                     	ds	4
   177                           
   178                           	psect	cstackCOMRAM
   179  000001                     __pcstackCOMRAM:
   180                           	callstack 0
   181  000001                     i2BitwiseAnd@shape2:
   182                           	callstack 0
   183  000001                     i2GetQuartet2@y:
   184                           	callstack 0
   185  000001                     i2RotateShape@shape:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x0
   189  000001                     	ds	1
   190  000002                     i2BitwiseAnd@shape1:
   191                           	callstack 0
   192  000002                     i2GetQuartet2@shape:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x1
   196  000002                     	ds	1
   197  000003                     HandlePortB@changedBits:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x2
   201  000003                     	ds	1
   202  000004                     ??i2_GetQuartet2:
   203  000004                     HandlePortB@currentPortB:
   204                           	callstack 0
   205                           
   206                           ; 1 bytes @ 0x3
   207  000004                     	ds	2
   208  000006                     i2_GetQuartet2$486:
   209                           	callstack 0
   210                           
   211                           ; 1 bytes @ 0x5
   212  000006                     	ds	1
   213  000007                     i2_GetQuartet2$487:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x6
   217  000007                     	ds	1
   218  000008                     i2_GetQuartet2$488:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x7
   222  000008                     	ds	1
   223  000009                     i2_GetQuartet2$489:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x8
   227  000009                     	ds	1
   228  00000A                     i2GetQuartet2@x:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x9
   232  00000A                     	ds	1
   233  00000B                     i2ShapeInBounds@dir1:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0xA
   237  00000B                     	ds	1
   238  00000C                     i2_ShapeInBounds$549:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0xB
   242  00000C                     	ds	2
   243  00000E                     i2_ShapeInBounds$550:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0xD
   247  00000E                     	ds	2
   248  000010                     i2_ShapeInBounds$551:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0xF
   252  000010                     	ds	2
   253  000012                     i2_ShapeInBounds$552:
   254                           	callstack 0
   255                           
   256                           ; 2 bytes @ 0x11
   257  000012                     	ds	2
   258  000014                     i2ShapeInBounds@returnVal:
   259                           	callstack 0
   260                           
   261                           ; 1 bytes @ 0x13
   262  000014                     	ds	1
   263  000015                     i2ShapeInBounds@dir0:
   264                           	callstack 0
   265                           
   266                           ; 1 bytes @ 0x14
   267  000015                     	ds	1
   268  000016                     i2ShapeInBounds@shape:
   269                           	callstack 0
   270                           
   271                           ; 1 bytes @ 0x15
   272  000016                     	ds	1
   273  000017                     ??_HandleInterrupt:
   274                           
   275                           ; 1 bytes @ 0x16
   276  000017                     	ds	4
   277  00001B                     SetBoard@y:
   278                           	callstack 0
   279  00001B                     GetBoard@y:
   280                           	callstack 0
   281  00001B                     BitwiseAnd@shape2:
   282                           	callstack 0
   283  00001B                     GetQuartet2@y:
   284                           	callstack 0
   285  00001B                     RotateShape@shape:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x1A
   289  00001B                     	ds	1
   290  00001C                     SetBoard@v:
   291                           	callstack 0
   292  00001C                     BitwiseAnd@shape1:
   293                           	callstack 0
   294  00001C                     GetBoard@board:
   295                           	callstack 0
   296  00001C                     GetQuartet2@shape:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x1B
   300  00001C                     	ds	1
   301  00001D                     SetBoard@board:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x1C
   305  00001D                     	ds	1
   306  00001E                     ??_GetBoard:
   307  00001E                     ??_GetQuartet2:
   308                           
   309                           ; 1 bytes @ 0x1D
   310  00001E                     	ds	1
   311  00001F                     ??_SetBoard:
   312                           
   313                           ; 1 bytes @ 0x1E
   314  00001F                     	ds	1
   315  000020                     GetBoard@x:
   316                           	callstack 0
   317  000020                     _GetQuartet2$486:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1F
   321  000020                     	ds	1
   322  000021                     GetBoard@col:
   323                           	callstack 0
   324  000021                     _GetQuartet2$487:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0x20
   328  000021                     	ds	1
   329  000022                     GetQuartet@y:
   330                           	callstack 0
   331  000022                     _GetQuartet2$488:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0x21
   335  000022                     	ds	1
   336  000023                     _GetQuartet2$489:
   337                           	callstack 0
   338  000023                     GetQuartet@shape:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x22
   342  000023                     	ds	1
   343  000024                     SetBoard@x:
   344                           	callstack 0
   345  000024                     GetQuartet2@x:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0x23
   349  000024                     	ds	1
   350  000025                     ShapeInBounds@dir1:
   351                           	callstack 0
   352  000025                     _SetBoard$391:
   353                           	callstack 0
   354  000025                     GetQuartet@board:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x24
   358  000025                     	ds	1
   359  000026                     _ShapeInBounds$549:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x25
   363  000026                     	ds	1
   364  000027                     ??_GetQuartet:
   365  000027                     _SetBoard$392:
   366                           	callstack 0
   367                           
   368                           ; 2 bytes @ 0x26
   369  000027                     	ds	1
   370  000028                     _ShapeInBounds$550:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0x27
   374  000028                     	ds	1
   375  000029                     _SetBoard$393:
   376                           	callstack 0
   377  000029                     _GetQuartet$470:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x28
   381  000029                     	ds	1
   382  00002A                     _ShapeInBounds$551:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x29
   386  00002A                     	ds	1
   387  00002B                     _SetBoard$394:
   388                           	callstack 0
   389  00002B                     _GetQuartet$471:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x2A
   393  00002B                     	ds	1
   394  00002C                     _ShapeInBounds$552:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x2B
   398  00002C                     	ds	1
   399  00002D                     InitBoard@i:
   400                           	callstack 0
   401  00002D                     SetQuartet@y:
   402                           	callstack 0
   403  00002D                     _GetQuartet$472:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x2C
   407  00002D                     	ds	1
   408  00002E                     InitBoard@j:
   409                           	callstack 0
   410  00002E                     ShapeInBounds@returnVal:
   411                           	callstack 0
   412  00002E                     SetQuartet@shape:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x2D
   416  00002E                     	ds	1
   417  00002F                     ShapeInBounds@dir0:
   418                           	callstack 0
   419  00002F                     _GetQuartet$473:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x2E
   423  00002F                     	ds	1
   424  000030                     ShapeInBounds@shape:
   425                           	callstack 0
   426  000030                     SetQuartet@board:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x2F
   430  000030                     	ds	1
   431  000031                     GetQuartet@x:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x30
   435  000031                     	ds	1
   436  000032                     SetQuartet@x:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x31
   440  000032                     	ds	1
   441  000033                     ListenPortA@changedBits:
   442                           	callstack 0
   443  000033                     UpdateBuffer@bq:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x32
   447  000033                     	ds	1
   448  000034                     ListenPortA@currentPortA:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x33
   452  000034                     	ds	1
   453  000035                     
   454                           ; 1 bytes @ 0x34
   455 ;;
   456 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   457 ;;
   458 ;; *************** function _main *****************
   459 ;; Defined at:
   460 ;;		line 523 in file "main.c"
   461 ;; Parameters:    Size  Location     Type
   462 ;;		None
   463 ;; Auto vars:     Size  Location     Type
   464 ;;		None
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;Total ram usage:        0 bytes
   479 ;; Hardware stack levels required when called:    8
   480 ;; This function calls:
   481 ;;		_InitBoard
   482 ;;		_InitInterrupts
   483 ;;		_InitTimers
   484 ;;		_Render
   485 ;;		_Update
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492  001E92                     __ptext0:
   493                           	callstack 0
   494  001E92                     _main:
   495                           	callstack 23
   496  001E92                     
   497                           ;main.c: 525:     InitBoard();
   498  001E92  EC8A  F00D         	call	_InitBoard	;wreg free
   499  001E96                     
   500                           ;main.c: 526:     InitTimers();
   501  001E96  EC7E  F00F         	call	_InitTimers	;wreg free
   502  001E9A                     
   503                           ;main.c: 527:     InitInterrupts();
   504  001E9A  EC88  F00F         	call	_InitInterrupts	;wreg free
   505  001E9E                     l1896:
   506                           
   507                           ;main.c: 530:     {;main.c: 531:         Update();
   508  001E9E  EC9B  F00F         	call	_Update	;wreg free
   509  001EA2                     
   510                           ;main.c: 532:         Render();
   511  001EA2  EC92  F00F         	call	_Render	;wreg free
   512  001EA6  EF4F  F00F         	goto	l1896
   513  001EAA  EF07  F000         	goto	start
   514  001EAE                     __end_of_main:
   515                           	callstack 0
   516                           
   517 ;; *************** function _Update *****************
   518 ;; Defined at:
   519 ;;		line 216 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    7
   540 ;; This function calls:
   541 ;;		_ListenPortA
   542 ;;		_UpdateBoard
   543 ;;		_UpdateBuffer
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           	psect	text1
   550  001F36                     __ptext1:
   551                           	callstack 0
   552  001F36                     _Update:
   553                           	callstack 23
   554  001F36                     
   555                           ;main.c: 218:     ListenPortA();
   556  001F36  EC40  F00C         	call	_ListenPortA	;wreg free
   557  001F3A                     
   558                           ;main.c: 219:     UpdateBoard();
   559  001F3A  ECA2  F00F         	call	_UpdateBoard	;wreg free
   560  001F3E                     
   561                           ;main.c: 220:     UpdateBuffer();
   562  001F3E  ECAE  F00E         	call	_UpdateBuffer	;wreg free
   563  001F42  0012               	return		;funcret
   564  001F44                     __end_of_Update:
   565                           	callstack 0
   566                           
   567 ;; *************** function _UpdateBuffer *****************
   568 ;; Defined at:
   569 ;;		line 345 in file "main.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;		None
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  bq              1   50[COMRAM] struct .
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used:    1
   589 ;; Hardware stack levels required when called:    6
   590 ;; This function calls:
   591 ;;		_GetQuartet
   592 ;;		_SetQuartet
   593 ;; This function is called by:
   594 ;;		_Update
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text2
   599  001D5C                     __ptext2:
   600                           	callstack 0
   601  001D5C                     _UpdateBuffer:
   602                           	callstack 23
   603  001D5C                     
   604                           ;main.c: 347:     INTCONbits.TMR0IE = 0;
   605  001D5C  9AF2               	bcf	242,5,c	;volatile
   606                           
   607                           ;main.c: 348:     buffer = board;
   608  001D5E  C03B  F037         	movff	_board,_buffer
   609  001D62  C03C  F038         	movff	_board+1,_buffer+1
   610  001D66  C03D  F039         	movff	_board+2,_buffer+2
   611  001D6A  C03E  F03A         	movff	_board+3,_buffer+3
   612  001D6E                     
   613                           ;main.c: 349:     Shape bq;;main.c: 350:     GetQuartet(curTet.x, curTet.y, &bq, &buffer
      +                          );
   614  001D6E  C041  F022         	movff	_curTet+2,GetQuartet@y
   615  001D72  0E33               	movlw	low UpdateBuffer@bq
   616  001D74  6E23               	movwf	GetQuartet@shape^0,c
   617  001D76  0E00               	movlw	high UpdateBuffer@bq
   618  001D78  6E24               	movwf	(GetQuartet@shape+1)^0,c
   619  001D7A  0E37               	movlw	low _buffer
   620  001D7C  6E25               	movwf	GetQuartet@board^0,c
   621  001D7E  0E00               	movlw	high _buffer
   622  001D80  6E26               	movwf	(GetQuartet@board+1)^0,c
   623  001D82  5040               	movf	(_curTet+1)^0,w,c
   624  001D84  EC52  F009         	call	_GetQuartet
   625  001D88                     
   626                           ;main.c: 351:     bq.byte |= curTet.shape.byte;
   627  001D88  5042               	movf	(_curTet+3)^0,w,c
   628  001D8A  1233               	iorwf	UpdateBuffer@bq^0,f,c
   629  001D8C                     
   630                           ;main.c: 353:     SetQuartet(curTet.x, curTet.y, &bq, &buffer);
   631  001D8C  C041  F02D         	movff	_curTet+2,SetQuartet@y
   632  001D90  0E33               	movlw	low UpdateBuffer@bq
   633  001D92  6E2E               	movwf	SetQuartet@shape^0,c
   634  001D94  0E00               	movlw	high UpdateBuffer@bq
   635  001D96  6E2F               	movwf	(SetQuartet@shape+1)^0,c
   636  001D98  0E37               	movlw	low _buffer
   637  001D9A  6E30               	movwf	SetQuartet@board^0,c
   638  001D9C  0E00               	movlw	high _buffer
   639  001D9E  6E31               	movwf	(SetQuartet@board+1)^0,c
   640  001DA0  5040               	movf	(_curTet+1)^0,w,c
   641  001DA2  EC3B  F00E         	call	_SetQuartet
   642  001DA6                     
   643                           ;main.c: 354:     INTCONbits.TMR0IE = 1;
   644  001DA6  8AF2               	bsf	242,5,c	;volatile
   645  001DA8  0012               	return		;funcret
   646  001DAA                     __end_of_UpdateBuffer:
   647                           	callstack 0
   648                           
   649 ;; *************** function _SetQuartet *****************
   650 ;; Defined at:
   651 ;;		line 381 in file "main.c"
   652 ;; Parameters:    Size  Location     Type
   653 ;;  x               1    wreg     unsigned char 
   654 ;;  y               1   44[COMRAM] unsigned char 
   655 ;;  shape           2   45[COMRAM] PTR struct .
   656 ;;		 -> IsColliding@curQuartet(1), UpdateBuffer@bq(1), 
   657 ;;  board           2   47[COMRAM] PTR struct .
   658 ;;		 -> buffer(4), board(4), 
   659 ;; Auto vars:     Size  Location     Type
   660 ;;  x               1   49[COMRAM] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  1    wreg      void 
   663 ;; Registers used:
   664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   670 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   671 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   673 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   674 ;;Total ram usage:        6 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    5
   677 ;; This function calls:
   678 ;;		_SetBoard
   679 ;; This function is called by:
   680 ;;		_UpdateBuffer
   681 ;;		_IsColliding
   682 ;; This function uses a non-reentrant model
   683 ;;
   684                           
   685                           	psect	text3
   686  001C76                     __ptext3:
   687                           	callstack 0
   688  001C76                     _SetQuartet:
   689                           	callstack 23
   690                           
   691                           ;incstack = 0
   692                           ;SetQuartet@x stored from wreg
   693  001C76  6E32               	movwf	SetQuartet@x^0,c
   694  001C78                     
   695                           ;main.c: 381: void SetQuartet(char x, char y, Shape *shape, Board* board);main.c: 382: {
      +                          ;main.c: 383:     SetBoard(x, y, (char) shape->b0, board);
   696  001C78  C02D  F01B         	movff	SetQuartet@y,SetBoard@y
   697  001C7C  C02E  FFD9         	movff	SetQuartet@shape,fsr2l
   698  001C80  C02F  FFDA         	movff	SetQuartet@shape+1,fsr2h
   699  001C84  0E00               	movlw	0
   700  001C86  BEDF               	btfsc	indf2,7,c
   701  001C88  0E01               	movlw	1
   702  001C8A  6E1C               	movwf	SetBoard@v^0,c
   703  001C8C  C030  F01D         	movff	SetQuartet@board,SetBoard@board
   704  001C90  C031  F01E         	movff	SetQuartet@board+1,SetBoard@board+1
   705  001C94  5032               	movf	SetQuartet@x^0,w,c
   706  001C96  EC07  F008         	call	_SetBoard
   707                           
   708                           ;main.c: 384:     SetBoard(x + 1, y, (char) shape->b1, board);
   709  001C9A  C02D  F01B         	movff	SetQuartet@y,SetBoard@y
   710  001C9E  C02E  FFD9         	movff	SetQuartet@shape,fsr2l
   711  001CA2  C02F  FFDA         	movff	SetQuartet@shape+1,fsr2h
   712  001CA6  0E00               	movlw	0
   713  001CA8  BCDF               	btfsc	indf2,6,c
   714  001CAA  0E01               	movlw	1
   715  001CAC  6E1C               	movwf	SetBoard@v^0,c
   716  001CAE  C030  F01D         	movff	SetQuartet@board,SetBoard@board
   717  001CB2  C031  F01E         	movff	SetQuartet@board+1,SetBoard@board+1
   718  001CB6  2832               	incf	SetQuartet@x^0,w,c
   719  001CB8  EC07  F008         	call	_SetBoard
   720                           
   721                           ;main.c: 385:     SetBoard(x + 1, y + 1, (char) shape->b2, board);
   722  001CBC  282D               	incf	SetQuartet@y^0,w,c
   723  001CBE  6E1B               	movwf	SetBoard@y^0,c
   724  001CC0  C02E  FFD9         	movff	SetQuartet@shape,fsr2l
   725  001CC4  C02F  FFDA         	movff	SetQuartet@shape+1,fsr2h
   726  001CC8  0E00               	movlw	0
   727  001CCA  BADF               	btfsc	indf2,5,c
   728  001CCC  0E01               	movlw	1
   729  001CCE  6E1C               	movwf	SetBoard@v^0,c
   730  001CD0  C030  F01D         	movff	SetQuartet@board,SetBoard@board
   731  001CD4  C031  F01E         	movff	SetQuartet@board+1,SetBoard@board+1
   732  001CD8  2832               	incf	SetQuartet@x^0,w,c
   733  001CDA  EC07  F008         	call	_SetBoard
   734                           
   735                           ;main.c: 386:     SetBoard(x, y + 1, (char) shape->b3, board);
   736  001CDE  282D               	incf	SetQuartet@y^0,w,c
   737  001CE0  6E1B               	movwf	SetBoard@y^0,c
   738  001CE2  C02E  FFD9         	movff	SetQuartet@shape,fsr2l
   739  001CE6  C02F  FFDA         	movff	SetQuartet@shape+1,fsr2h
   740  001CEA  0E00               	movlw	0
   741  001CEC  B8DF               	btfsc	indf2,4,c
   742  001CEE  0E01               	movlw	1
   743  001CF0  6E1C               	movwf	SetBoard@v^0,c
   744  001CF2  C030  F01D         	movff	SetQuartet@board,SetBoard@board
   745  001CF6  C031  F01E         	movff	SetQuartet@board+1,SetBoard@board+1
   746  001CFA  5032               	movf	SetQuartet@x^0,w,c
   747  001CFC  EC07  F008         	call	_SetBoard
   748  001D00  0012               	return		;funcret
   749  001D02                     __end_of_SetQuartet:
   750                           	callstack 0
   751                           
   752 ;; *************** function _GetQuartet *****************
   753 ;; Defined at:
   754 ;;		line 364 in file "main.c"
   755 ;; Parameters:    Size  Location     Type
   756 ;;  x               1    wreg     unsigned char 
   757 ;;  y               1   33[COMRAM] unsigned char 
   758 ;;  shape           2   34[COMRAM] PTR struct .
   759 ;;		 -> IsColliding@shape(1), IsColliding@curQuartet(1), UpdateBuffer@bq(1), 
   760 ;;  board           2   36[COMRAM] PTR struct .
   761 ;;		 -> buffer(4), board(4), 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  x               1   48[COMRAM] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  1    wreg      void 
   766 ;; Registers used:
   767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   773 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   774 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   776 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;Total ram usage:       16 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    5
   780 ;; This function calls:
   781 ;;		_GetBoard
   782 ;; This function is called by:
   783 ;;		_UpdateBuffer
   784 ;;		_IsColliding
   785 ;; This function uses a non-reentrant model
   786 ;;
   787                           
   788                           	psect	text4
   789  0012A4                     __ptext4:
   790                           	callstack 0
   791  0012A4                     _GetQuartet:
   792                           	callstack 23
   793                           
   794                           ;incstack = 0
   795                           ;GetQuartet@x stored from wreg
   796  0012A4  6E31               	movwf	GetQuartet@x^0,c
   797  0012A6                     
   798                           ;main.c: 364: void GetQuartet(char x, char y, Shape *shape, Board* board);main.c: 365: {
      +                          ;main.c: 366:     shape->b0 = (((x) < 0) || ((x) > 3) || ((y) > 7) || ((y) < 0)) ? 1 : G
      +                          etBoard(x, y, board);
   799  0012A6  0E04               	movlw	4
   800  0012A8  6031               	cpfslt	GetQuartet@x^0,c
   801  0012AA  EF59  F009         	goto	u1421
   802  0012AE  EF5B  F009         	goto	u1420
   803  0012B2                     u1421:
   804  0012B2  EF72  F009         	goto	l1586
   805  0012B6                     u1420:
   806  0012B6  0E08               	movlw	8
   807  0012B8  6022               	cpfslt	GetQuartet@y^0,c
   808  0012BA  EF61  F009         	goto	u1431
   809  0012BE  EF63  F009         	goto	u1430
   810  0012C2                     u1431:
   811  0012C2  EF72  F009         	goto	l1586
   812  0012C6                     u1430:
   813  0012C6  C022  F01B         	movff	GetQuartet@y,GetBoard@y
   814  0012CA  C025  F01C         	movff	GetQuartet@board,GetBoard@board
   815  0012CE  C026  F01D         	movff	GetQuartet@board+1,GetBoard@board+1
   816  0012D2  5031               	movf	GetQuartet@x^0,w,c
   817  0012D4  ECE6  F00D         	call	_GetBoard
   818  0012D8  6E27               	movwf	??_GetQuartet^0,c
   819  0012DA  5027               	movf	??_GetQuartet^0,w,c
   820  0012DC  6E29               	movwf	_GetQuartet$470^0,c
   821  0012DE  6A2A               	clrf	(_GetQuartet$470+1)^0,c
   822  0012E0  EF76  F009         	goto	l1588
   823  0012E4                     l1586:
   824  0012E4  0E00               	movlw	0
   825  0012E6  6E2A               	movwf	(_GetQuartet$470+1)^0,c
   826  0012E8  0E01               	movlw	1
   827  0012EA  6E29               	movwf	_GetQuartet$470^0,c
   828  0012EC                     l1588:
   829  0012EC  C023  FFD9         	movff	GetQuartet@shape,fsr2l
   830  0012F0  C024  FFDA         	movff	GetQuartet@shape+1,fsr2h
   831  0012F4  B029               	btfsc	_GetQuartet$470^0,0,c
   832  0012F6  D002               	bra	u1445
   833  0012F8  9EDF               	bcf	indf2,7,c
   834  0012FA  D001               	bra	u1446
   835  0012FC                     u1445:
   836  0012FC  8EDF               	bsf	indf2,7,c
   837  0012FE                     u1446:
   838  0012FE                     
   839                           ;main.c: 367:     shape->b1 = (((x + 1) < 0) || ((x + 1) > 3) || ((y) > 7) || ((y) < 0))
      +                           ? 1 : GetBoard(x + 1, y, board);
   840  0012FE  5031               	movf	GetQuartet@x^0,w,c
   841  001300  6E27               	movwf	??_GetQuartet^0,c
   842  001302  6A28               	clrf	(??_GetQuartet+1)^0,c
   843  001304  0E01               	movlw	1
   844  001306  2427               	addwf	??_GetQuartet^0,w,c
   845  001308  0E00               	movlw	0
   846  00130A  2028               	addwfc	(??_GetQuartet+1)^0,w,c
   847  00130C  0B80               	andlw	128
   848  00130E  A4D8               	btfss	status,2,c
   849  001310  EF8C  F009         	goto	u1451
   850  001314  EF8E  F009         	goto	u1450
   851  001318                     u1451:
   852  001318  EFBA  F009         	goto	l1598
   853  00131C                     u1450:
   854  00131C  5031               	movf	GetQuartet@x^0,w,c
   855  00131E  6E27               	movwf	??_GetQuartet^0,c
   856  001320  6A28               	clrf	(??_GetQuartet+1)^0,c
   857  001322  0E01               	movlw	1
   858  001324  2627               	addwf	??_GetQuartet^0,f,c
   859  001326  0E00               	movlw	0
   860  001328  2228               	addwfc	(??_GetQuartet+1)^0,f,c
   861  00132A  BE28               	btfsc	(??_GetQuartet+1)^0,7,c
   862  00132C  EFA3  F009         	goto	u1460
   863  001330  5028               	movf	(??_GetQuartet+1)^0,w,c
   864  001332  E107               	bnz	u1461
   865  001334  0E04               	movlw	4
   866  001336  5C27               	subwf	??_GetQuartet^0,w,c
   867  001338  B0D8               	btfsc	status,0,c
   868  00133A  EFA1  F009         	goto	u1461
   869  00133E  EFA3  F009         	goto	u1460
   870  001342                     u1461:
   871  001342  EFBA  F009         	goto	l1598
   872  001346                     u1460:
   873  001346  0E08               	movlw	8
   874  001348  6022               	cpfslt	GetQuartet@y^0,c
   875  00134A  EFA9  F009         	goto	u1471
   876  00134E  EFAB  F009         	goto	u1470
   877  001352                     u1471:
   878  001352  EFBA  F009         	goto	l1598
   879  001356                     u1470:
   880  001356  C022  F01B         	movff	GetQuartet@y,GetBoard@y
   881  00135A  C025  F01C         	movff	GetQuartet@board,GetBoard@board
   882  00135E  C026  F01D         	movff	GetQuartet@board+1,GetBoard@board+1
   883  001362  2831               	incf	GetQuartet@x^0,w,c
   884  001364  ECE6  F00D         	call	_GetBoard
   885  001368  6E27               	movwf	??_GetQuartet^0,c
   886  00136A  5027               	movf	??_GetQuartet^0,w,c
   887  00136C  6E2B               	movwf	_GetQuartet$471^0,c
   888  00136E  6A2C               	clrf	(_GetQuartet$471+1)^0,c
   889  001370  EFBE  F009         	goto	l1600
   890  001374                     l1598:
   891  001374  0E00               	movlw	0
   892  001376  6E2C               	movwf	(_GetQuartet$471+1)^0,c
   893  001378  0E01               	movlw	1
   894  00137A  6E2B               	movwf	_GetQuartet$471^0,c
   895  00137C                     l1600:
   896  00137C  C023  FFD9         	movff	GetQuartet@shape,fsr2l
   897  001380  C024  FFDA         	movff	GetQuartet@shape+1,fsr2h
   898  001384  B02B               	btfsc	_GetQuartet$471^0,0,c
   899  001386  D002               	bra	u1485
   900  001388  9CDF               	bcf	indf2,6,c
   901  00138A  D001               	bra	u1486
   902  00138C                     u1485:
   903  00138C  8CDF               	bsf	indf2,6,c
   904  00138E                     u1486:
   905  00138E                     
   906                           ;main.c: 368:     shape->b2 = (((x + 1) < 0) || ((x + 1) > 3) || ((y + 1) > 7) || ((y + 
      +                          1) < 0)) ? 1 : GetBoard(x + 1, y + 1, board);
   907  00138E  5031               	movf	GetQuartet@x^0,w,c
   908  001390  6E27               	movwf	??_GetQuartet^0,c
   909  001392  6A28               	clrf	(??_GetQuartet+1)^0,c
   910  001394  0E01               	movlw	1
   911  001396  2427               	addwf	??_GetQuartet^0,w,c
   912  001398  0E00               	movlw	0
   913  00139A  2028               	addwfc	(??_GetQuartet+1)^0,w,c
   914  00139C  0B80               	andlw	128
   915  00139E  A4D8               	btfss	status,2,c
   916  0013A0  EFD4  F009         	goto	u1491
   917  0013A4  EFD6  F009         	goto	u1490
   918  0013A8                     u1491:
   919  0013A8  EF1E  F00A         	goto	l1612
   920  0013AC                     u1490:
   921  0013AC  5031               	movf	GetQuartet@x^0,w,c
   922  0013AE  6E27               	movwf	??_GetQuartet^0,c
   923  0013B0  6A28               	clrf	(??_GetQuartet+1)^0,c
   924  0013B2  0E01               	movlw	1
   925  0013B4  2627               	addwf	??_GetQuartet^0,f,c
   926  0013B6  0E00               	movlw	0
   927  0013B8  2228               	addwfc	(??_GetQuartet+1)^0,f,c
   928  0013BA  BE28               	btfsc	(??_GetQuartet+1)^0,7,c
   929  0013BC  EFEB  F009         	goto	u1500
   930  0013C0  5028               	movf	(??_GetQuartet+1)^0,w,c
   931  0013C2  E107               	bnz	u1501
   932  0013C4  0E04               	movlw	4
   933  0013C6  5C27               	subwf	??_GetQuartet^0,w,c
   934  0013C8  B0D8               	btfsc	status,0,c
   935  0013CA  EFE9  F009         	goto	u1501
   936  0013CE  EFEB  F009         	goto	u1500
   937  0013D2                     u1501:
   938  0013D2  EF1E  F00A         	goto	l1612
   939  0013D6                     u1500:
   940  0013D6  5022               	movf	GetQuartet@y^0,w,c
   941  0013D8  6E27               	movwf	??_GetQuartet^0,c
   942  0013DA  6A28               	clrf	(??_GetQuartet+1)^0,c
   943  0013DC  0E01               	movlw	1
   944  0013DE  2627               	addwf	??_GetQuartet^0,f,c
   945  0013E0  0E00               	movlw	0
   946  0013E2  2228               	addwfc	(??_GetQuartet+1)^0,f,c
   947  0013E4  BE28               	btfsc	(??_GetQuartet+1)^0,7,c
   948  0013E6  EF00  F00A         	goto	u1510
   949  0013EA  5028               	movf	(??_GetQuartet+1)^0,w,c
   950  0013EC  E107               	bnz	u1511
   951  0013EE  0E08               	movlw	8
   952  0013F0  5C27               	subwf	??_GetQuartet^0,w,c
   953  0013F2  B0D8               	btfsc	status,0,c
   954  0013F4  EFFE  F009         	goto	u1511
   955  0013F8  EF00  F00A         	goto	u1510
   956  0013FC                     u1511:
   957  0013FC  EF1E  F00A         	goto	l1612
   958  001400                     u1510:
   959  001400  5022               	movf	GetQuartet@y^0,w,c
   960  001402  6E27               	movwf	??_GetQuartet^0,c
   961  001404  6A28               	clrf	(??_GetQuartet+1)^0,c
   962  001406  0E01               	movlw	1
   963  001408  2427               	addwf	??_GetQuartet^0,w,c
   964  00140A  0E00               	movlw	0
   965  00140C  2028               	addwfc	(??_GetQuartet+1)^0,w,c
   966  00140E  0B80               	andlw	128
   967  001410  A4D8               	btfss	status,2,c
   968  001412  EF0D  F00A         	goto	u1521
   969  001416  EF0F  F00A         	goto	u1520
   970  00141A                     u1521:
   971  00141A  EF1E  F00A         	goto	l1612
   972  00141E                     u1520:
   973  00141E  2822               	incf	GetQuartet@y^0,w,c
   974  001420  6E1B               	movwf	GetBoard@y^0,c
   975  001422  C025  F01C         	movff	GetQuartet@board,GetBoard@board
   976  001426  C026  F01D         	movff	GetQuartet@board+1,GetBoard@board+1
   977  00142A  2831               	incf	GetQuartet@x^0,w,c
   978  00142C  ECE6  F00D         	call	_GetBoard
   979  001430  6E27               	movwf	??_GetQuartet^0,c
   980  001432  5027               	movf	??_GetQuartet^0,w,c
   981  001434  6E2D               	movwf	_GetQuartet$472^0,c
   982  001436  6A2E               	clrf	(_GetQuartet$472+1)^0,c
   983  001438  EF22  F00A         	goto	l1614
   984  00143C                     l1612:
   985  00143C  0E00               	movlw	0
   986  00143E  6E2E               	movwf	(_GetQuartet$472+1)^0,c
   987  001440  0E01               	movlw	1
   988  001442  6E2D               	movwf	_GetQuartet$472^0,c
   989  001444                     l1614:
   990  001444  C023  FFD9         	movff	GetQuartet@shape,fsr2l
   991  001448  C024  FFDA         	movff	GetQuartet@shape+1,fsr2h
   992  00144C  B02D               	btfsc	_GetQuartet$472^0,0,c
   993  00144E  D002               	bra	u1535
   994  001450  9ADF               	bcf	indf2,5,c
   995  001452  D001               	bra	u1536
   996  001454                     u1535:
   997  001454  8ADF               	bsf	indf2,5,c
   998  001456                     u1536:
   999  001456                     
  1000                           ;main.c: 369:     shape->b3 = (((x) < 0) || ((x) > 3) || ((y + 1) > 7) || ((y + 1) < 0))
      +                           ? 1 : GetBoard(x, y + 1, board);
  1001  001456  0E04               	movlw	4
  1002  001458  6031               	cpfslt	GetQuartet@x^0,c
  1003  00145A  EF31  F00A         	goto	u1541
  1004  00145E  EF33  F00A         	goto	u1540
  1005  001462                     u1541:
  1006  001462  EF66  F00A         	goto	l1624
  1007  001466                     u1540:
  1008  001466  5022               	movf	GetQuartet@y^0,w,c
  1009  001468  6E27               	movwf	??_GetQuartet^0,c
  1010  00146A  6A28               	clrf	(??_GetQuartet+1)^0,c
  1011  00146C  0E01               	movlw	1
  1012  00146E  2627               	addwf	??_GetQuartet^0,f,c
  1013  001470  0E00               	movlw	0
  1014  001472  2228               	addwfc	(??_GetQuartet+1)^0,f,c
  1015  001474  BE28               	btfsc	(??_GetQuartet+1)^0,7,c
  1016  001476  EF48  F00A         	goto	u1550
  1017  00147A  5028               	movf	(??_GetQuartet+1)^0,w,c
  1018  00147C  E107               	bnz	u1551
  1019  00147E  0E08               	movlw	8
  1020  001480  5C27               	subwf	??_GetQuartet^0,w,c
  1021  001482  B0D8               	btfsc	status,0,c
  1022  001484  EF46  F00A         	goto	u1551
  1023  001488  EF48  F00A         	goto	u1550
  1024  00148C                     u1551:
  1025  00148C  EF66  F00A         	goto	l1624
  1026  001490                     u1550:
  1027  001490  5022               	movf	GetQuartet@y^0,w,c
  1028  001492  6E27               	movwf	??_GetQuartet^0,c
  1029  001494  6A28               	clrf	(??_GetQuartet+1)^0,c
  1030  001496  0E01               	movlw	1
  1031  001498  2427               	addwf	??_GetQuartet^0,w,c
  1032  00149A  0E00               	movlw	0
  1033  00149C  2028               	addwfc	(??_GetQuartet+1)^0,w,c
  1034  00149E  0B80               	andlw	128
  1035  0014A0  A4D8               	btfss	status,2,c
  1036  0014A2  EF55  F00A         	goto	u1561
  1037  0014A6  EF57  F00A         	goto	u1560
  1038  0014AA                     u1561:
  1039  0014AA  EF66  F00A         	goto	l1624
  1040  0014AE                     u1560:
  1041  0014AE  2822               	incf	GetQuartet@y^0,w,c
  1042  0014B0  6E1B               	movwf	GetBoard@y^0,c
  1043  0014B2  C025  F01C         	movff	GetQuartet@board,GetBoard@board
  1044  0014B6  C026  F01D         	movff	GetQuartet@board+1,GetBoard@board+1
  1045  0014BA  5031               	movf	GetQuartet@x^0,w,c
  1046  0014BC  ECE6  F00D         	call	_GetBoard
  1047  0014C0  6E27               	movwf	??_GetQuartet^0,c
  1048  0014C2  5027               	movf	??_GetQuartet^0,w,c
  1049  0014C4  6E2F               	movwf	_GetQuartet$473^0,c
  1050  0014C6  6A30               	clrf	(_GetQuartet$473+1)^0,c
  1051  0014C8  EF6A  F00A         	goto	l1626
  1052  0014CC                     l1624:
  1053  0014CC  0E00               	movlw	0
  1054  0014CE  6E30               	movwf	(_GetQuartet$473+1)^0,c
  1055  0014D0  0E01               	movlw	1
  1056  0014D2  6E2F               	movwf	_GetQuartet$473^0,c
  1057  0014D4                     l1626:
  1058  0014D4  C023  FFD9         	movff	GetQuartet@shape,fsr2l
  1059  0014D8  C024  FFDA         	movff	GetQuartet@shape+1,fsr2h
  1060  0014DC  B02F               	btfsc	_GetQuartet$473^0,0,c
  1061  0014DE  D002               	bra	u1575
  1062  0014E0  98DF               	bcf	indf2,4,c
  1063  0014E2  D001               	bra	u1576
  1064  0014E4                     u1575:
  1065  0014E4  88DF               	bsf	indf2,4,c
  1066  0014E6                     u1576:
  1067  0014E6  0012               	return		;funcret
  1068  0014E8                     __end_of_GetQuartet:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _GetBoard *****************
  1072 ;; Defined at:
  1073 ;;		line 250 in file "main.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  x               1    wreg     unsigned char 
  1076 ;;  y               1   26[COMRAM] unsigned char 
  1077 ;;  board           2   27[COMRAM] PTR struct .
  1078 ;;		 -> buffer(4), board(4), 
  1079 ;; Auto vars:     Size  Location     Type
  1080 ;;  x               1   31[COMRAM] unsigned char 
  1081 ;;  col             1   32[COMRAM] unsigned char 
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      unsigned char 
  1084 ;; Registers used:
  1085 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1086 ;; Tracked objects:
  1087 ;;		On entry : 0/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1091 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1095 ;;Total ram usage:        7 bytes
  1096 ;; Hardware stack levels used:    1
  1097 ;; Hardware stack levels required when called:    4
  1098 ;; This function calls:
  1099 ;;		Nothing
  1100 ;; This function is called by:
  1101 ;;		_GetQuartet
  1102 ;; This function uses a non-reentrant model
  1103 ;;
  1104                           
  1105                           	psect	text5
  1106  001BCC                     __ptext5:
  1107                           	callstack 0
  1108  001BCC                     _GetBoard:
  1109                           	callstack 23
  1110                           
  1111                           ;incstack = 0
  1112                           ;GetBoard@x stored from wreg
  1113  001BCC  6E20               	movwf	GetBoard@x^0,c
  1114  001BCE                     
  1115                           ;main.c: 250: char GetBoard(char x, char y, Board *board);main.c: 251: {;main.c: 252:   
      +                            char col;;main.c: 253:     switch (x)
  1116  001BCE  EF0F  F00E         	goto	l1486
  1117  001BD2                     l1476:
  1118                           
  1119                           ;main.c: 256:             col = board->col0;
  1120  001BD2  C01C  FFD9         	movff	GetBoard@board,fsr2l
  1121  001BD6  C01D  FFDA         	movff	GetBoard@board+1,fsr2h
  1122  001BDA  50DF               	movf	indf2,w,c
  1123  001BDC  6E21               	movwf	GetBoard@col^0,c
  1124                           
  1125                           ;main.c: 257:             break;
  1126  001BDE  EF2C  F00E         	goto	l1488
  1127  001BE2                     l1478:
  1128                           
  1129                           ;main.c: 259:             col = board->col1;
  1130  001BE2  EE20 F001          	lfsr	2,1
  1131  001BE6  501C               	movf	GetBoard@board^0,w,c
  1132  001BE8  26D9               	addwf	fsr2l,f,c
  1133  001BEA  501D               	movf	(GetBoard@board+1)^0,w,c
  1134  001BEC  22DA               	addwfc	fsr2h,f,c
  1135  001BEE  50DF               	movf	indf2,w,c
  1136  001BF0  6E21               	movwf	GetBoard@col^0,c
  1137                           
  1138                           ;main.c: 260:             break;
  1139  001BF2  EF2C  F00E         	goto	l1488
  1140  001BF6                     l1480:
  1141                           
  1142                           ;main.c: 262:             col = board->col2;
  1143  001BF6  EE20 F002          	lfsr	2,2
  1144  001BFA  501C               	movf	GetBoard@board^0,w,c
  1145  001BFC  26D9               	addwf	fsr2l,f,c
  1146  001BFE  501D               	movf	(GetBoard@board+1)^0,w,c
  1147  001C00  22DA               	addwfc	fsr2h,f,c
  1148  001C02  50DF               	movf	indf2,w,c
  1149  001C04  6E21               	movwf	GetBoard@col^0,c
  1150                           
  1151                           ;main.c: 263:             break;
  1152  001C06  EF2C  F00E         	goto	l1488
  1153  001C0A                     l1482:
  1154                           
  1155                           ;main.c: 265:             col = board->col3;
  1156  001C0A  EE20 F003          	lfsr	2,3
  1157  001C0E  501C               	movf	GetBoard@board^0,w,c
  1158  001C10  26D9               	addwf	fsr2l,f,c
  1159  001C12  501D               	movf	(GetBoard@board+1)^0,w,c
  1160  001C14  22DA               	addwfc	fsr2h,f,c
  1161  001C16  50DF               	movf	indf2,w,c
  1162  001C18  6E21               	movwf	GetBoard@col^0,c
  1163                           
  1164                           ;main.c: 266:             break;
  1165  001C1A  EF2C  F00E         	goto	l1488
  1166  001C1E                     l1486:
  1167  001C1E  5020               	movf	GetBoard@x^0,w,c
  1168  001C20  6E1E               	movwf	??_GetBoard^0,c
  1169  001C22  6A1F               	clrf	(??_GetBoard+1)^0,c
  1170                           
  1171                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1172                           ; Switch size 1, requested type "simple"
  1173                           ; Number of cases is 1, Range of values is 0 to 0
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            4     3 (average)
  1177                           ;	Chosen strategy is simple_byte
  1178  001C24  501F               	movf	(??_GetBoard+1)^0,w,c
  1179  001C26  0A00               	xorlw	0	; case 0
  1180  001C28  B4D8               	btfsc	status,2,c
  1181  001C2A  EF19  F00E         	goto	l1908
  1182  001C2E  EF2C  F00E         	goto	l1488
  1183  001C32                     l1908:
  1184                           
  1185                           ; Switch size 1, requested type "simple"
  1186                           ; Number of cases is 4, Range of values is 0 to 3
  1187                           ; switch strategies available:
  1188                           ; Name         Instructions Cycles
  1189                           ; simple_byte           13     7 (average)
  1190                           ;	Chosen strategy is simple_byte
  1191  001C32  501E               	movf	??_GetBoard^0,w,c
  1192  001C34  0A00               	xorlw	0	; case 0
  1193  001C36  B4D8               	btfsc	status,2,c
  1194  001C38  EFE9  F00D         	goto	l1476
  1195  001C3C  0A01               	xorlw	1	; case 1
  1196  001C3E  B4D8               	btfsc	status,2,c
  1197  001C40  EFF1  F00D         	goto	l1478
  1198  001C44  0A03               	xorlw	3	; case 2
  1199  001C46  B4D8               	btfsc	status,2,c
  1200  001C48  EFFB  F00D         	goto	l1480
  1201  001C4C  0A01               	xorlw	1	; case 3
  1202  001C4E  B4D8               	btfsc	status,2,c
  1203  001C50  EF05  F00E         	goto	l1482
  1204  001C54  EF2C  F00E         	goto	l1488
  1205  001C58                     l1488:
  1206                           
  1207                           ;main.c: 269:     return ((col >> y) & 0x01);
  1208  001C58  C01B  F01E         	movff	GetBoard@y,??_GetBoard
  1209  001C5C  C021  F01F         	movff	GetBoard@col,??_GetBoard+1
  1210  001C60  2A1E               	incf	??_GetBoard^0,f,c
  1211  001C62  EF35  F00E         	goto	u1174
  1212  001C66                     u1175:
  1213  001C66  90D8               	bcf	status,0,c
  1214  001C68  321F               	rrcf	(??_GetBoard+1)^0,f,c
  1215  001C6A                     u1174:
  1216  001C6A  2E1E               	decfsz	??_GetBoard^0,f,c
  1217  001C6C  EF33  F00E         	goto	u1175
  1218  001C70  501F               	movf	(??_GetBoard+1)^0,w,c
  1219  001C72  0B01               	andlw	1
  1220  001C74  0012               	return		;funcret
  1221  001C76                     __end_of_GetBoard:
  1222                           	callstack 0
  1223                           
  1224 ;; *************** function _UpdateBoard *****************
  1225 ;; Defined at:
  1226 ;;		line 334 in file "main.c"
  1227 ;; Parameters:    Size  Location     Type
  1228 ;;		None
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  bq              1    0        struct .
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		None
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1244 ;;Total ram usage:        0 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    4
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_Update
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text6
  1255  001F44                     __ptext6:
  1256                           	callstack 0
  1257  001F44                     _UpdateBoard:
  1258                           	callstack 25
  1259  001F44                     
  1260                           ;main.c: 336:     INTCONbits.TMR0IE = 0;
  1261  001F44  9AF2               	bcf	242,5,c	;volatile
  1262                           
  1263                           ;main.c: 337:     Shape bq;;main.c: 342:     INTCONbits.TMR0IE = 1;
  1264  001F46  8AF2               	bsf	242,5,c	;volatile
  1265  001F48  0012               	return		;funcret
  1266  001F4A                     __end_of_UpdateBoard:
  1267                           	callstack 0
  1268                           
  1269 ;; *************** function _ListenPortA *****************
  1270 ;; Defined at:
  1271 ;;		line 272 in file "main.c"
  1272 ;; Parameters:    Size  Location     Type
  1273 ;;		None
  1274 ;; Auto vars:     Size  Location     Type
  1275 ;;  currentPortA    1   51[COMRAM] unsigned char 
  1276 ;;  changedBits     1   50[COMRAM] unsigned char 
  1277 ;;  y               1    0        unsigned char 
  1278 ;;  x               1    0        unsigned char 
  1279 ;; Return value:  Size  Location     Type
  1280 ;;                  1    wreg      void 
  1281 ;; Registers used:
  1282 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1283 ;; Tracked objects:
  1284 ;;		On entry : 0/0
  1285 ;;		On exit  : 0/0
  1286 ;;		Unchanged: 0/0
  1287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1289 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;Total ram usage:        4 bytes
  1293 ;; Hardware stack levels used:    1
  1294 ;; Hardware stack levels required when called:    6
  1295 ;; This function calls:
  1296 ;;		_ShapeInBounds
  1297 ;; This function is called by:
  1298 ;;		_Update
  1299 ;; This function uses a non-reentrant model
  1300 ;;
  1301                           
  1302                           	psect	text7
  1303  001880                     __ptext7:
  1304                           	callstack 0
  1305  001880                     _ListenPortA:
  1306                           	callstack 23
  1307  001880                     
  1308                           ;main.c: 275:     char currentPortA = PORTA;
  1309  001880  CF80 F034          	movff	3968,ListenPortA@currentPortA	;volatile
  1310  001884                     
  1311                           ;main.c: 277:     char changedBits = currentPortA ^ lastPortA;
  1312  001884  5034               	movf	ListenPortA@currentPortA^0,w,c
  1313  001886  1844               	xorwf	_lastPortA^0,w,c
  1314  001888  6E33               	movwf	ListenPortA@changedBits^0,c
  1315  00188A                     
  1316                           ;main.c: 282:     if (changedBits & (1 << 0))
  1317  00188A  A033               	btfss	ListenPortA@changedBits^0,0,c
  1318  00188C  EF4A  F00C         	goto	u1771
  1319  001890  EF4C  F00C         	goto	u1770
  1320  001894                     u1771:
  1321  001894  EF61  F00C         	goto	l1704
  1322  001898                     u1770:
  1323  001898                     
  1324                           ;main.c: 283:     {;main.c: 284:         if (currentPortA & (1 << 0))
  1325  001898  A034               	btfss	ListenPortA@currentPortA^0,0,c
  1326  00189A  EF51  F00C         	goto	u1781
  1327  00189E  EF53  F00C         	goto	u1780
  1328  0018A2                     u1781:
  1329  0018A2  EF61  F00C         	goto	l1704
  1330  0018A6                     u1780:
  1331  0018A6                     
  1332                           ;main.c: 285:         {;main.c: 286:             if(ShapeInBounds(1, 0))
  1333  0018A6  0E00               	movlw	0
  1334  0018A8  6E25               	movwf	ShapeInBounds@dir1^0,c
  1335  0018AA  0E01               	movlw	1
  1336  0018AC  ECB8  F00C         	call	_ShapeInBounds
  1337  0018B0  0900               	iorlw	0
  1338  0018B2  B4D8               	btfsc	status,2,c
  1339  0018B4  EF5E  F00C         	goto	u1791
  1340  0018B8  EF60  F00C         	goto	u1790
  1341  0018BC                     u1791:
  1342  0018BC  EF61  F00C         	goto	l1704
  1343  0018C0                     u1790:
  1344  0018C0                     
  1345                           ;main.c: 287:             {;main.c: 288:                 curTet.x++;
  1346  0018C0  2A40               	incf	(_curTet+1)^0,f,c
  1347  0018C2                     l1704:
  1348                           
  1349                           ;main.c: 293:     if (changedBits & (1 << 1))
  1350  0018C2  A233               	btfss	ListenPortA@changedBits^0,1,c
  1351  0018C4  EF66  F00C         	goto	u1801
  1352  0018C8  EF68  F00C         	goto	u1800
  1353  0018CC                     u1801:
  1354  0018CC  EF7D  F00C         	goto	l1712
  1355  0018D0                     u1800:
  1356  0018D0                     
  1357                           ;main.c: 294:     {;main.c: 295:         if (currentPortA & (1 << 1))
  1358  0018D0  A234               	btfss	ListenPortA@currentPortA^0,1,c
  1359  0018D2  EF6D  F00C         	goto	u1811
  1360  0018D6  EF6F  F00C         	goto	u1810
  1361  0018DA                     u1811:
  1362  0018DA  EF7D  F00C         	goto	l1712
  1363  0018DE                     u1810:
  1364  0018DE                     
  1365                           ;main.c: 296:         {;main.c: 297:             if(ShapeInBounds(1, 1))
  1366  0018DE  0E01               	movlw	1
  1367  0018E0  6E25               	movwf	ShapeInBounds@dir1^0,c
  1368  0018E2  0E01               	movlw	1
  1369  0018E4  ECB8  F00C         	call	_ShapeInBounds
  1370  0018E8  0900               	iorlw	0
  1371  0018EA  B4D8               	btfsc	status,2,c
  1372  0018EC  EF7A  F00C         	goto	u1821
  1373  0018F0  EF7C  F00C         	goto	u1820
  1374  0018F4                     u1821:
  1375  0018F4  EF7D  F00C         	goto	l1712
  1376  0018F8                     u1820:
  1377  0018F8                     
  1378                           ;main.c: 298:             {;main.c: 299:                 curTet.y--;
  1379  0018F8  0641               	decf	(_curTet+2)^0,f,c
  1380  0018FA                     l1712:
  1381                           
  1382                           ;main.c: 304:     if (changedBits & (1 << 2))
  1383  0018FA  A433               	btfss	ListenPortA@changedBits^0,2,c
  1384  0018FC  EF82  F00C         	goto	u1831
  1385  001900  EF84  F00C         	goto	u1830
  1386  001904                     u1831:
  1387  001904  EF99  F00C         	goto	l1720
  1388  001908                     u1830:
  1389  001908                     
  1390                           ;main.c: 305:     {;main.c: 306:         if (currentPortA & (1 << 2))
  1391  001908  A434               	btfss	ListenPortA@currentPortA^0,2,c
  1392  00190A  EF89  F00C         	goto	u1841
  1393  00190E  EF8B  F00C         	goto	u1840
  1394  001912                     u1841:
  1395  001912  EF99  F00C         	goto	l1720
  1396  001916                     u1840:
  1397  001916                     
  1398                           ;main.c: 307:         {;main.c: 308:             if(ShapeInBounds(0, 1))
  1399  001916  0E01               	movlw	1
  1400  001918  6E25               	movwf	ShapeInBounds@dir1^0,c
  1401  00191A  0E00               	movlw	0
  1402  00191C  ECB8  F00C         	call	_ShapeInBounds
  1403  001920  0900               	iorlw	0
  1404  001922  B4D8               	btfsc	status,2,c
  1405  001924  EF96  F00C         	goto	u1851
  1406  001928  EF98  F00C         	goto	u1850
  1407  00192C                     u1851:
  1408  00192C  EF99  F00C         	goto	l1720
  1409  001930                     u1850:
  1410  001930                     
  1411                           ;main.c: 309:             {;main.c: 310:                 curTet.y++;
  1412  001930  2A41               	incf	(_curTet+2)^0,f,c
  1413  001932                     l1720:
  1414                           
  1415                           ;main.c: 315:     if (changedBits & (1 << 3))
  1416  001932  A633               	btfss	ListenPortA@changedBits^0,3,c
  1417  001934  EF9E  F00C         	goto	u1861
  1418  001938  EFA0  F00C         	goto	u1860
  1419  00193C                     u1861:
  1420  00193C  EFB5  F00C         	goto	l1728
  1421  001940                     u1860:
  1422  001940                     
  1423                           ;main.c: 316:     {;main.c: 317:         if (currentPortA & (1 << 3))
  1424  001940  A634               	btfss	ListenPortA@currentPortA^0,3,c
  1425  001942  EFA5  F00C         	goto	u1871
  1426  001946  EFA7  F00C         	goto	u1870
  1427  00194A                     u1871:
  1428  00194A  EFB5  F00C         	goto	l1728
  1429  00194E                     u1870:
  1430  00194E                     
  1431                           ;main.c: 318:         {;main.c: 319:             if(ShapeInBounds(0, 0))
  1432  00194E  0E00               	movlw	0
  1433  001950  6E25               	movwf	ShapeInBounds@dir1^0,c
  1434  001952  0E00               	movlw	0
  1435  001954  ECB8  F00C         	call	_ShapeInBounds
  1436  001958  0900               	iorlw	0
  1437  00195A  B4D8               	btfsc	status,2,c
  1438  00195C  EFB2  F00C         	goto	u1881
  1439  001960  EFB4  F00C         	goto	u1880
  1440  001964                     u1881:
  1441  001964  EFB5  F00C         	goto	l1728
  1442  001968                     u1880:
  1443  001968                     
  1444                           ;main.c: 320:             {;main.c: 321:                 curTet.x--;
  1445  001968  0640               	decf	(_curTet+1)^0,f,c
  1446  00196A                     l1728:
  1447                           
  1448                           ;main.c: 327:     lastPortA = currentPortA;
  1449  00196A  C034  F044         	movff	ListenPortA@currentPortA,_lastPortA
  1450  00196E  0012               	return		;funcret
  1451  001970                     __end_of_ListenPortA:
  1452                           	callstack 0
  1453                           
  1454 ;; *************** function _ShapeInBounds *****************
  1455 ;; Defined at:
  1456 ;;		line 417 in file "main.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;  dir0            1    wreg     unsigned char 
  1459 ;;  dir1            1   36[COMRAM] unsigned char 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  dir0            1   46[COMRAM] unsigned char 
  1462 ;;  shape           1   47[COMRAM] struct .
  1463 ;;  returnVal       1   45[COMRAM] unsigned char 
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      unsigned char 
  1466 ;; Registers used:
  1467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1473 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1474 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1476 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1477 ;;Total ram usage:       12 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; Hardware stack levels required when called:    5
  1480 ;; This function calls:
  1481 ;;		_BitwiseAnd
  1482 ;;		_GetQuartet2
  1483 ;; This function is called by:
  1484 ;;		_ListenPortA
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           	psect	text8
  1489  001970                     __ptext8:
  1490                           	callstack 0
  1491  001970                     _ShapeInBounds:
  1492                           	callstack 23
  1493                           
  1494                           ;incstack = 0
  1495                           ;ShapeInBounds@dir0 stored from wreg
  1496  001970  6E2F               	movwf	ShapeInBounds@dir0^0,c
  1497  001972                     
  1498                           ;main.c: 417: char ShapeInBounds(char dir0, char dir1);main.c: 418: {;main.c: 419:     S
      +                          hape shape;;main.c: 421:     GetQuartet2((dir1 == 0) ? ( dir0 == 0 ? curTet.x - 1 : curT
      +                          et.x + 1) : curTet.x,
  1499  001972  0425               	decf	ShapeInBounds@dir1^0,w,c
  1500  001974  B4D8               	btfsc	status,2,c
  1501  001976  EFBF  F00C         	goto	u1361
  1502  00197A  EFC1  F00C         	goto	u1360
  1503  00197E                     u1361:
  1504  00197E  EFC6  F00C         	goto	l1552
  1505  001982                     u1360:
  1506  001982  C041  F026         	movff	_curTet+2,_ShapeInBounds$549
  1507  001986  6A27               	clrf	(_ShapeInBounds$549+1)^0,c
  1508  001988  EFE0  F00C         	goto	l1560
  1509  00198C                     l1552:
  1510  00198C  502F               	movf	ShapeInBounds@dir0^0,w,c
  1511  00198E  B4D8               	btfsc	status,2,c
  1512  001990  EFCC  F00C         	goto	u1371
  1513  001994  EFCE  F00C         	goto	u1370
  1514  001998                     u1371:
  1515  001998  EFD6  F00C         	goto	l1556
  1516  00199C                     u1370:
  1517  00199C  0EFF               	movlw	255
  1518  00199E  2441               	addwf	(_curTet+2)^0,w,c
  1519  0019A0  6E28               	movwf	_ShapeInBounds$550^0,c
  1520  0019A2  6A29               	clrf	(_ShapeInBounds$550+1)^0,c
  1521  0019A4  0EFF               	movlw	255
  1522  0019A6  2229               	addwfc	(_ShapeInBounds$550+1)^0,f,c
  1523  0019A8  EFDC  F00C         	goto	l1558
  1524  0019AC                     l1556:
  1525  0019AC  0E01               	movlw	1
  1526  0019AE  2441               	addwf	(_curTet+2)^0,w,c
  1527  0019B0  6E28               	movwf	_ShapeInBounds$550^0,c
  1528  0019B2  6A29               	clrf	(_ShapeInBounds$550+1)^0,c
  1529  0019B4  0E00               	movlw	0
  1530  0019B6  2229               	addwfc	(_ShapeInBounds$550+1)^0,f,c
  1531  0019B8                     l1558:
  1532  0019B8  C028  F026         	movff	_ShapeInBounds$550,_ShapeInBounds$549
  1533  0019BC  C029  F027         	movff	_ShapeInBounds$550+1,_ShapeInBounds$549+1
  1534  0019C0                     l1560:
  1535  0019C0  5025               	movf	ShapeInBounds@dir1^0,w,c
  1536  0019C2  B4D8               	btfsc	status,2,c
  1537  0019C4  EFE6  F00C         	goto	u1381
  1538  0019C8  EFE8  F00C         	goto	u1380
  1539  0019CC                     u1381:
  1540  0019CC  EFED  F00C         	goto	l1564
  1541  0019D0                     u1380:
  1542  0019D0  C040  F02A         	movff	_curTet+1,_ShapeInBounds$551
  1543  0019D4  6A2B               	clrf	(_ShapeInBounds$551+1)^0,c
  1544  0019D6  EF07  F00D         	goto	l1572
  1545  0019DA                     l1564:
  1546  0019DA  502F               	movf	ShapeInBounds@dir0^0,w,c
  1547  0019DC  B4D8               	btfsc	status,2,c
  1548  0019DE  EFF3  F00C         	goto	u1391
  1549  0019E2  EFF5  F00C         	goto	u1390
  1550  0019E6                     u1391:
  1551  0019E6  EFFD  F00C         	goto	l1568
  1552  0019EA                     u1390:
  1553  0019EA  0E01               	movlw	1
  1554  0019EC  2440               	addwf	(_curTet+1)^0,w,c
  1555  0019EE  6E2C               	movwf	_ShapeInBounds$552^0,c
  1556  0019F0  6A2D               	clrf	(_ShapeInBounds$552+1)^0,c
  1557  0019F2  0E00               	movlw	0
  1558  0019F4  222D               	addwfc	(_ShapeInBounds$552+1)^0,f,c
  1559  0019F6  EF03  F00D         	goto	l1570
  1560  0019FA                     l1568:
  1561  0019FA  0EFF               	movlw	255
  1562  0019FC  2440               	addwf	(_curTet+1)^0,w,c
  1563  0019FE  6E2C               	movwf	_ShapeInBounds$552^0,c
  1564  001A00  6A2D               	clrf	(_ShapeInBounds$552+1)^0,c
  1565  001A02  0EFF               	movlw	255
  1566  001A04  222D               	addwfc	(_ShapeInBounds$552+1)^0,f,c
  1567  001A06                     l1570:
  1568  001A06  C02C  F02A         	movff	_ShapeInBounds$552,_ShapeInBounds$551
  1569  001A0A  C02D  F02B         	movff	_ShapeInBounds$552+1,_ShapeInBounds$551+1
  1570  001A0E                     l1572:
  1571  001A0E  C026  F01B         	movff	_ShapeInBounds$549,GetQuartet2@y
  1572  001A12  0E30               	movlw	low ShapeInBounds@shape
  1573  001A14  6E1C               	movwf	GetQuartet2@shape^0,c
  1574  001A16  0E00               	movlw	high ShapeInBounds@shape
  1575  001A18  6E1D               	movwf	(GetQuartet2@shape+1)^0,c
  1576  001A1A  502A               	movf	_ShapeInBounds$551^0,w,c
  1577  001A1C  EC74  F00A         	call	_GetQuartet2
  1578  001A20                     
  1579                           ;main.c: 425:     char returnVal = BitwiseAnd(shape, curTet.shape);
  1580  001A20  C042  F01B         	movff	_curTet+3,BitwiseAnd@shape2
  1581  001A24  5030               	movf	ShapeInBounds@shape^0,w,c
  1582  001A26  EC57  F00F         	call	_BitwiseAnd
  1583  001A2A  6E2E               	movwf	ShapeInBounds@returnVal^0,c
  1584  001A2C                     
  1585                           ;main.c: 427:     return !returnVal;
  1586  001A2C  502E               	movf	ShapeInBounds@returnVal^0,w,c
  1587  001A2E  B4D8               	btfsc	status,2,c
  1588  001A30  EF1C  F00D         	goto	u1401
  1589  001A34  EF1F  F00D         	goto	u1400
  1590  001A38                     u1401:
  1591  001A38  0E01               	movlw	1
  1592  001A3A  EF20  F00D         	goto	u1410
  1593  001A3E                     u1400:
  1594  001A3E  0E00               	movlw	0
  1595  001A40                     u1410:
  1596  001A40  0012               	return		;funcret
  1597  001A42                     __end_of_ShapeInBounds:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _GetQuartet2 *****************
  1601 ;; Defined at:
  1602 ;;		line 372 in file "main.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  x               1    wreg     unsigned char 
  1605 ;;  y               1   26[COMRAM] unsigned char 
  1606 ;;  shape           2   27[COMRAM] PTR struct .
  1607 ;;		 -> ShapeInBounds@shape(1), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  x               1   35[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1619 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;Total ram usage:       10 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    4
  1626 ;; This function calls:
  1627 ;;		Nothing
  1628 ;; This function is called by:
  1629 ;;		_ShapeInBounds
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text9
  1634  0014E8                     __ptext9:
  1635                           	callstack 0
  1636  0014E8                     _GetQuartet2:
  1637                           	callstack 23
  1638                           
  1639                           ;incstack = 0
  1640                           ;GetQuartet2@x stored from wreg
  1641  0014E8  6E24               	movwf	GetQuartet2@x^0,c
  1642  0014EA                     
  1643                           ;main.c: 372: void GetQuartet2(char x, char y, Shape *shape);main.c: 373: {;main.c: 374:
      +                               shape->b0 = (((x) < 0) || ((x) > 3) || ((y) > 7) || ((y) < 0)) ? 1 : 0;
  1644  0014EA  0E01               	movlw	1
  1645  0014EC  6E20               	movwf	_GetQuartet2$486^0,c
  1646  0014EE  0E04               	movlw	4
  1647  0014F0  6024               	cpfslt	GetQuartet2@x^0,c
  1648  0014F2  EF7D  F00A         	goto	u1201
  1649  0014F6  EF7F  F00A         	goto	u1200
  1650  0014FA                     u1201:
  1651  0014FA  EF89  F00A         	goto	l1508
  1652  0014FE                     u1200:
  1653  0014FE  0E08               	movlw	8
  1654  001500  601B               	cpfslt	GetQuartet2@y^0,c
  1655  001502  EF85  F00A         	goto	u1211
  1656  001506  EF87  F00A         	goto	u1210
  1657  00150A                     u1211:
  1658  00150A  EF89  F00A         	goto	l1508
  1659  00150E                     u1210:
  1660  00150E  0E00               	movlw	0
  1661  001510  6E20               	movwf	_GetQuartet2$486^0,c
  1662  001512                     l1508:
  1663  001512  C01C  FFD9         	movff	GetQuartet2@shape,fsr2l
  1664  001516  C01D  FFDA         	movff	GetQuartet2@shape+1,fsr2h
  1665  00151A  B020               	btfsc	_GetQuartet2$486^0,0,c
  1666  00151C  D002               	bra	u1225
  1667  00151E  9EDF               	bcf	indf2,7,c
  1668  001520  D001               	bra	u1226
  1669  001522                     u1225:
  1670  001522  8EDF               	bsf	indf2,7,c
  1671  001524                     u1226:
  1672  001524                     
  1673                           ;main.c: 375:     shape->b1 = (((x + 1) < 0) || ((x + 1) > 3) || ((y) > 7) || ((y) < 0))
      +                           ? 1 : 0;
  1674  001524  0E01               	movlw	1
  1675  001526  6E21               	movwf	_GetQuartet2$487^0,c
  1676  001528  5024               	movf	GetQuartet2@x^0,w,c
  1677  00152A  6E1E               	movwf	??_GetQuartet2^0,c
  1678  00152C  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1679  00152E  0E01               	movlw	1
  1680  001530  241E               	addwf	??_GetQuartet2^0,w,c
  1681  001532  0E00               	movlw	0
  1682  001534  201F               	addwfc	(??_GetQuartet2+1)^0,w,c
  1683  001536  0B80               	andlw	128
  1684  001538  A4D8               	btfss	status,2,c
  1685  00153A  EFA1  F00A         	goto	u1231
  1686  00153E  EFA3  F00A         	goto	u1230
  1687  001542                     u1231:
  1688  001542  EFC2  F00A         	goto	l1520
  1689  001546                     u1230:
  1690  001546  5024               	movf	GetQuartet2@x^0,w,c
  1691  001548  6E1E               	movwf	??_GetQuartet2^0,c
  1692  00154A  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1693  00154C  0E01               	movlw	1
  1694  00154E  261E               	addwf	??_GetQuartet2^0,f,c
  1695  001550  0E00               	movlw	0
  1696  001552  221F               	addwfc	(??_GetQuartet2+1)^0,f,c
  1697  001554  BE1F               	btfsc	(??_GetQuartet2+1)^0,7,c
  1698  001556  EFB8  F00A         	goto	u1240
  1699  00155A  501F               	movf	(??_GetQuartet2+1)^0,w,c
  1700  00155C  E107               	bnz	u1241
  1701  00155E  0E04               	movlw	4
  1702  001560  5C1E               	subwf	??_GetQuartet2^0,w,c
  1703  001562  B0D8               	btfsc	status,0,c
  1704  001564  EFB6  F00A         	goto	u1241
  1705  001568  EFB8  F00A         	goto	u1240
  1706  00156C                     u1241:
  1707  00156C  EFC2  F00A         	goto	l1520
  1708  001570                     u1240:
  1709  001570  0E08               	movlw	8
  1710  001572  601B               	cpfslt	GetQuartet2@y^0,c
  1711  001574  EFBE  F00A         	goto	u1251
  1712  001578  EFC0  F00A         	goto	u1250
  1713  00157C                     u1251:
  1714  00157C  EFC2  F00A         	goto	l1520
  1715  001580                     u1250:
  1716  001580  0E00               	movlw	0
  1717  001582  6E21               	movwf	_GetQuartet2$487^0,c
  1718  001584                     l1520:
  1719  001584  C01C  FFD9         	movff	GetQuartet2@shape,fsr2l
  1720  001588  C01D  FFDA         	movff	GetQuartet2@shape+1,fsr2h
  1721  00158C  B021               	btfsc	_GetQuartet2$487^0,0,c
  1722  00158E  D002               	bra	u1265
  1723  001590  9CDF               	bcf	indf2,6,c
  1724  001592  D001               	bra	u1266
  1725  001594                     u1265:
  1726  001594  8CDF               	bsf	indf2,6,c
  1727  001596                     u1266:
  1728  001596                     
  1729                           ;main.c: 376:     shape->b2 = (((x + 1) < 0) || ((x + 1) > 3) || ((y + 1) > 7) || ((y + 
      +                          1) < 0)) ? 1 : 0;
  1730  001596  0E01               	movlw	1
  1731  001598  6E22               	movwf	_GetQuartet2$488^0,c
  1732  00159A  5024               	movf	GetQuartet2@x^0,w,c
  1733  00159C  6E1E               	movwf	??_GetQuartet2^0,c
  1734  00159E  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1735  0015A0  0E01               	movlw	1
  1736  0015A2  241E               	addwf	??_GetQuartet2^0,w,c
  1737  0015A4  0E00               	movlw	0
  1738  0015A6  201F               	addwfc	(??_GetQuartet2+1)^0,w,c
  1739  0015A8  0B80               	andlw	128
  1740  0015AA  A4D8               	btfss	status,2,c
  1741  0015AC  EFDA  F00A         	goto	u1271
  1742  0015B0  EFDC  F00A         	goto	u1270
  1743  0015B4                     u1271:
  1744  0015B4  EF17  F00B         	goto	l1534
  1745  0015B8                     u1270:
  1746  0015B8  5024               	movf	GetQuartet2@x^0,w,c
  1747  0015BA  6E1E               	movwf	??_GetQuartet2^0,c
  1748  0015BC  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1749  0015BE  0E01               	movlw	1
  1750  0015C0  261E               	addwf	??_GetQuartet2^0,f,c
  1751  0015C2  0E00               	movlw	0
  1752  0015C4  221F               	addwfc	(??_GetQuartet2+1)^0,f,c
  1753  0015C6  BE1F               	btfsc	(??_GetQuartet2+1)^0,7,c
  1754  0015C8  EFF1  F00A         	goto	u1280
  1755  0015CC  501F               	movf	(??_GetQuartet2+1)^0,w,c
  1756  0015CE  E107               	bnz	u1281
  1757  0015D0  0E04               	movlw	4
  1758  0015D2  5C1E               	subwf	??_GetQuartet2^0,w,c
  1759  0015D4  B0D8               	btfsc	status,0,c
  1760  0015D6  EFEF  F00A         	goto	u1281
  1761  0015DA  EFF1  F00A         	goto	u1280
  1762  0015DE                     u1281:
  1763  0015DE  EF17  F00B         	goto	l1534
  1764  0015E2                     u1280:
  1765  0015E2  501B               	movf	GetQuartet2@y^0,w,c
  1766  0015E4  6E1E               	movwf	??_GetQuartet2^0,c
  1767  0015E6  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1768  0015E8  0E01               	movlw	1
  1769  0015EA  261E               	addwf	??_GetQuartet2^0,f,c
  1770  0015EC  0E00               	movlw	0
  1771  0015EE  221F               	addwfc	(??_GetQuartet2+1)^0,f,c
  1772  0015F0  BE1F               	btfsc	(??_GetQuartet2+1)^0,7,c
  1773  0015F2  EF06  F00B         	goto	u1290
  1774  0015F6  501F               	movf	(??_GetQuartet2+1)^0,w,c
  1775  0015F8  E107               	bnz	u1291
  1776  0015FA  0E08               	movlw	8
  1777  0015FC  5C1E               	subwf	??_GetQuartet2^0,w,c
  1778  0015FE  B0D8               	btfsc	status,0,c
  1779  001600  EF04  F00B         	goto	u1291
  1780  001604  EF06  F00B         	goto	u1290
  1781  001608                     u1291:
  1782  001608  EF17  F00B         	goto	l1534
  1783  00160C                     u1290:
  1784  00160C  501B               	movf	GetQuartet2@y^0,w,c
  1785  00160E  6E1E               	movwf	??_GetQuartet2^0,c
  1786  001610  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1787  001612  0E01               	movlw	1
  1788  001614  241E               	addwf	??_GetQuartet2^0,w,c
  1789  001616  0E00               	movlw	0
  1790  001618  201F               	addwfc	(??_GetQuartet2+1)^0,w,c
  1791  00161A  0B80               	andlw	128
  1792  00161C  A4D8               	btfss	status,2,c
  1793  00161E  EF13  F00B         	goto	u1301
  1794  001622  EF15  F00B         	goto	u1300
  1795  001626                     u1301:
  1796  001626  EF17  F00B         	goto	l1534
  1797  00162A                     u1300:
  1798  00162A  0E00               	movlw	0
  1799  00162C  6E22               	movwf	_GetQuartet2$488^0,c
  1800  00162E                     l1534:
  1801  00162E  C01C  FFD9         	movff	GetQuartet2@shape,fsr2l
  1802  001632  C01D  FFDA         	movff	GetQuartet2@shape+1,fsr2h
  1803  001636  B022               	btfsc	_GetQuartet2$488^0,0,c
  1804  001638  D002               	bra	u1315
  1805  00163A  9ADF               	bcf	indf2,5,c
  1806  00163C  D001               	bra	u1316
  1807  00163E                     u1315:
  1808  00163E  8ADF               	bsf	indf2,5,c
  1809  001640                     u1316:
  1810  001640                     
  1811                           ;main.c: 377:     shape->b3 = (((x) < 0) || ((x) > 3) || ((y + 1) > 7) || ((y + 1) < 0))
      +                           ? 1 : 0;
  1812  001640  0E01               	movlw	1
  1813  001642  6E23               	movwf	_GetQuartet2$489^0,c
  1814  001644  0E04               	movlw	4
  1815  001646  6024               	cpfslt	GetQuartet2@x^0,c
  1816  001648  EF28  F00B         	goto	u1321
  1817  00164C  EF2A  F00B         	goto	u1320
  1818  001650                     u1321:
  1819  001650  EF50  F00B         	goto	l1546
  1820  001654                     u1320:
  1821  001654  501B               	movf	GetQuartet2@y^0,w,c
  1822  001656  6E1E               	movwf	??_GetQuartet2^0,c
  1823  001658  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1824  00165A  0E01               	movlw	1
  1825  00165C  261E               	addwf	??_GetQuartet2^0,f,c
  1826  00165E  0E00               	movlw	0
  1827  001660  221F               	addwfc	(??_GetQuartet2+1)^0,f,c
  1828  001662  BE1F               	btfsc	(??_GetQuartet2+1)^0,7,c
  1829  001664  EF3F  F00B         	goto	u1330
  1830  001668  501F               	movf	(??_GetQuartet2+1)^0,w,c
  1831  00166A  E107               	bnz	u1331
  1832  00166C  0E08               	movlw	8
  1833  00166E  5C1E               	subwf	??_GetQuartet2^0,w,c
  1834  001670  B0D8               	btfsc	status,0,c
  1835  001672  EF3D  F00B         	goto	u1331
  1836  001676  EF3F  F00B         	goto	u1330
  1837  00167A                     u1331:
  1838  00167A  EF50  F00B         	goto	l1546
  1839  00167E                     u1330:
  1840  00167E  501B               	movf	GetQuartet2@y^0,w,c
  1841  001680  6E1E               	movwf	??_GetQuartet2^0,c
  1842  001682  6A1F               	clrf	(??_GetQuartet2+1)^0,c
  1843  001684  0E01               	movlw	1
  1844  001686  241E               	addwf	??_GetQuartet2^0,w,c
  1845  001688  0E00               	movlw	0
  1846  00168A  201F               	addwfc	(??_GetQuartet2+1)^0,w,c
  1847  00168C  0B80               	andlw	128
  1848  00168E  A4D8               	btfss	status,2,c
  1849  001690  EF4C  F00B         	goto	u1341
  1850  001694  EF4E  F00B         	goto	u1340
  1851  001698                     u1341:
  1852  001698  EF50  F00B         	goto	l1546
  1853  00169C                     u1340:
  1854  00169C  0E00               	movlw	0
  1855  00169E  6E23               	movwf	_GetQuartet2$489^0,c
  1856  0016A0                     l1546:
  1857  0016A0  C01C  FFD9         	movff	GetQuartet2@shape,fsr2l
  1858  0016A4  C01D  FFDA         	movff	GetQuartet2@shape+1,fsr2h
  1859  0016A8  B023               	btfsc	_GetQuartet2$489^0,0,c
  1860  0016AA  D002               	bra	u1355
  1861  0016AC  98DF               	bcf	indf2,4,c
  1862  0016AE  D001               	bra	u1356
  1863  0016B0                     u1355:
  1864  0016B0  88DF               	bsf	indf2,4,c
  1865  0016B2                     u1356:
  1866  0016B2  0012               	return		;funcret
  1867  0016B4                     __end_of_GetQuartet2:
  1868                           	callstack 0
  1869                           
  1870 ;; *************** function _BitwiseAnd *****************
  1871 ;; Defined at:
  1872 ;;		line 358 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  shape1          1    wreg     struct .
  1875 ;;  shape2          1   26[COMRAM] struct .
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  shape1          1   27[COMRAM] struct .
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      unsigned char 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:        2 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_ShapeInBounds
  1898 ;;		_IsColliding
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text10
  1903  001EAE                     __ptext10:
  1904                           	callstack 0
  1905  001EAE                     _BitwiseAnd:
  1906                           	callstack 23
  1907                           
  1908                           ;incstack = 0
  1909                           ;BitwiseAnd@shape1 stored from wreg
  1910  001EAE  6E1C               	movwf	BitwiseAnd@shape1^0,c
  1911  001EB0                     
  1912                           ;main.c: 358: char BitwiseAnd(Shape shape1, Shape shape2);main.c: 359: {;main.c: 360:   
      +                            return ((shape1.byte & shape2.byte) > 0);
  1913  001EB0  501C               	movf	BitwiseAnd@shape1^0,w,c
  1914  001EB2  141B               	andwf	BitwiseAnd@shape2^0,w,c
  1915  001EB4  0900               	iorlw	0
  1916  001EB6  A4D8               	btfss	status,2,c
  1917  001EB8  EF60  F00F         	goto	u1181
  1918  001EBC  EF63  F00F         	goto	u1180
  1919  001EC0                     u1181:
  1920  001EC0  0E01               	movlw	1
  1921  001EC2  EF64  F00F         	goto	u1190
  1922  001EC6                     u1180:
  1923  001EC6  0E00               	movlw	0
  1924  001EC8                     u1190:
  1925  001EC8  0012               	return		;funcret
  1926  001ECA                     __end_of_BitwiseAnd:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _Render *****************
  1930 ;; Defined at:
  1931 ;;		line 223 in file "main.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		None
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    4
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959                           	psect	text11
  1960  001F24                     __ptext11:
  1961                           	callstack 0
  1962  001F24                     _Render:
  1963                           	callstack 26
  1964  001F24                     
  1965                           ;main.c: 225:     LATC = buffer.col0;
  1966  001F24  C037  FF8B         	movff	_buffer,3979	;volatile
  1967                           
  1968                           ;main.c: 226:     LATD = buffer.col1;
  1969  001F28  C038  FF8C         	movff	_buffer+1,3980	;volatile
  1970                           
  1971                           ;main.c: 227:     LATE = buffer.col2;
  1972  001F2C  C039  FF8D         	movff	_buffer+2,3981	;volatile
  1973                           
  1974                           ;main.c: 228:     LATF = buffer.col3;
  1975  001F30  C03A  FF8E         	movff	_buffer+3,3982	;volatile
  1976  001F34  0012               	return		;funcret
  1977  001F36                     __end_of_Render:
  1978                           	callstack 0
  1979                           
  1980 ;; *************** function _InitTimers *****************
  1981 ;; Defined at:
  1982 ;;		line 189 in file "main.c"
  1983 ;; Parameters:    Size  Location     Type
  1984 ;;		None
  1985 ;; Auto vars:     Size  Location     Type
  1986 ;;		None
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      void 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2000 ;;Total ram usage:        0 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; Hardware stack levels required when called:    4
  2003 ;; This function calls:
  2004 ;;		Nothing
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text12
  2011  001EFC                     __ptext12:
  2012                           	callstack 0
  2013  001EFC                     _InitTimers:
  2014                           	callstack 26
  2015  001EFC                     
  2016                           ;main.c: 191:     T0CON = 0x00;
  2017  001EFC  0E00               	movlw	0
  2018  001EFE  6ED5               	movwf	213,c	;volatile
  2019  001F00                     
  2020                           ;main.c: 193:     T0CON |= 0x05;
  2021  001F00  0E05               	movlw	5
  2022  001F02  12D5               	iorwf	213,f,c	;volatile
  2023  001F04                     
  2024                           ;main.c: 194:     TMR0H = 0x67;
  2025  001F04  0E67               	movlw	103
  2026  001F06  6ED7               	movwf	215,c	;volatile
  2027  001F08                     
  2028                           ;main.c: 195:     TMR0L = 0x69;
  2029  001F08  0E69               	movlw	105
  2030  001F0A  6ED6               	movwf	214,c	;volatile
  2031  001F0C                     
  2032                           ;main.c: 197:     T0CONbits.TMR0ON = 1;
  2033  001F0C  8ED5               	bsf	213,7,c	;volatile
  2034  001F0E  0012               	return		;funcret
  2035  001F10                     __end_of_InitTimers:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _InitInterrupts *****************
  2039 ;; Defined at:
  2040 ;;		line 200 in file "main.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;		None
  2043 ;; Auto vars:     Size  Location     Type
  2044 ;;		None
  2045 ;; Return value:  Size  Location     Type
  2046 ;;                  1    wreg      void 
  2047 ;; Registers used:
  2048 ;;		wreg, status,2, status,0
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;Total ram usage:        0 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    4
  2061 ;; This function calls:
  2062 ;;		Nothing
  2063 ;; This function is called by:
  2064 ;;		_main
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           	psect	text13
  2069  001F10                     __ptext13:
  2070                           	callstack 0
  2071  001F10                     _InitInterrupts:
  2072                           	callstack 26
  2073  001F10                     
  2074                           ;main.c: 204:     INTCON &= 0b00000111;
  2075  001F10  0E07               	movlw	7
  2076  001F12  16F2               	andwf	242,f,c	;volatile
  2077  001F14                     
  2078                           ;main.c: 206:     RCONbits.IPEN = 0;
  2079  001F14  9ED0               	bcf	208,7,c	;volatile
  2080  001F16                     
  2081                           ;main.c: 208:     INTCONbits.GIE = 1;
  2082  001F16  8EF2               	bsf	242,7,c	;volatile
  2083  001F18                     
  2084                           ;main.c: 209:     INTCONbits.PEIE = 0;
  2085  001F18  9CF2               	bcf	242,6,c	;volatile
  2086  001F1A                     
  2087                           ;main.c: 210:     INTCONbits.TMR0IE = 1;
  2088  001F1A  8AF2               	bsf	242,5,c	;volatile
  2089  001F1C                     
  2090                           ;main.c: 211:     INTCONbits.RBIE = 1;
  2091  001F1C  86F2               	bsf	242,3,c	;volatile
  2092  001F1E                     
  2093                           ;main.c: 213:     TRISB = 0b01100000;
  2094  001F1E  0E60               	movlw	96
  2095  001F20  6E93               	movwf	147,c	;volatile
  2096  001F22  0012               	return		;funcret
  2097  001F24                     __end_of_InitInterrupts:
  2098                           	callstack 0
  2099                           
  2100 ;; *************** function _InitBoard *****************
  2101 ;; Defined at:
  2102 ;;		line 148 in file "main.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;		None
  2105 ;; Auto vars:     Size  Location     Type
  2106 ;;  j               1   45[COMRAM] unsigned char 
  2107 ;;  i               1   44[COMRAM] unsigned char 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2118 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2120 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2121 ;;Total ram usage:        2 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; Hardware stack levels required when called:    5
  2124 ;; This function calls:
  2125 ;;		_RotateShape
  2126 ;;		_SetBoard
  2127 ;; This function is called by:
  2128 ;;		_main
  2129 ;; This function uses a non-reentrant model
  2130 ;;
  2131                           
  2132                           	psect	text14
  2133  001B14                     __ptext14:
  2134                           	callstack 0
  2135  001B14                     _InitBoard:
  2136                           	callstack 25
  2137  001B14                     
  2138                           ;main.c: 150:     ADCON1 = 0x0F;
  2139  001B14  0E0F               	movlw	15
  2140  001B16  6EC1               	movwf	193,c	;volatile
  2141                           
  2142                           ;main.c: 153:     PORTA = 0x00;
  2143  001B18  0E00               	movlw	0
  2144  001B1A  6E80               	movwf	128,c	;volatile
  2145                           
  2146                           ;main.c: 154:     LATA = 0x00;
  2147  001B1C  0E00               	movlw	0
  2148  001B1E  6E89               	movwf	137,c	;volatile
  2149                           
  2150                           ;main.c: 155:     TRISA = 0b00001111;
  2151  001B20  0E0F               	movlw	15
  2152  001B22  6E92               	movwf	146,c	;volatile
  2153  001B24                     
  2154                           ;main.c: 156:     lastPortA = PORTA;
  2155  001B24  CF80 F044          	movff	3968,_lastPortA	;volatile
  2156                           
  2157                           ;main.c: 159:     PORTB = 0x00;
  2158  001B28  0E00               	movlw	0
  2159  001B2A  6E81               	movwf	129,c	;volatile
  2160                           
  2161                           ;main.c: 160:     LATB = 0x00;
  2162  001B2C  0E00               	movlw	0
  2163  001B2E  6E8A               	movwf	138,c	;volatile
  2164                           
  2165                           ;main.c: 161:     TRISB = 0b01100000;
  2166  001B30  0E60               	movlw	96
  2167  001B32  6E93               	movwf	147,c	;volatile
  2168  001B34                     
  2169                           ;main.c: 162:     lastPortB = PORTB;
  2170  001B34  CF81 F043          	movff	3969,_lastPortB	;volatile
  2171                           
  2172                           ;main.c: 165:     LATC = 0x00;
  2173  001B38  0E00               	movlw	0
  2174  001B3A  6E8B               	movwf	139,c	;volatile
  2175                           
  2176                           ;main.c: 166:     LATD = 0x00;
  2177  001B3C  0E00               	movlw	0
  2178  001B3E  6E8C               	movwf	140,c	;volatile
  2179                           
  2180                           ;main.c: 167:     LATE = 0x00;
  2181  001B40  0E00               	movlw	0
  2182  001B42  6E8D               	movwf	141,c	;volatile
  2183                           
  2184                           ;main.c: 168:     LATF = 0x00;
  2185  001B44  0E00               	movlw	0
  2186  001B46  6E8E               	movwf	142,c	;volatile
  2187                           
  2188                           ;main.c: 171:     TRISC = 0x00;
  2189  001B48  0E00               	movlw	0
  2190  001B4A  6E94               	movwf	148,c	;volatile
  2191                           
  2192                           ;main.c: 172:     TRISD = 0x00;
  2193  001B4C  0E00               	movlw	0
  2194  001B4E  6E95               	movwf	149,c	;volatile
  2195                           
  2196                           ;main.c: 173:     TRISE = 0x00;
  2197  001B50  0E00               	movlw	0
  2198  001B52  6E96               	movwf	150,c	;volatile
  2199                           
  2200                           ;main.c: 174:     TRISF = 0x00;
  2201  001B54  0E00               	movlw	0
  2202  001B56  6E97               	movwf	151,c	;volatile
  2203                           
  2204                           ;main.c: 176:     for (char i = 0; i < 8; i++)
  2205  001B58  0E00               	movlw	0
  2206  001B5A  6E2D               	movwf	InitBoard@i^0,c
  2207  001B5C                     l1788:
  2208                           
  2209                           ;main.c: 177:     {;main.c: 178:         for (char j = 0; j < 4; j++)
  2210  001B5C  0E00               	movlw	0
  2211  001B5E  6E2E               	movwf	InitBoard@j^0,c
  2212  001B60                     l1794:
  2213                           
  2214                           ;main.c: 179:         {;main.c: 180:             SetBoard(j, i, 0, &board);
  2215  001B60  C02D  F01B         	movff	InitBoard@i,SetBoard@y
  2216  001B64  0E00               	movlw	0
  2217  001B66  6E1C               	movwf	SetBoard@v^0,c
  2218  001B68  0E3B               	movlw	low _board
  2219  001B6A  6E1D               	movwf	SetBoard@board^0,c
  2220  001B6C  0E00               	movlw	high _board
  2221  001B6E  6E1E               	movwf	(SetBoard@board+1)^0,c
  2222  001B70  502E               	movf	InitBoard@j^0,w,c
  2223  001B72  EC07  F008         	call	_SetBoard
  2224  001B76                     
  2225                           ;main.c: 181:         }
  2226  001B76  2A2E               	incf	InitBoard@j^0,f,c
  2227  001B78  0E03               	movlw	3
  2228  001B7A  642E               	cpfsgt	InitBoard@j^0,c
  2229  001B7C  EFC2  F00D         	goto	u1961
  2230  001B80  EFC4  F00D         	goto	u1960
  2231  001B84                     u1961:
  2232  001B84  EFB0  F00D         	goto	l1794
  2233  001B88                     u1960:
  2234  001B88                     
  2235                           ;main.c: 182:     }
  2236  001B88  2A2D               	incf	InitBoard@i^0,f,c
  2237  001B8A  0E07               	movlw	7
  2238  001B8C  642D               	cpfsgt	InitBoard@i^0,c
  2239  001B8E  EFCB  F00D         	goto	u1971
  2240  001B92  EFCD  F00D         	goto	u1970
  2241  001B96                     u1971:
  2242  001B96  EFAE  F00D         	goto	l1788
  2243  001B9A                     u1970:
  2244  001B9A                     
  2245                           ;main.c: 185:     curTet = L;
  2246  001B9A  0E01               	movlw	low _L
  2247  001B9C  6EF6               	movwf	tblptrl,c
  2248  001B9E                     	if	1	;There is more than 1 active tblptr byte
  2249  001B9E  0E10               	movlw	high _L
  2250  001BA0  6EF7               	movwf	tblptrh,c
  2251  001BA2                     	endif
  2252  001BA2                     	if	1	;There are 3 active tblptr bytes
  2253  001BA2  0E00               	movlw	low (_L shr (0+16))
  2254  001BA4  6EF8               	movwf	tblptru,c
  2255  001BA6                     	endif
  2256  001BA6  0009               	tblrd		*+
  2257  001BA8  CFF5 F03F          	movff	tablat,_curTet
  2258  001BAC  0009               	tblrd		*+
  2259  001BAE  CFF5 F040          	movff	tablat,_curTet+1
  2260  001BB2  0009               	tblrd		*+
  2261  001BB4  CFF5 F041          	movff	tablat,_curTet+2
  2262  001BB8  000A               	tblrd		*-
  2263  001BBA  CFF5 F042          	movff	tablat,_curTet+3
  2264  001BBE                     
  2265                           ;main.c: 186:     RotateShape(&curTet.shape);
  2266  001BBE  0E42               	movlw	low (_curTet+3)
  2267  001BC0  6E1B               	movwf	RotateShape@shape^0,c
  2268  001BC2  0E00               	movlw	high (_curTet+3)
  2269  001BC4  6E1C               	movwf	(RotateShape@shape+1)^0,c
  2270  001BC6  EC17  F00F         	call	_RotateShape	;wreg free
  2271  001BCA  0012               	return		;funcret
  2272  001BCC                     __end_of_InitBoard:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _SetBoard *****************
  2276 ;; Defined at:
  2277 ;;		line 231 in file "main.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  x               1    wreg     unsigned char 
  2280 ;;  y               1   26[COMRAM] unsigned char 
  2281 ;;  v               1   27[COMRAM] unsigned char 
  2282 ;;  board           2   28[COMRAM] PTR struct .
  2283 ;;		 -> buffer(4), board(4), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  x               1   35[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2295 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2299 ;;Total ram usage:       18 bytes
  2300 ;; Hardware stack levels used:    1
  2301 ;; Hardware stack levels required when called:    4
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_InitBoard
  2306 ;;		_SetQuartet
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text15
  2311  00100E                     __ptext15:
  2312                           	callstack 0
  2313  00100E                     _SetBoard:
  2314                           	callstack 23
  2315                           
  2316                           ;incstack = 0
  2317                           ;SetBoard@x stored from wreg
  2318  00100E  6E24               	movwf	SetBoard@x^0,c
  2319  001010                     
  2320                           ;main.c: 231: void SetBoard(char x, char y, char v, Board* board);main.c: 232: {;main.c:
      +                           233:     switch (x)
  2321  001010  EF34  F009         	goto	l1468
  2322  001014                     l1440:
  2323                           
  2324                           ;main.c: 236:             board->col0 = v == 1 ? board->col0 | (v << y) : board->col0 & 
      +                          ~(1 << y);
  2325  001014  041C               	decf	SetBoard@v^0,w,c
  2326  001016  B4D8               	btfsc	status,2,c
  2327  001018  EF10  F008         	goto	u1051
  2328  00101C  EF12  F008         	goto	u1050
  2329  001020                     u1051:
  2330  001020  EF2D  F008         	goto	l1444
  2331  001024                     u1050:
  2332  001024  C01D  FFD9         	movff	SetBoard@board,fsr2l
  2333  001028  C01E  FFDA         	movff	SetBoard@board+1,fsr2h
  2334  00102C  50DF               	movf	indf2,w,c
  2335  00102E  6E1F               	movwf	??_SetBoard^0,c
  2336  001030  C01B  F020         	movff	SetBoard@y,??_SetBoard+1
  2337  001034  0E01               	movlw	1
  2338  001036  6E21               	movwf	(??_SetBoard+2)^0,c
  2339  001038  2A20               	incf	(??_SetBoard+1)^0,f,c
  2340  00103A  EF21  F008         	goto	u1064
  2341  00103E                     u1065:
  2342  00103E  90D8               	bcf	status,0,c
  2343  001040  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2344  001042                     u1064:
  2345  001042  2E20               	decfsz	(??_SetBoard+1)^0,f,c
  2346  001044  EF1F  F008         	goto	u1065
  2347  001048  5021               	movf	(??_SetBoard+2)^0,w,c
  2348  00104A  0AFF               	xorlw	255
  2349  00104C  141F               	andwf	??_SetBoard^0,w,c
  2350  00104E  6E22               	movwf	(??_SetBoard+3)^0,c
  2351  001050  5022               	movf	(??_SetBoard+3)^0,w,c
  2352  001052  6E25               	movwf	_SetBoard$391^0,c
  2353  001054  6A26               	clrf	(_SetBoard$391+1)^0,c
  2354  001056  EF48  F008         	goto	l1446
  2355  00105A                     l1444:
  2356  00105A  C01B  F01F         	movff	SetBoard@y,??_SetBoard
  2357  00105E  501C               	movf	SetBoard@v^0,w,c
  2358  001060  6E20               	movwf	(??_SetBoard+1)^0,c
  2359  001062  6A21               	clrf	(??_SetBoard+2)^0,c
  2360  001064  2A1F               	incf	??_SetBoard^0,f,c
  2361  001066  EF38  F008         	goto	u1074
  2362  00106A                     u1075:
  2363  00106A  90D8               	bcf	status,0,c
  2364  00106C  3620               	rlcf	(??_SetBoard+1)^0,f,c
  2365  00106E  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2366  001070                     u1074:
  2367  001070  2E1F               	decfsz	??_SetBoard^0,f,c
  2368  001072  EF35  F008         	goto	u1075
  2369  001076  C01D  FFD9         	movff	SetBoard@board,fsr2l
  2370  00107A  C01E  FFDA         	movff	SetBoard@board+1,fsr2h
  2371  00107E  50DF               	movf	indf2,w,c
  2372  001080  6E22               	movwf	(??_SetBoard+3)^0,c
  2373  001082  6A23               	clrf	(??_SetBoard+4)^0,c
  2374  001084  5020               	movf	(??_SetBoard+1)^0,w,c
  2375  001086  1022               	iorwf	(??_SetBoard+3)^0,w,c
  2376  001088  6E25               	movwf	_SetBoard$391^0,c
  2377  00108A  5021               	movf	(??_SetBoard+2)^0,w,c
  2378  00108C  1023               	iorwf	(??_SetBoard+4)^0,w,c
  2379  00108E  6E26               	movwf	(_SetBoard$391+1)^0,c
  2380  001090                     l1446:
  2381  001090  C01D  FFD9         	movff	SetBoard@board,fsr2l
  2382  001094  C01E  FFDA         	movff	SetBoard@board+1,fsr2h
  2383  001098  C025  FFDF         	movff	_SetBoard$391,indf2
  2384                           
  2385                           ;main.c: 237:             break;
  2386  00109C  EF51  F009         	goto	l126
  2387  0010A0                     l1448:
  2388                           
  2389                           ;main.c: 239:             board->col1 = v == 1 ? board->col1 | (v << y) : board->col1 & 
      +                          ~(1 << y);
  2390  0010A0  041C               	decf	SetBoard@v^0,w,c
  2391  0010A2  B4D8               	btfsc	status,2,c
  2392  0010A4  EF56  F008         	goto	u1081
  2393  0010A8  EF58  F008         	goto	u1080
  2394  0010AC                     u1081:
  2395  0010AC  EF75  F008         	goto	l1452
  2396  0010B0                     u1080:
  2397  0010B0  EE20 F001          	lfsr	2,1
  2398  0010B4  501D               	movf	SetBoard@board^0,w,c
  2399  0010B6  26D9               	addwf	fsr2l,f,c
  2400  0010B8  501E               	movf	(SetBoard@board+1)^0,w,c
  2401  0010BA  22DA               	addwfc	fsr2h,f,c
  2402  0010BC  50DF               	movf	indf2,w,c
  2403  0010BE  6E1F               	movwf	??_SetBoard^0,c
  2404  0010C0  C01B  F020         	movff	SetBoard@y,??_SetBoard+1
  2405  0010C4  0E01               	movlw	1
  2406  0010C6  6E21               	movwf	(??_SetBoard+2)^0,c
  2407  0010C8  2A20               	incf	(??_SetBoard+1)^0,f,c
  2408  0010CA  EF69  F008         	goto	u1094
  2409  0010CE                     u1095:
  2410  0010CE  90D8               	bcf	status,0,c
  2411  0010D0  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2412  0010D2                     u1094:
  2413  0010D2  2E20               	decfsz	(??_SetBoard+1)^0,f,c
  2414  0010D4  EF67  F008         	goto	u1095
  2415  0010D8  5021               	movf	(??_SetBoard+2)^0,w,c
  2416  0010DA  0AFF               	xorlw	255
  2417  0010DC  141F               	andwf	??_SetBoard^0,w,c
  2418  0010DE  6E22               	movwf	(??_SetBoard+3)^0,c
  2419  0010E0  5022               	movf	(??_SetBoard+3)^0,w,c
  2420  0010E2  6E27               	movwf	_SetBoard$392^0,c
  2421  0010E4  6A28               	clrf	(_SetBoard$392+1)^0,c
  2422  0010E6  EF92  F008         	goto	l115
  2423  0010EA                     l1452:
  2424  0010EA  C01B  F01F         	movff	SetBoard@y,??_SetBoard
  2425  0010EE  501C               	movf	SetBoard@v^0,w,c
  2426  0010F0  6E20               	movwf	(??_SetBoard+1)^0,c
  2427  0010F2  6A21               	clrf	(??_SetBoard+2)^0,c
  2428  0010F4  2A1F               	incf	??_SetBoard^0,f,c
  2429  0010F6  EF80  F008         	goto	u1104
  2430  0010FA                     u1105:
  2431  0010FA  90D8               	bcf	status,0,c
  2432  0010FC  3620               	rlcf	(??_SetBoard+1)^0,f,c
  2433  0010FE  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2434  001100                     u1104:
  2435  001100  2E1F               	decfsz	??_SetBoard^0,f,c
  2436  001102  EF7D  F008         	goto	u1105
  2437  001106  EE20 F001          	lfsr	2,1
  2438  00110A  501D               	movf	SetBoard@board^0,w,c
  2439  00110C  26D9               	addwf	fsr2l,f,c
  2440  00110E  501E               	movf	(SetBoard@board+1)^0,w,c
  2441  001110  22DA               	addwfc	fsr2h,f,c
  2442  001112  50DF               	movf	indf2,w,c
  2443  001114  6E22               	movwf	(??_SetBoard+3)^0,c
  2444  001116  6A23               	clrf	(??_SetBoard+4)^0,c
  2445  001118  5020               	movf	(??_SetBoard+1)^0,w,c
  2446  00111A  1022               	iorwf	(??_SetBoard+3)^0,w,c
  2447  00111C  6E27               	movwf	_SetBoard$392^0,c
  2448  00111E  5021               	movf	(??_SetBoard+2)^0,w,c
  2449  001120  1023               	iorwf	(??_SetBoard+4)^0,w,c
  2450  001122  6E28               	movwf	(_SetBoard$392+1)^0,c
  2451  001124                     l115:
  2452  001124  EE20 F001          	lfsr	2,1
  2453  001128  501D               	movf	SetBoard@board^0,w,c
  2454  00112A  26D9               	addwf	fsr2l,f,c
  2455  00112C  501E               	movf	(SetBoard@board+1)^0,w,c
  2456  00112E  22DA               	addwfc	fsr2h,f,c
  2457  001130  C027  FFDF         	movff	_SetBoard$392,indf2
  2458                           
  2459                           ;main.c: 240:             break;
  2460  001134  EF51  F009         	goto	l126
  2461  001138                     l1454:
  2462                           
  2463                           ;main.c: 242:             board->col2 = v == 1 ? board->col2 | (v << y) : board->col2 & 
      +                          ~(1 << y);
  2464  001138  041C               	decf	SetBoard@v^0,w,c
  2465  00113A  B4D8               	btfsc	status,2,c
  2466  00113C  EFA2  F008         	goto	u1111
  2467  001140  EFA4  F008         	goto	u1110
  2468  001144                     u1111:
  2469  001144  EFC1  F008         	goto	l1458
  2470  001148                     u1110:
  2471  001148  EE20 F002          	lfsr	2,2
  2472  00114C  501D               	movf	SetBoard@board^0,w,c
  2473  00114E  26D9               	addwf	fsr2l,f,c
  2474  001150  501E               	movf	(SetBoard@board+1)^0,w,c
  2475  001152  22DA               	addwfc	fsr2h,f,c
  2476  001154  50DF               	movf	indf2,w,c
  2477  001156  6E1F               	movwf	??_SetBoard^0,c
  2478  001158  C01B  F020         	movff	SetBoard@y,??_SetBoard+1
  2479  00115C  0E01               	movlw	1
  2480  00115E  6E21               	movwf	(??_SetBoard+2)^0,c
  2481  001160  2A20               	incf	(??_SetBoard+1)^0,f,c
  2482  001162  EFB5  F008         	goto	u1124
  2483  001166                     u1125:
  2484  001166  90D8               	bcf	status,0,c
  2485  001168  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2486  00116A                     u1124:
  2487  00116A  2E20               	decfsz	(??_SetBoard+1)^0,f,c
  2488  00116C  EFB3  F008         	goto	u1125
  2489  001170  5021               	movf	(??_SetBoard+2)^0,w,c
  2490  001172  0AFF               	xorlw	255
  2491  001174  141F               	andwf	??_SetBoard^0,w,c
  2492  001176  6E22               	movwf	(??_SetBoard+3)^0,c
  2493  001178  5022               	movf	(??_SetBoard+3)^0,w,c
  2494  00117A  6E29               	movwf	_SetBoard$393^0,c
  2495  00117C  6A2A               	clrf	(_SetBoard$393+1)^0,c
  2496  00117E  EFDE  F008         	goto	l120
  2497  001182                     l1458:
  2498  001182  C01B  F01F         	movff	SetBoard@y,??_SetBoard
  2499  001186  501C               	movf	SetBoard@v^0,w,c
  2500  001188  6E20               	movwf	(??_SetBoard+1)^0,c
  2501  00118A  6A21               	clrf	(??_SetBoard+2)^0,c
  2502  00118C  2A1F               	incf	??_SetBoard^0,f,c
  2503  00118E  EFCC  F008         	goto	u1134
  2504  001192                     u1135:
  2505  001192  90D8               	bcf	status,0,c
  2506  001194  3620               	rlcf	(??_SetBoard+1)^0,f,c
  2507  001196  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2508  001198                     u1134:
  2509  001198  2E1F               	decfsz	??_SetBoard^0,f,c
  2510  00119A  EFC9  F008         	goto	u1135
  2511  00119E  EE20 F002          	lfsr	2,2
  2512  0011A2  501D               	movf	SetBoard@board^0,w,c
  2513  0011A4  26D9               	addwf	fsr2l,f,c
  2514  0011A6  501E               	movf	(SetBoard@board+1)^0,w,c
  2515  0011A8  22DA               	addwfc	fsr2h,f,c
  2516  0011AA  50DF               	movf	indf2,w,c
  2517  0011AC  6E22               	movwf	(??_SetBoard+3)^0,c
  2518  0011AE  6A23               	clrf	(??_SetBoard+4)^0,c
  2519  0011B0  5020               	movf	(??_SetBoard+1)^0,w,c
  2520  0011B2  1022               	iorwf	(??_SetBoard+3)^0,w,c
  2521  0011B4  6E29               	movwf	_SetBoard$393^0,c
  2522  0011B6  5021               	movf	(??_SetBoard+2)^0,w,c
  2523  0011B8  1023               	iorwf	(??_SetBoard+4)^0,w,c
  2524  0011BA  6E2A               	movwf	(_SetBoard$393+1)^0,c
  2525  0011BC                     l120:
  2526  0011BC  EE20 F002          	lfsr	2,2
  2527  0011C0  501D               	movf	SetBoard@board^0,w,c
  2528  0011C2  26D9               	addwf	fsr2l,f,c
  2529  0011C4  501E               	movf	(SetBoard@board+1)^0,w,c
  2530  0011C6  22DA               	addwfc	fsr2h,f,c
  2531  0011C8  C029  FFDF         	movff	_SetBoard$393,indf2
  2532                           
  2533                           ;main.c: 243:             break;
  2534  0011CC  EF51  F009         	goto	l126
  2535  0011D0                     l1460:
  2536                           
  2537                           ;main.c: 245:             board->col3 = v == 1 ? board->col3 | (v << y) : board->col3 & 
      +                          ~(1 << y);
  2538  0011D0  041C               	decf	SetBoard@v^0,w,c
  2539  0011D2  B4D8               	btfsc	status,2,c
  2540  0011D4  EFEE  F008         	goto	u1141
  2541  0011D8  EFF0  F008         	goto	u1140
  2542  0011DC                     u1141:
  2543  0011DC  EF0D  F009         	goto	l1464
  2544  0011E0                     u1140:
  2545  0011E0  EE20 F003          	lfsr	2,3
  2546  0011E4  501D               	movf	SetBoard@board^0,w,c
  2547  0011E6  26D9               	addwf	fsr2l,f,c
  2548  0011E8  501E               	movf	(SetBoard@board+1)^0,w,c
  2549  0011EA  22DA               	addwfc	fsr2h,f,c
  2550  0011EC  50DF               	movf	indf2,w,c
  2551  0011EE  6E1F               	movwf	??_SetBoard^0,c
  2552  0011F0  C01B  F020         	movff	SetBoard@y,??_SetBoard+1
  2553  0011F4  0E01               	movlw	1
  2554  0011F6  6E21               	movwf	(??_SetBoard+2)^0,c
  2555  0011F8  2A20               	incf	(??_SetBoard+1)^0,f,c
  2556  0011FA  EF01  F009         	goto	u1154
  2557  0011FE                     u1155:
  2558  0011FE  90D8               	bcf	status,0,c
  2559  001200  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2560  001202                     u1154:
  2561  001202  2E20               	decfsz	(??_SetBoard+1)^0,f,c
  2562  001204  EFFF  F008         	goto	u1155
  2563  001208  5021               	movf	(??_SetBoard+2)^0,w,c
  2564  00120A  0AFF               	xorlw	255
  2565  00120C  141F               	andwf	??_SetBoard^0,w,c
  2566  00120E  6E22               	movwf	(??_SetBoard+3)^0,c
  2567  001210  5022               	movf	(??_SetBoard+3)^0,w,c
  2568  001212  6E2B               	movwf	_SetBoard$394^0,c
  2569  001214  6A2C               	clrf	(_SetBoard$394+1)^0,c
  2570  001216  EF2A  F009         	goto	l125
  2571  00121A                     l1464:
  2572  00121A  C01B  F01F         	movff	SetBoard@y,??_SetBoard
  2573  00121E  501C               	movf	SetBoard@v^0,w,c
  2574  001220  6E20               	movwf	(??_SetBoard+1)^0,c
  2575  001222  6A21               	clrf	(??_SetBoard+2)^0,c
  2576  001224  2A1F               	incf	??_SetBoard^0,f,c
  2577  001226  EF18  F009         	goto	u1164
  2578  00122A                     u1165:
  2579  00122A  90D8               	bcf	status,0,c
  2580  00122C  3620               	rlcf	(??_SetBoard+1)^0,f,c
  2581  00122E  3621               	rlcf	(??_SetBoard+2)^0,f,c
  2582  001230                     u1164:
  2583  001230  2E1F               	decfsz	??_SetBoard^0,f,c
  2584  001232  EF15  F009         	goto	u1165
  2585  001236  EE20 F003          	lfsr	2,3
  2586  00123A  501D               	movf	SetBoard@board^0,w,c
  2587  00123C  26D9               	addwf	fsr2l,f,c
  2588  00123E  501E               	movf	(SetBoard@board+1)^0,w,c
  2589  001240  22DA               	addwfc	fsr2h,f,c
  2590  001242  50DF               	movf	indf2,w,c
  2591  001244  6E22               	movwf	(??_SetBoard+3)^0,c
  2592  001246  6A23               	clrf	(??_SetBoard+4)^0,c
  2593  001248  5020               	movf	(??_SetBoard+1)^0,w,c
  2594  00124A  1022               	iorwf	(??_SetBoard+3)^0,w,c
  2595  00124C  6E2B               	movwf	_SetBoard$394^0,c
  2596  00124E  5021               	movf	(??_SetBoard+2)^0,w,c
  2597  001250  1023               	iorwf	(??_SetBoard+4)^0,w,c
  2598  001252  6E2C               	movwf	(_SetBoard$394+1)^0,c
  2599  001254                     l125:
  2600  001254  EE20 F003          	lfsr	2,3
  2601  001258  501D               	movf	SetBoard@board^0,w,c
  2602  00125A  26D9               	addwf	fsr2l,f,c
  2603  00125C  501E               	movf	(SetBoard@board+1)^0,w,c
  2604  00125E  22DA               	addwfc	fsr2h,f,c
  2605  001260  C02B  FFDF         	movff	_SetBoard$394,indf2
  2606                           
  2607                           ;main.c: 246:             break;
  2608  001264  EF51  F009         	goto	l126
  2609  001268                     l1468:
  2610  001268  5024               	movf	SetBoard@x^0,w,c
  2611  00126A  6E1F               	movwf	??_SetBoard^0,c
  2612  00126C  6A20               	clrf	(??_SetBoard+1)^0,c
  2613                           
  2614                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2615                           ; Switch size 1, requested type "simple"
  2616                           ; Number of cases is 1, Range of values is 0 to 0
  2617                           ; switch strategies available:
  2618                           ; Name         Instructions Cycles
  2619                           ; simple_byte            4     3 (average)
  2620                           ;	Chosen strategy is simple_byte
  2621  00126E  5020               	movf	(??_SetBoard+1)^0,w,c
  2622  001270  0A00               	xorlw	0	; case 0
  2623  001272  B4D8               	btfsc	status,2,c
  2624  001274  EF3E  F009         	goto	l1910
  2625  001278  EF51  F009         	goto	l126
  2626  00127C                     l1910:
  2627                           
  2628                           ; Switch size 1, requested type "simple"
  2629                           ; Number of cases is 4, Range of values is 0 to 3
  2630                           ; switch strategies available:
  2631                           ; Name         Instructions Cycles
  2632                           ; simple_byte           13     7 (average)
  2633                           ;	Chosen strategy is simple_byte
  2634  00127C  501F               	movf	??_SetBoard^0,w,c
  2635  00127E  0A00               	xorlw	0	; case 0
  2636  001280  B4D8               	btfsc	status,2,c
  2637  001282  EF0A  F008         	goto	l1440
  2638  001286  0A01               	xorlw	1	; case 1
  2639  001288  B4D8               	btfsc	status,2,c
  2640  00128A  EF50  F008         	goto	l1448
  2641  00128E  0A03               	xorlw	3	; case 2
  2642  001290  B4D8               	btfsc	status,2,c
  2643  001292  EF9C  F008         	goto	l1454
  2644  001296  0A01               	xorlw	1	; case 3
  2645  001298  B4D8               	btfsc	status,2,c
  2646  00129A  EFE8  F008         	goto	l1460
  2647  00129E  EF51  F009         	goto	l126
  2648  0012A2                     l126:
  2649  0012A2  0012               	return		;funcret
  2650  0012A4                     __end_of_SetBoard:
  2651                           	callstack 0
  2652                           
  2653 ;; *************** function _RotateShape *****************
  2654 ;; Defined at:
  2655 ;;		line 447 in file "main.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  shape           2   26[COMRAM] PTR struct .
  2658 ;;		 -> curTet(4), 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2674 ;;Total ram usage:        2 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    4
  2677 ;; This function calls:
  2678 ;;		Nothing
  2679 ;; This function is called by:
  2680 ;;		_InitBoard
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684                           	psect	text16
  2685  001E2E                     __ptext16:
  2686                           	callstack 0
  2687  001E2E                     _RotateShape:
  2688                           	callstack 25
  2689  001E2E                     
  2690                           ;main.c: 447: void RotateShape(Shape *shape);main.c: 448: {;main.c: 449:     shape->byte
      +                           >>= 1;
  2691  001E2E  C01B  FFD9         	movff	RotateShape@shape,fsr2l
  2692  001E32  C01C  FFDA         	movff	RotateShape@shape+1,fsr2h
  2693  001E36  90D8               	bcf	status,0,c
  2694  001E38  32DF               	rrcf	indf2,f,c
  2695  001E3A                     
  2696                           ;main.c: 450:     shape->b0 = shape->r3;
  2697  001E3A  C01B  FFD9         	movff	RotateShape@shape,fsr2l
  2698  001E3E  C01C  FFDA         	movff	RotateShape@shape+1,fsr2h
  2699  001E42  C01B  FFE1         	movff	RotateShape@shape,fsr1l
  2700  001E46  C01C  FFE2         	movff	RotateShape@shape+1,fsr1h
  2701  001E4A  B6DF               	btfsc	indf2,3,c
  2702  001E4C  D002               	bra	u1765
  2703  001E4E  9EE7               	bcf	indf1,7,c
  2704  001E50  D001               	bra	u1766
  2705  001E52                     u1765:
  2706  001E52  8EE7               	bsf	indf1,7,c
  2707  001E54                     u1766:
  2708  001E54                     
  2709                           ;main.c: 451:     shape->r3 = 0;
  2710  001E54  C01B  FFD9         	movff	RotateShape@shape,fsr2l
  2711  001E58  C01C  FFDA         	movff	RotateShape@shape+1,fsr2h
  2712  001E5C  96DF               	bcf	indf2,3,c
  2713  001E5E  0012               	return		;funcret
  2714  001E60                     __end_of_RotateShape:
  2715                           	callstack 0
  2716                           
  2717 ;; *************** function _HandleInterrupt *****************
  2718 ;; Defined at:
  2719 ;;		line 459 in file "main.c"
  2720 ;; Parameters:    Size  Location     Type
  2721 ;;		None
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;                  1    wreg      void 
  2726 ;; Registers used:
  2727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2737 ;;Total ram usage:        4 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:    3
  2740 ;; This function calls:
  2741 ;;		_HandlePortB
  2742 ;;		_HandleTimer
  2743 ;; This function is called by:
  2744 ;;		Interrupt level 2
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	intcode
  2749  000008                     __pintcode:
  2750                           	callstack 0
  2751  000008                     _HandleInterrupt:
  2752                           	callstack 23
  2753                           
  2754                           ;incstack = 0
  2755  000008  8245               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2756  00000A  ED81  F00E         	call	int_func,f	;refresh shadow registers
  2757                           
  2758                           	psect	intcode_body
  2759  001D02                     __pintcode_body:
  2760                           	callstack 23
  2761  001D02                     int_func:
  2762                           	callstack 23
  2763  001D02  0006               	pop		; remove dummy address from shadow register refresh
  2764  001D04  CFE1 F017          	movff	fsr1l,??_HandleInterrupt
  2765  001D08  CFE2 F018          	movff	fsr1h,??_HandleInterrupt+1
  2766  001D0C  CFD9 F019          	movff	fsr2l,??_HandleInterrupt+2
  2767  001D10  CFDA F01A          	movff	fsr2h,??_HandleInterrupt+3
  2768  001D14                     
  2769                           ;main.c: 461:     if (INTCONbits.TMR0IF)
  2770  001D14  A4F2               	btfss	242,2,c	;volatile
  2771  001D16  EF8F  F00E         	goto	i2u207_41
  2772  001D1A  EF91  F00E         	goto	i2u207_40
  2773  001D1E                     i2u207_41:
  2774  001D1E  EF9A  F00E         	goto	i2l238
  2775  001D22                     i2u207_40:
  2776  001D22                     
  2777                           ;main.c: 462:     {;main.c: 463:         INTCONbits.TMR0IF = 0;
  2778  001D22  94F2               	bcf	242,2,c	;volatile
  2779  001D24                     
  2780                           ;main.c: 464:         HandleTimer();
  2781  001D24  ECFC  F00E         	call	_HandleTimer	;wreg free
  2782  001D28                     
  2783                           ;main.c: 467:         TMR0H = 0x67;
  2784  001D28  0E67               	movlw	103
  2785  001D2A  6ED7               	movwf	215,c	;volatile
  2786  001D2C                     
  2787                           ;main.c: 468:         TMR0L = 0x69;
  2788  001D2C  0E69               	movlw	105
  2789  001D2E  6ED6               	movwf	214,c	;volatile
  2790                           
  2791                           ;main.c: 469:     }
  2792  001D30  EFA4  F00E         	goto	i2l241
  2793  001D34                     i2l238:
  2794  001D34  A0F2               	btfss	242,0,c	;volatile
  2795  001D36  EF9F  F00E         	goto	i2u208_41
  2796  001D3A  EFA1  F00E         	goto	i2u208_40
  2797  001D3E                     i2u208_41:
  2798  001D3E  EFA4  F00E         	goto	i2l241
  2799  001D42                     i2u208_40:
  2800  001D42                     
  2801                           ;main.c: 471:     {;main.c: 472:         INTCONbits.RBIF = 0;
  2802  001D42  90F2               	bcf	242,0,c	;volatile
  2803  001D44                     
  2804                           ;main.c: 473:         HandlePortB();
  2805  001D44  ECD5  F00E         	call	_HandlePortB	;wreg free
  2806  001D48                     i2l241:
  2807  001D48  C01A  FFDA         	movff	??_HandleInterrupt+3,fsr2h
  2808  001D4C  C019  FFD9         	movff	??_HandleInterrupt+2,fsr2l
  2809  001D50  C018  FFE2         	movff	??_HandleInterrupt+1,fsr1h
  2810  001D54  C017  FFE1         	movff	??_HandleInterrupt,fsr1l
  2811  001D58  9245               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2812  001D5A  0011               	retfie		f
  2813  001D5C                     __end_of_HandleInterrupt:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _HandleTimer *****************
  2817 ;; Defined at:
  2818 ;;		line 477 in file "main.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		i2_ShapeInBounds
  2841 ;; This function is called by:
  2842 ;;		_HandleInterrupt
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text18
  2847  001DF8                     __ptext18:
  2848                           	callstack 0
  2849  001DF8                     _HandleTimer:
  2850                           	callstack 23
  2851  001DF8                     
  2852                           ;main.c: 479:     static char counter = 0;;main.c: 481:     if (++counter == 8)
  2853  001DF8  2A35               	incf	HandleTimer@counter^0,f,c
  2854  001DFA  0E08               	movlw	8
  2855  001DFC  1835               	xorwf	HandleTimer@counter^0,w,c
  2856  001DFE  A4D8               	btfss	status,2,c
  2857  001E00  EF04  F00F         	goto	i2u198_41
  2858  001E04  EF06  F00F         	goto	i2u198_40
  2859  001E08                     i2u198_41:
  2860  001E08  EF16  F00F         	goto	i2l248
  2861  001E0C                     i2u198_40:
  2862  001E0C                     
  2863                           ;main.c: 482:     {;main.c: 483:         if(ShapeInBounds(0, 1))
  2864  001E0C  0E01               	movlw	1
  2865  001E0E  6E0B               	movwf	i2ShapeInBounds@dir1^0,c
  2866  001E10  0E00               	movlw	0
  2867  001E12  EC21  F00D         	call	i2_ShapeInBounds
  2868  001E16  0900               	iorlw	0
  2869  001E18  B4D8               	btfsc	status,2,c
  2870  001E1A  EF11  F00F         	goto	i2u199_41
  2871  001E1E  EF13  F00F         	goto	i2u199_40
  2872  001E22                     i2u199_41:
  2873  001E22  EF14  F00F         	goto	i2l1820
  2874  001E26                     i2u199_40:
  2875  001E26                     
  2876                           ;main.c: 484:         {;main.c: 485:             curTet.y++;
  2877  001E26  2A41               	incf	(_curTet+2)^0,f,c
  2878  001E28                     i2l1820:
  2879                           
  2880                           ;main.c: 487:         counter = 0;
  2881  001E28  0E00               	movlw	0
  2882  001E2A  6E35               	movwf	HandleTimer@counter^0,c
  2883  001E2C                     i2l248:
  2884  001E2C  0012               	return		;funcret
  2885  001E2E                     __end_of_HandleTimer:
  2886                           	callstack 0
  2887                           
  2888 ;; *************** function i2_ShapeInBounds *****************
  2889 ;; Defined at:
  2890 ;;		line 417 in file "main.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  dir0            1    wreg     unsigned char 
  2893 ;;  dir1            1   10[COMRAM] unsigned char 
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;  dir0            1   20[COMRAM] unsigned char 
  2896 ;;  shape           1   21[COMRAM] struct .
  2897 ;;  returnVal       1   19[COMRAM] unsigned char 
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      unsigned char 
  2900 ;; Registers used:
  2901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2907 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2910 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2911 ;;Total ram usage:       12 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		i2_BitwiseAnd
  2916 ;;		i2_GetQuartet2
  2917 ;; This function is called by:
  2918 ;;		_HandleTimer
  2919 ;; This function uses a non-reentrant model
  2920 ;;
  2921                           
  2922                           	psect	text19
  2923  001A42                     __ptext19:
  2924                           	callstack 0
  2925  001A42                     i2_ShapeInBounds:
  2926                           	callstack 23
  2927                           
  2928                           ;incstack = 0
  2929                           ;i2ShapeInBounds@dir0 stored from wreg
  2930  001A42  6E15               	movwf	i2ShapeInBounds@dir0^0,c
  2931  001A44                     
  2932                           ;main.c: 417: char ShapeInBounds(char dir0, char dir1);main.c: 418: {;main.c: 419:     S
      +                          hape shape;;main.c: 421:     GetQuartet2((dir1 == 0) ? ( dir0 == 0 ? curTet.x - 1 : curT
      +                          et.x + 1) : curTet.x,
  2933  001A44  040B               	decf	i2ShapeInBounds@dir1^0,w,c
  2934  001A46  B4D8               	btfsc	status,2,c
  2935  001A48  EF28  F00D         	goto	i2u189_41
  2936  001A4C  EF2A  F00D         	goto	i2u189_40
  2937  001A50                     i2u189_41:
  2938  001A50  EF2F  F00D         	goto	i2l1744
  2939  001A54                     i2u189_40:
  2940  001A54  C041  F00C         	movff	_curTet+2,i2_ShapeInBounds$549
  2941  001A58  6A0D               	clrf	(i2_ShapeInBounds$549+1)^0,c
  2942  001A5A  EF49  F00D         	goto	i2l1752
  2943  001A5E                     i2l1744:
  2944  001A5E  5015               	movf	i2ShapeInBounds@dir0^0,w,c
  2945  001A60  B4D8               	btfsc	status,2,c
  2946  001A62  EF35  F00D         	goto	i2u190_41
  2947  001A66  EF37  F00D         	goto	i2u190_40
  2948  001A6A                     i2u190_41:
  2949  001A6A  EF3F  F00D         	goto	i2l1748
  2950  001A6E                     i2u190_40:
  2951  001A6E  0EFF               	movlw	255
  2952  001A70  2441               	addwf	(_curTet+2)^0,w,c
  2953  001A72  6E0E               	movwf	i2_ShapeInBounds$550^0,c
  2954  001A74  6A0F               	clrf	(i2_ShapeInBounds$550+1)^0,c
  2955  001A76  0EFF               	movlw	255
  2956  001A78  220F               	addwfc	(i2_ShapeInBounds$550+1)^0,f,c
  2957  001A7A  EF45  F00D         	goto	i2l1750
  2958  001A7E                     i2l1748:
  2959  001A7E  0E01               	movlw	1
  2960  001A80  2441               	addwf	(_curTet+2)^0,w,c
  2961  001A82  6E0E               	movwf	i2_ShapeInBounds$550^0,c
  2962  001A84  6A0F               	clrf	(i2_ShapeInBounds$550+1)^0,c
  2963  001A86  0E00               	movlw	0
  2964  001A88  220F               	addwfc	(i2_ShapeInBounds$550+1)^0,f,c
  2965  001A8A                     i2l1750:
  2966  001A8A  C00E  F00C         	movff	i2_ShapeInBounds$550,i2_ShapeInBounds$549
  2967  001A8E  C00F  F00D         	movff	i2_ShapeInBounds$550+1,i2_ShapeInBounds$549+1
  2968  001A92                     i2l1752:
  2969  001A92  500B               	movf	i2ShapeInBounds@dir1^0,w,c
  2970  001A94  B4D8               	btfsc	status,2,c
  2971  001A96  EF4F  F00D         	goto	i2u191_41
  2972  001A9A  EF51  F00D         	goto	i2u191_40
  2973  001A9E                     i2u191_41:
  2974  001A9E  EF56  F00D         	goto	i2l1756
  2975  001AA2                     i2u191_40:
  2976  001AA2  C040  F010         	movff	_curTet+1,i2_ShapeInBounds$551
  2977  001AA6  6A11               	clrf	(i2_ShapeInBounds$551+1)^0,c
  2978  001AA8  EF70  F00D         	goto	i2l1764
  2979  001AAC                     i2l1756:
  2980  001AAC  5015               	movf	i2ShapeInBounds@dir0^0,w,c
  2981  001AAE  B4D8               	btfsc	status,2,c
  2982  001AB0  EF5C  F00D         	goto	i2u192_41
  2983  001AB4  EF5E  F00D         	goto	i2u192_40
  2984  001AB8                     i2u192_41:
  2985  001AB8  EF66  F00D         	goto	i2l1760
  2986  001ABC                     i2u192_40:
  2987  001ABC  0E01               	movlw	1
  2988  001ABE  2440               	addwf	(_curTet+1)^0,w,c
  2989  001AC0  6E12               	movwf	i2_ShapeInBounds$552^0,c
  2990  001AC2  6A13               	clrf	(i2_ShapeInBounds$552+1)^0,c
  2991  001AC4  0E00               	movlw	0
  2992  001AC6  2213               	addwfc	(i2_ShapeInBounds$552+1)^0,f,c
  2993  001AC8  EF6C  F00D         	goto	i2l1762
  2994  001ACC                     i2l1760:
  2995  001ACC  0EFF               	movlw	255
  2996  001ACE  2440               	addwf	(_curTet+1)^0,w,c
  2997  001AD0  6E12               	movwf	i2_ShapeInBounds$552^0,c
  2998  001AD2  6A13               	clrf	(i2_ShapeInBounds$552+1)^0,c
  2999  001AD4  0EFF               	movlw	255
  3000  001AD6  2213               	addwfc	(i2_ShapeInBounds$552+1)^0,f,c
  3001  001AD8                     i2l1762:
  3002  001AD8  C012  F010         	movff	i2_ShapeInBounds$552,i2_ShapeInBounds$551
  3003  001ADC  C013  F011         	movff	i2_ShapeInBounds$552+1,i2_ShapeInBounds$551+1
  3004  001AE0                     i2l1764:
  3005  001AE0  C00C  F001         	movff	i2_ShapeInBounds$549,i2GetQuartet2@y
  3006  001AE4  0E16               	movlw	low i2ShapeInBounds@shape
  3007  001AE6  6E02               	movwf	i2GetQuartet2@shape^0,c
  3008  001AE8  0E00               	movlw	high i2ShapeInBounds@shape
  3009  001AEA  6E03               	movwf	(i2GetQuartet2@shape+1)^0,c
  3010  001AEC  5010               	movf	i2_ShapeInBounds$551^0,w,c
  3011  001AEE  EC5A  F00B         	call	i2_GetQuartet2
  3012  001AF2                     
  3013                           ;main.c: 425:     char returnVal = BitwiseAnd(shape, curTet.shape);
  3014  001AF2  C042  F001         	movff	_curTet+3,i2BitwiseAnd@shape2
  3015  001AF6  5016               	movf	i2ShapeInBounds@shape^0,w,c
  3016  001AF8  EC65  F00F         	call	i2_BitwiseAnd
  3017  001AFC  6E14               	movwf	i2ShapeInBounds@returnVal^0,c
  3018  001AFE                     
  3019                           ;main.c: 427:     return !returnVal;
  3020  001AFE  5014               	movf	i2ShapeInBounds@returnVal^0,w,c
  3021  001B00  B4D8               	btfsc	status,2,c
  3022  001B02  EF85  F00D         	goto	i2u193_41
  3023  001B06  EF88  F00D         	goto	i2u193_40
  3024  001B0A                     i2u193_41:
  3025  001B0A  0E01               	movlw	1
  3026  001B0C  EF89  F00D         	goto	i2u194_40
  3027  001B10                     i2u193_40:
  3028  001B10  0E00               	movlw	0
  3029  001B12                     i2u194_40:
  3030  001B12  0012               	return		;funcret
  3031  001B14                     __end_ofi2_ShapeInBounds:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function i2_GetQuartet2 *****************
  3035 ;; Defined at:
  3036 ;;		line 372 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  x               1    wreg     unsigned char 
  3039 ;;  y               1    0[COMRAM] unsigned char 
  3040 ;;  shape           2    1[COMRAM] PTR struct .
  3041 ;;		 -> i2ShapeInBounds@shape(1), ShapeInBounds@shape(1), 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;  x               1    9[COMRAM] unsigned char 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3053 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3056 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3057 ;;Total ram usage:       10 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; This function calls:
  3060 ;;		Nothing
  3061 ;; This function is called by:
  3062 ;;		i2_ShapeInBounds
  3063 ;; This function uses a non-reentrant model
  3064 ;;
  3065                           
  3066                           	psect	text20
  3067  0016B4                     __ptext20:
  3068                           	callstack 0
  3069  0016B4                     i2_GetQuartet2:
  3070                           	callstack 23
  3071                           
  3072                           ;incstack = 0
  3073                           ;i2GetQuartet2@x stored from wreg
  3074  0016B4  6E0A               	movwf	i2GetQuartet2@x^0,c
  3075  0016B6                     
  3076                           ;main.c: 372: void GetQuartet2(char x, char y, Shape *shape);main.c: 373: {;main.c: 374:
      +                               shape->b0 = (((x) < 0) || ((x) > 3) || ((y) > 7) || ((y) < 0)) ? 1 : 0;
  3077  0016B6  0E01               	movlw	1
  3078  0016B8  6E06               	movwf	i2_GetQuartet2$486^0,c
  3079  0016BA  0E04               	movlw	4
  3080  0016BC  600A               	cpfslt	i2GetQuartet2@x^0,c
  3081  0016BE  EF63  F00B         	goto	i2u160_41
  3082  0016C2  EF65  F00B         	goto	i2u160_40
  3083  0016C6                     i2u160_41:
  3084  0016C6  EF6F  F00B         	goto	i2l1642
  3085  0016CA                     i2u160_40:
  3086  0016CA  0E08               	movlw	8
  3087  0016CC  6001               	cpfslt	i2GetQuartet2@y^0,c
  3088  0016CE  EF6B  F00B         	goto	i2u161_41
  3089  0016D2  EF6D  F00B         	goto	i2u161_40
  3090  0016D6                     i2u161_41:
  3091  0016D6  EF6F  F00B         	goto	i2l1642
  3092  0016DA                     i2u161_40:
  3093  0016DA  0E00               	movlw	0
  3094  0016DC  6E06               	movwf	i2_GetQuartet2$486^0,c
  3095  0016DE                     i2l1642:
  3096  0016DE  C002  FFD9         	movff	i2GetQuartet2@shape,fsr2l
  3097  0016E2  C003  FFDA         	movff	i2GetQuartet2@shape+1,fsr2h
  3098  0016E6  B006               	btfsc	i2_GetQuartet2$486^0,0,c
  3099  0016E8  D002               	bra	i2u162_45
  3100  0016EA  9EDF               	bcf	indf2,7,c
  3101  0016EC  D001               	bra	i2u162_46
  3102  0016EE                     i2u162_45:
  3103  0016EE  8EDF               	bsf	indf2,7,c
  3104  0016F0                     i2u162_46:
  3105  0016F0                     
  3106                           ;main.c: 375:     shape->b1 = (((x + 1) < 0) || ((x + 1) > 3) || ((y) > 7) || ((y) < 0))
      +                           ? 1 : 0;
  3107  0016F0  0E01               	movlw	1
  3108  0016F2  6E07               	movwf	i2_GetQuartet2$487^0,c
  3109  0016F4  500A               	movf	i2GetQuartet2@x^0,w,c
  3110  0016F6  6E04               	movwf	??i2_GetQuartet2^0,c
  3111  0016F8  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3112  0016FA  0E01               	movlw	1
  3113  0016FC  2404               	addwf	??i2_GetQuartet2^0,w,c
  3114  0016FE  0E00               	movlw	0
  3115  001700  2005               	addwfc	(??i2_GetQuartet2+1)^0,w,c
  3116  001702  0B80               	andlw	128
  3117  001704  A4D8               	btfss	status,2,c
  3118  001706  EF87  F00B         	goto	i2u163_41
  3119  00170A  EF89  F00B         	goto	i2u163_40
  3120  00170E                     i2u163_41:
  3121  00170E  EFA8  F00B         	goto	i2l1654
  3122  001712                     i2u163_40:
  3123  001712  500A               	movf	i2GetQuartet2@x^0,w,c
  3124  001714  6E04               	movwf	??i2_GetQuartet2^0,c
  3125  001716  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3126  001718  0E01               	movlw	1
  3127  00171A  2604               	addwf	??i2_GetQuartet2^0,f,c
  3128  00171C  0E00               	movlw	0
  3129  00171E  2205               	addwfc	(??i2_GetQuartet2+1)^0,f,c
  3130  001720  BE05               	btfsc	(??i2_GetQuartet2+1)^0,7,c
  3131  001722  EF9E  F00B         	goto	i2u164_40
  3132  001726  5005               	movf	(??i2_GetQuartet2+1)^0,w,c
  3133  001728  E107               	bnz	i2u164_41
  3134  00172A  0E04               	movlw	4
  3135  00172C  5C04               	subwf	??i2_GetQuartet2^0,w,c
  3136  00172E  B0D8               	btfsc	status,0,c
  3137  001730  EF9C  F00B         	goto	i2u164_41
  3138  001734  EF9E  F00B         	goto	i2u164_40
  3139  001738                     i2u164_41:
  3140  001738  EFA8  F00B         	goto	i2l1654
  3141  00173C                     i2u164_40:
  3142  00173C  0E08               	movlw	8
  3143  00173E  6001               	cpfslt	i2GetQuartet2@y^0,c
  3144  001740  EFA4  F00B         	goto	i2u165_41
  3145  001744  EFA6  F00B         	goto	i2u165_40
  3146  001748                     i2u165_41:
  3147  001748  EFA8  F00B         	goto	i2l1654
  3148  00174C                     i2u165_40:
  3149  00174C  0E00               	movlw	0
  3150  00174E  6E07               	movwf	i2_GetQuartet2$487^0,c
  3151  001750                     i2l1654:
  3152  001750  C002  FFD9         	movff	i2GetQuartet2@shape,fsr2l
  3153  001754  C003  FFDA         	movff	i2GetQuartet2@shape+1,fsr2h
  3154  001758  B007               	btfsc	i2_GetQuartet2$487^0,0,c
  3155  00175A  D002               	bra	i2u166_45
  3156  00175C  9CDF               	bcf	indf2,6,c
  3157  00175E  D001               	bra	i2u166_46
  3158  001760                     i2u166_45:
  3159  001760  8CDF               	bsf	indf2,6,c
  3160  001762                     i2u166_46:
  3161  001762                     
  3162                           ;main.c: 376:     shape->b2 = (((x + 1) < 0) || ((x + 1) > 3) || ((y + 1) > 7) || ((y + 
      +                          1) < 0)) ? 1 : 0;
  3163  001762  0E01               	movlw	1
  3164  001764  6E08               	movwf	i2_GetQuartet2$488^0,c
  3165  001766  500A               	movf	i2GetQuartet2@x^0,w,c
  3166  001768  6E04               	movwf	??i2_GetQuartet2^0,c
  3167  00176A  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3168  00176C  0E01               	movlw	1
  3169  00176E  2404               	addwf	??i2_GetQuartet2^0,w,c
  3170  001770  0E00               	movlw	0
  3171  001772  2005               	addwfc	(??i2_GetQuartet2+1)^0,w,c
  3172  001774  0B80               	andlw	128
  3173  001776  A4D8               	btfss	status,2,c
  3174  001778  EFC0  F00B         	goto	i2u167_41
  3175  00177C  EFC2  F00B         	goto	i2u167_40
  3176  001780                     i2u167_41:
  3177  001780  EFFD  F00B         	goto	i2l1668
  3178  001784                     i2u167_40:
  3179  001784  500A               	movf	i2GetQuartet2@x^0,w,c
  3180  001786  6E04               	movwf	??i2_GetQuartet2^0,c
  3181  001788  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3182  00178A  0E01               	movlw	1
  3183  00178C  2604               	addwf	??i2_GetQuartet2^0,f,c
  3184  00178E  0E00               	movlw	0
  3185  001790  2205               	addwfc	(??i2_GetQuartet2+1)^0,f,c
  3186  001792  BE05               	btfsc	(??i2_GetQuartet2+1)^0,7,c
  3187  001794  EFD7  F00B         	goto	i2u168_40
  3188  001798  5005               	movf	(??i2_GetQuartet2+1)^0,w,c
  3189  00179A  E107               	bnz	i2u168_41
  3190  00179C  0E04               	movlw	4
  3191  00179E  5C04               	subwf	??i2_GetQuartet2^0,w,c
  3192  0017A0  B0D8               	btfsc	status,0,c
  3193  0017A2  EFD5  F00B         	goto	i2u168_41
  3194  0017A6  EFD7  F00B         	goto	i2u168_40
  3195  0017AA                     i2u168_41:
  3196  0017AA  EFFD  F00B         	goto	i2l1668
  3197  0017AE                     i2u168_40:
  3198  0017AE  5001               	movf	i2GetQuartet2@y^0,w,c
  3199  0017B0  6E04               	movwf	??i2_GetQuartet2^0,c
  3200  0017B2  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3201  0017B4  0E01               	movlw	1
  3202  0017B6  2604               	addwf	??i2_GetQuartet2^0,f,c
  3203  0017B8  0E00               	movlw	0
  3204  0017BA  2205               	addwfc	(??i2_GetQuartet2+1)^0,f,c
  3205  0017BC  BE05               	btfsc	(??i2_GetQuartet2+1)^0,7,c
  3206  0017BE  EFEC  F00B         	goto	i2u169_40
  3207  0017C2  5005               	movf	(??i2_GetQuartet2+1)^0,w,c
  3208  0017C4  E107               	bnz	i2u169_41
  3209  0017C6  0E08               	movlw	8
  3210  0017C8  5C04               	subwf	??i2_GetQuartet2^0,w,c
  3211  0017CA  B0D8               	btfsc	status,0,c
  3212  0017CC  EFEA  F00B         	goto	i2u169_41
  3213  0017D0  EFEC  F00B         	goto	i2u169_40
  3214  0017D4                     i2u169_41:
  3215  0017D4  EFFD  F00B         	goto	i2l1668
  3216  0017D8                     i2u169_40:
  3217  0017D8  5001               	movf	i2GetQuartet2@y^0,w,c
  3218  0017DA  6E04               	movwf	??i2_GetQuartet2^0,c
  3219  0017DC  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3220  0017DE  0E01               	movlw	1
  3221  0017E0  2404               	addwf	??i2_GetQuartet2^0,w,c
  3222  0017E2  0E00               	movlw	0
  3223  0017E4  2005               	addwfc	(??i2_GetQuartet2+1)^0,w,c
  3224  0017E6  0B80               	andlw	128
  3225  0017E8  A4D8               	btfss	status,2,c
  3226  0017EA  EFF9  F00B         	goto	i2u170_41
  3227  0017EE  EFFB  F00B         	goto	i2u170_40
  3228  0017F2                     i2u170_41:
  3229  0017F2  EFFD  F00B         	goto	i2l1668
  3230  0017F6                     i2u170_40:
  3231  0017F6  0E00               	movlw	0
  3232  0017F8  6E08               	movwf	i2_GetQuartet2$488^0,c
  3233  0017FA                     i2l1668:
  3234  0017FA  C002  FFD9         	movff	i2GetQuartet2@shape,fsr2l
  3235  0017FE  C003  FFDA         	movff	i2GetQuartet2@shape+1,fsr2h
  3236  001802  B008               	btfsc	i2_GetQuartet2$488^0,0,c
  3237  001804  D002               	bra	i2u171_45
  3238  001806  9ADF               	bcf	indf2,5,c
  3239  001808  D001               	bra	i2u171_46
  3240  00180A                     i2u171_45:
  3241  00180A  8ADF               	bsf	indf2,5,c
  3242  00180C                     i2u171_46:
  3243  00180C                     
  3244                           ;main.c: 377:     shape->b3 = (((x) < 0) || ((x) > 3) || ((y + 1) > 7) || ((y + 1) < 0))
      +                           ? 1 : 0;
  3245  00180C  0E01               	movlw	1
  3246  00180E  6E09               	movwf	i2_GetQuartet2$489^0,c
  3247  001810  0E04               	movlw	4
  3248  001812  600A               	cpfslt	i2GetQuartet2@x^0,c
  3249  001814  EF0E  F00C         	goto	i2u172_41
  3250  001818  EF10  F00C         	goto	i2u172_40
  3251  00181C                     i2u172_41:
  3252  00181C  EF36  F00C         	goto	i2l1680
  3253  001820                     i2u172_40:
  3254  001820  5001               	movf	i2GetQuartet2@y^0,w,c
  3255  001822  6E04               	movwf	??i2_GetQuartet2^0,c
  3256  001824  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3257  001826  0E01               	movlw	1
  3258  001828  2604               	addwf	??i2_GetQuartet2^0,f,c
  3259  00182A  0E00               	movlw	0
  3260  00182C  2205               	addwfc	(??i2_GetQuartet2+1)^0,f,c
  3261  00182E  BE05               	btfsc	(??i2_GetQuartet2+1)^0,7,c
  3262  001830  EF25  F00C         	goto	i2u173_40
  3263  001834  5005               	movf	(??i2_GetQuartet2+1)^0,w,c
  3264  001836  E107               	bnz	i2u173_41
  3265  001838  0E08               	movlw	8
  3266  00183A  5C04               	subwf	??i2_GetQuartet2^0,w,c
  3267  00183C  B0D8               	btfsc	status,0,c
  3268  00183E  EF23  F00C         	goto	i2u173_41
  3269  001842  EF25  F00C         	goto	i2u173_40
  3270  001846                     i2u173_41:
  3271  001846  EF36  F00C         	goto	i2l1680
  3272  00184A                     i2u173_40:
  3273  00184A  5001               	movf	i2GetQuartet2@y^0,w,c
  3274  00184C  6E04               	movwf	??i2_GetQuartet2^0,c
  3275  00184E  6A05               	clrf	(??i2_GetQuartet2+1)^0,c
  3276  001850  0E01               	movlw	1
  3277  001852  2404               	addwf	??i2_GetQuartet2^0,w,c
  3278  001854  0E00               	movlw	0
  3279  001856  2005               	addwfc	(??i2_GetQuartet2+1)^0,w,c
  3280  001858  0B80               	andlw	128
  3281  00185A  A4D8               	btfss	status,2,c
  3282  00185C  EF32  F00C         	goto	i2u174_41
  3283  001860  EF34  F00C         	goto	i2u174_40
  3284  001864                     i2u174_41:
  3285  001864  EF36  F00C         	goto	i2l1680
  3286  001868                     i2u174_40:
  3287  001868  0E00               	movlw	0
  3288  00186A  6E09               	movwf	i2_GetQuartet2$489^0,c
  3289  00186C                     i2l1680:
  3290  00186C  C002  FFD9         	movff	i2GetQuartet2@shape,fsr2l
  3291  001870  C003  FFDA         	movff	i2GetQuartet2@shape+1,fsr2h
  3292  001874  B009               	btfsc	i2_GetQuartet2$489^0,0,c
  3293  001876  D002               	bra	i2u175_45
  3294  001878  98DF               	bcf	indf2,4,c
  3295  00187A  D001               	bra	i2u175_46
  3296  00187C                     i2u175_45:
  3297  00187C  88DF               	bsf	indf2,4,c
  3298  00187E                     i2u175_46:
  3299  00187E  0012               	return		;funcret
  3300  001880                     __end_ofi2_GetQuartet2:
  3301                           	callstack 0
  3302                           
  3303 ;; *************** function i2_BitwiseAnd *****************
  3304 ;; Defined at:
  3305 ;;		line 358 in file "main.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  shape1          1    wreg     struct .
  3308 ;;  shape2          1    0[COMRAM] struct .
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;  shape1          1    1[COMRAM] struct .
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      unsigned char 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3320 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;Total ram usage:        2 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		i2_ShapeInBounds
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text21
  3334  001ECA                     __ptext21:
  3335                           	callstack 0
  3336  001ECA                     i2_BitwiseAnd:
  3337                           	callstack 23
  3338                           
  3339                           ;incstack = 0
  3340                           ;i2BitwiseAnd@shape1 stored from wreg
  3341  001ECA  6E02               	movwf	i2BitwiseAnd@shape1^0,c
  3342  001ECC                     
  3343                           ;main.c: 358: char BitwiseAnd(Shape shape1, Shape shape2);main.c: 359: {;main.c: 360:   
      +                            return ((shape1.byte & shape2.byte) > 0);
  3344  001ECC  5002               	movf	i2BitwiseAnd@shape1^0,w,c
  3345  001ECE  1401               	andwf	i2BitwiseAnd@shape2^0,w,c
  3346  001ED0  0900               	iorlw	0
  3347  001ED2  A4D8               	btfss	status,2,c
  3348  001ED4  EF6E  F00F         	goto	i2u158_41
  3349  001ED8  EF71  F00F         	goto	i2u158_40
  3350  001EDC                     i2u158_41:
  3351  001EDC  0E01               	movlw	1
  3352  001EDE  EF72  F00F         	goto	i2u159_40
  3353  001EE2                     i2u158_40:
  3354  001EE2  0E00               	movlw	0
  3355  001EE4                     i2u159_40:
  3356  001EE4  0012               	return		;funcret
  3357  001EE6                     __end_ofi2_BitwiseAnd:
  3358                           	callstack 0
  3359                           
  3360 ;; *************** function _HandlePortB *****************
  3361 ;; Defined at:
  3362 ;;		line 491 in file "main.c"
  3363 ;; Parameters:    Size  Location     Type
  3364 ;;		None
  3365 ;; Auto vars:     Size  Location     Type
  3366 ;;  currentPortB    1    3[COMRAM] unsigned char 
  3367 ;;  changedBits     1    2[COMRAM] unsigned char 
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3378 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3380 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3381 ;;Total ram usage:        2 bytes
  3382 ;; Hardware stack levels used:    1
  3383 ;; Hardware stack levels required when called:    1
  3384 ;; This function calls:
  3385 ;;		i2_RotateShape
  3386 ;; This function is called by:
  3387 ;;		_HandleInterrupt
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text22
  3392  001DAA                     __ptext22:
  3393                           	callstack 0
  3394  001DAA                     _HandlePortB:
  3395                           	callstack 24
  3396  001DAA                     
  3397                           ;main.c: 493:     char currentPortB = PORTB;
  3398  001DAA  CF81 F004          	movff	3969,HandlePortB@currentPortB	;volatile
  3399  001DAE                     
  3400                           ;main.c: 494:     char changedBits = currentPortB ^ lastPortB;
  3401  001DAE  5004               	movf	HandlePortB@currentPortB^0,w,c
  3402  001DB0  1843               	xorwf	_lastPortB^0,w,c
  3403  001DB2  6E03               	movwf	HandlePortB@changedBits^0,c
  3404  001DB4                     
  3405                           ;main.c: 497:     if (changedBits & (1 << 5))
  3406  001DB4  AA03               	btfss	HandlePortB@changedBits^0,5,c
  3407  001DB6  EFDF  F00E         	goto	i2u200_41
  3408  001DBA  EFE1  F00E         	goto	i2u200_40
  3409  001DBE                     i2u200_41:
  3410  001DBE  EFF9  F00E         	goto	i2l1834
  3411  001DC2                     i2u200_40:
  3412  001DC2                     
  3413                           ;main.c: 498:     {;main.c: 499:         if (currentPortB & (1 << 5))
  3414  001DC2  AA04               	btfss	HandlePortB@currentPortB^0,5,c
  3415  001DC4  EFE6  F00E         	goto	i2u201_41
  3416  001DC8  EFE8  F00E         	goto	i2u201_40
  3417  001DCC                     i2u201_41:
  3418  001DCC  EFF9  F00E         	goto	i2l1834
  3419  001DD0                     i2u201_40:
  3420  001DD0                     
  3421                           ;main.c: 500:         {;main.c: 502:             if (curTet.type == 2)
  3422  001DD0  0E02               	movlw	2
  3423  001DD2  183F               	xorwf	_curTet^0,w,c
  3424  001DD4  A4D8               	btfss	status,2,c
  3425  001DD6  EFEF  F00E         	goto	i2u202_41
  3426  001DDA  EFF1  F00E         	goto	i2u202_40
  3427  001DDE                     i2u202_41:
  3428  001DDE  EFF9  F00E         	goto	i2l1834
  3429  001DE2                     i2u202_40:
  3430  001DE2                     
  3431                           ;main.c: 503:             {;main.c: 504:                 RotateShape(&curTet.shape);
  3432  001DE2  0E42               	movlw	low (_curTet+3)
  3433  001DE4  6E01               	movwf	i2RotateShape@shape^0,c
  3434  001DE6  0E00               	movlw	high (_curTet+3)
  3435  001DE8  6E02               	movwf	(i2RotateShape@shape+1)^0,c
  3436  001DEA  EC30  F00F         	call	i2_RotateShape	;wreg free
  3437  001DEE  EFF9  F00E         	goto	i2l254
  3438  001DF2                     i2l1834:
  3439  001DF2                     i2l254:
  3440                           
  3441                           ;main.c: 517:     lastPortB = currentPortB;
  3442  001DF2  C004  F043         	movff	HandlePortB@currentPortB,_lastPortB
  3443  001DF6  0012               	return		;funcret
  3444  001DF8                     __end_of_HandlePortB:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function i2_RotateShape *****************
  3448 ;; Defined at:
  3449 ;;		line 447 in file "main.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  shape           2    0[COMRAM] PTR struct .
  3452 ;;		 -> curTet(4), 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;		None
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3464 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;Total ram usage:        2 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_HandlePortB
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text23
  3478  001E60                     __ptext23:
  3479                           	callstack 0
  3480  001E60                     i2_RotateShape:
  3481                           	callstack 24
  3482  001E60                     
  3483                           ;main.c: 447: void RotateShape(Shape *shape);main.c: 448: {;main.c: 449:     shape->byte
      +                           >>= 1;
  3484  001E60  C001  FFD9         	movff	i2RotateShape@shape,fsr2l
  3485  001E64  C002  FFDA         	movff	i2RotateShape@shape+1,fsr2h
  3486  001E68  90D8               	bcf	status,0,c
  3487  001E6A  32DF               	rrcf	indf2,f,c
  3488  001E6C                     
  3489                           ;main.c: 450:     shape->b0 = shape->r3;
  3490  001E6C  C001  FFD9         	movff	i2RotateShape@shape,fsr2l
  3491  001E70  C002  FFDA         	movff	i2RotateShape@shape+1,fsr2h
  3492  001E74  C001  FFE1         	movff	i2RotateShape@shape,fsr1l
  3493  001E78  C002  FFE2         	movff	i2RotateShape@shape+1,fsr1h
  3494  001E7C  B6DF               	btfsc	indf2,3,c
  3495  001E7E  D002               	bra	i2u195_45
  3496  001E80  9EE7               	bcf	indf1,7,c
  3497  001E82  D001               	bra	i2u195_46
  3498  001E84                     i2u195_45:
  3499  001E84  8EE7               	bsf	indf1,7,c
  3500  001E86                     i2u195_46:
  3501  001E86                     
  3502                           ;main.c: 451:     shape->r3 = 0;
  3503  001E86  C001  FFD9         	movff	i2RotateShape@shape,fsr2l
  3504  001E8A  C002  FFDA         	movff	i2RotateShape@shape+1,fsr2h
  3505  001E8E  96DF               	bcf	indf2,3,c
  3506  001E90  0012               	return		;funcret
  3507  001E92                     __end_ofi2_RotateShape:
  3508                           	callstack 0
  3509                           
  3510                           	psect	rparam
  3511  0000                     
  3512                           	psect	temp
  3513  000045                     btemp:
  3514                           	callstack 0
  3515  000045                     	ds	1
  3516  0000                     int$flags	set	btemp
  3517  0000                     wtemp8	set	btemp+1
  3518  0000                     ttemp5	set	btemp+1
  3519  0000                     ttemp6	set	btemp+4
  3520  0000                     ttemp7	set	btemp+8
  3521                           
  3522                           	psect	config
  3523                           
  3524                           ; Padding undefined space
  3525  300000                     	org	3145728
  3526  300000  FF                 	db	255
  3527                           
  3528                           ;Config register CONFIG1H @ 0x300001
  3529                           ;	Oscillator Selection bits
  3530                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  3531                           ;	Fail-Safe Clock Monitor Enable bit
  3532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3533                           ;	Internal/External Oscillator Switchover bit
  3534                           ;	IESO = OFF, Two-Speed Start-up disabled
  3535  300001                     	org	3145729
  3536  300001  06                 	db	6
  3537                           
  3538                           ;Config register CONFIG2L @ 0x300002
  3539                           ;	Power-up Timer Enable bit
  3540                           ;	PWRT = OFF, PWRT disabled
  3541                           ;	Brown-out Reset Enable bits
  3542                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3543                           ;	Brown-out Voltage bits
  3544                           ;	BORV = 0x3, unprogrammed default
  3545  300002                     	org	3145730
  3546  300002  19                 	db	25
  3547                           
  3548                           ;Config register CONFIG2H @ 0x300003
  3549                           ;	Watchdog Timer
  3550                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3551                           ;	Watchdog Timer Postscale Select bits
  3552                           ;	WDTPS = 0xF, unprogrammed default
  3553  300003                     	org	3145731
  3554  300003  1E                 	db	30
  3555                           
  3556                           ;Config register CONFIG3L @ 0x300004
  3557                           ;	unspecified, using default values
  3558                           ;	Processor Data Memory Mode Select bits
  3559                           ;	MODE = 0x3, unprogrammed default
  3560                           ;	Address Bus Width Select bits
  3561                           ;	ADDRBW = 0x3, unprogrammed default
  3562                           ;	Data Bus Width Select bit
  3563                           ;	DATABW = 0x1, unprogrammed default
  3564                           ;	External Bus Data Wait Enable bit
  3565                           ;	WAIT = 0x1, unprogrammed default
  3566  300004                     	org	3145732
  3567  300004  F3                 	db	243
  3568                           
  3569                           ;Config register CONFIG3H @ 0x300005
  3570                           ;	CCP2 MUX bit
  3571                           ;	CCP2MX = 0x1, unprogrammed default
  3572                           ;	ECCP MUX bit
  3573                           ;	ECCPMX = 0x1, unprogrammed default
  3574                           ;	Low-Power Timer1 Oscillator Enable bit
  3575                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3576                           ;	MCLR Pin Enable bit
  3577                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  3578  300005                     	org	3145733
  3579  300005  83                 	db	131
  3580                           
  3581                           ;Config register CONFIG4L @ 0x300006
  3582                           ;	Stack Full/Underflow Reset Enable bit
  3583                           ;	STVREN = 0x1, unprogrammed default
  3584                           ;	Single-Supply ICSP Enable bit
  3585                           ;	LVP = OFF, Single-Supply ICSP disabled
  3586                           ;	Boot Block Size Select bits
  3587                           ;	BBSIZ = 0x0, unprogrammed default
  3588                           ;	Extended Instruction Set Enable bit
  3589                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3590                           ;	Background Debugger Enable bit
  3591                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3592  300006                     	org	3145734
  3593  300006  81                 	db	129
  3594                           
  3595                           ; Padding undefined space
  3596  300007                     	org	3145735
  3597  300007  FF                 	db	255
  3598                           tosu	equ	0xFFF
  3599                           tosh	equ	0xFFE
  3600                           tosl	equ	0xFFD
  3601                           stkptr	equ	0xFFC
  3602                           pclatu	equ	0xFFB
  3603                           pclath	equ	0xFFA
  3604                           pcl	equ	0xFF9
  3605                           tblptru	equ	0xFF8
  3606                           tblptrh	equ	0xFF7
  3607                           tblptrl	equ	0xFF6
  3608                           tablat	equ	0xFF5
  3609                           prodh	equ	0xFF4
  3610                           prodl	equ	0xFF3
  3611                           indf0	equ	0xFEF
  3612                           postinc0	equ	0xFEE
  3613                           postdec0	equ	0xFED
  3614                           preinc0	equ	0xFEC
  3615                           plusw0	equ	0xFEB
  3616                           fsr0h	equ	0xFEA
  3617                           fsr0l	equ	0xFE9
  3618                           wreg	equ	0xFE8
  3619                           indf1	equ	0xFE7
  3620                           postinc1	equ	0xFE6
  3621                           postdec1	equ	0xFE5
  3622                           preinc1	equ	0xFE4
  3623                           plusw1	equ	0xFE3
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           bsr	equ	0xFE0
  3627                           indf2	equ	0xFDF
  3628                           postinc2	equ	0xFDE
  3629                           postdec2	equ	0xFDD
  3630                           preinc2	equ	0xFDC
  3631                           plusw2	equ	0xFDB
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         14
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     52      68
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    RotateShape@shape	PTR struct . size(2) Largest target is 4
		 -> curTet(COMRAM[4]), 

    SetQuartet@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 

    SetQuartet@shape	PTR struct . size(2) Largest target is 1
		 -> IsColliding@curQuartet(COMRAM[1]), UpdateBuffer@bq(COMRAM[1]), 

    GetQuartet2@shape	PTR struct . size(2) Largest target is 1
		 -> ShapeInBounds@shape(COMRAM[1]), 

    GetQuartet@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 

    GetQuartet@shape	PTR struct . size(2) Largest target is 1
		 -> IsColliding@shape(COMRAM[1]), IsColliding@curQuartet(COMRAM[1]), UpdateBuffer@bq(COMRAM[1]), 

    GetBoard@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 

    SetBoard@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _Update->_ListenPortA
    _UpdateBuffer->_SetQuartet
    _SetQuartet->_SetBoard
    _GetQuartet->_GetBoard
    _ListenPortA->_ShapeInBounds
    _ShapeInBounds->_GetQuartet2
    _InitBoard->_SetBoard

Critical Paths under _HandleInterrupt in COMRAM

    _HandleTimer->i2_ShapeInBounds
    i2_ShapeInBounds->i2_GetQuartet2
    _HandlePortB->i2_RotateShape

Critical Paths under _main in BANK0

    None.

Critical Paths under _HandleInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HandleInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HandleInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HandleInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HandleInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HandleInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HandleInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HandleInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HandleInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HandleInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HandleInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HandleInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HandleInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HandleInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HandleInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HandleInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9210
                          _InitBoard
                     _InitInterrupts
                         _InitTimers
                             _Render
                             _Update
 ---------------------------------------------------------------------------------
 (1) _Update                                               0     0      0    6986
                        _ListenPortA
                        _UpdateBoard
                       _UpdateBuffer
 ---------------------------------------------------------------------------------
 (2) _UpdateBuffer                                         1     1      0    5353
                                             50 COMRAM     1     1      0
                         _GetQuartet
                         _SetQuartet
 ---------------------------------------------------------------------------------
 (3) _SetQuartet                                           6     1      5    2910
                                             44 COMRAM     6     1      5
                           _SetBoard
 ---------------------------------------------------------------------------------
 (3) _GetQuartet                                          16    11      5    2390
                                             33 COMRAM    16    11      5
                           _GetBoard
 ---------------------------------------------------------------------------------
 (4) _GetBoard                                             7     4      3     766
                                             26 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _UpdateBoard                                          1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _ListenPortA                                          4     4      0    1633
                                             48 COMRAM     4     4      0
                      _ShapeInBounds
 ---------------------------------------------------------------------------------
 (3) _ShapeInBounds                                       12    11      1    1409
                                             36 COMRAM    12    11      1
                         _BitwiseAnd
                        _GetQuartet2
 ---------------------------------------------------------------------------------
 (4) _GetQuartet2                                         10     7      3     600
                                             26 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (4) _BitwiseAnd                                           2     1      1     196
                                             26 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Render                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimers                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitBoard                                            2     2      0    2224
                                             44 COMRAM     2     2      0
                        _RotateShape
                           _SetBoard
 ---------------------------------------------------------------------------------
 (4) _SetBoard                                            18    14      4    1874
                                             26 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (2) _RotateShape                                          2     0      2     214
                                             26 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HandleInterrupt                                      4     4      0    1099
                                             22 COMRAM     4     4      0
                        _HandlePortB
                        _HandleTimer
 ---------------------------------------------------------------------------------
 (6) _HandleTimer                                          0     0      0     851
                    i2_ShapeInBounds
 ---------------------------------------------------------------------------------
 (7) i2_ShapeInBounds                                     12    11      1     851
                                             10 COMRAM    12    11      1
                       i2_BitwiseAnd
                      i2_GetQuartet2
 ---------------------------------------------------------------------------------
 (8) i2_GetQuartet2                                       10     7      3     500
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (8) i2_BitwiseAnd                                         2     1      1      70
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (6) _HandlePortB                                          2     2      0     248
                                              2 COMRAM     2     2      0
                      i2_RotateShape
 ---------------------------------------------------------------------------------
 (7) i2_RotateShape                                        2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitBoard
     _RotateShape
     _SetBoard
   _InitInterrupts
   _InitTimers
   _Render
   _Update
     _ListenPortA
       _ShapeInBounds
         _BitwiseAnd
         _GetQuartet2
     _UpdateBoard
     _UpdateBuffer
       _GetQuartet
         _GetBoard
       _SetQuartet
         _SetBoard

 _HandleInterrupt (ROOT)
   _HandlePortB
     i2_RotateShape
   _HandleTimer
     i2_ShapeInBounds
       i2_BitwiseAnd
       i2_GetQuartet2

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     34      44       1       72.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      44      32        0.0%
DATA                 0      0      44       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Apr 19 18:06:01 2024

                       _L 1001                        l92 1F0E                        l95 1F22  
                      l89 1BCA                        l98 1F42            i2GetQuartet2@x 000A  
          i2GetQuartet2@y 0001                       l101 1F34                       l120 11BC  
                     l115 1124                       l125 1254                       l126 12A2  
                     l230 1A40                       l150 196E                       l135 1C74  
                     l233 1E5E                       l153 1F48                       l156 1DA8  
                     l159 1EC8                       l192 1D00                       l178 14E6  
                     l189 16B2                       _DOT 1009                       wreg 000FE8  
     __end_of_HandlePortB 1DF8       __end_of_HandleTimer 1E2E          BitwiseAnd@shape1 001C  
        BitwiseAnd@shape2 001B                InitBoard@i 002D                InitBoard@j 002E  
                    l1320 1F0C                      l1312 1EFC                      l1232 1F44  
                    l1330 1F1A                      l1322 1F10                      l1314 1F00  
                    l1332 1F1C                      l1324 1F14                      l1316 1F04  
                    l1500 14EA                      l1334 1F1E                      l1326 1F16  
                    l1318 1F08                      l1342 1F24                      l1510 1524  
                    l1502 14EE                      l1440 1014                      l1328 1F18  
                    l1520 1584                      l1512 1528                      l1504 14FE  
                    l1600 137C                      l1450 10B0                      l1442 1024  
                    l1530 160C                      l1522 1596                      l1514 1546  
                    l1506 150E                      l1610 141E                      l1602 138E  
                    l1460 11D0                      l1452 10EA                      l1444 105A  
                    l1540 1654                      l1532 162A                      l1524 159A  
                    l1516 1570                      l1508 1512                      l1700 18A6  
                    l1620 1490                      l1604 13AC                      l1612 143C  
                    l1462 11E0                      l1454 1138                      l1446 1090  
                    l1438 1010                      l1542 167E                      l1526 15B8  
                    l1534 162E                      l1518 1580                      l1550 1982  
                    l1710 18F8                      l1702 18C0                      l1622 14AE  
                    l1614 1444                      l1606 13D6                      l1464 121A  
                    l1456 1148                      l1448 10A0                      l1800 1B88  
                    l1544 169C                      l1536 1640                      l1528 15E2  
                    l1560 19C0                      l1552 198C                      l1720 1932  
                    l1712 18FA                      l1704 18C2                      l1480 1BF6  
                    l1624 14CC                      l1616 1456                      l1608 1400  
                    l1458 1182                      l1802 1B8A                      l1546 16A0  
                    l1538 1644                      l1570 1A06                      l1562 19D0  
                    l1554 199C                      l1722 1940                      l1714 1908  
                    l1706 18D0                      l1482 1C0A                      l1474 1BCE  
                    l1626 14D4                      l1618 1466                      l1730 1D5C  
                    l1810 1F3A                      l1468 1268                      l1804 1B9A  
                    l1572 1A0E                      l1564 19DA                      l1556 19AC  
                    l1548 1972                      l1724 194E                      l1716 1916  
                    l1708 18DE                      l1476 1BD2                      l1580 12A6  
                    l1628 1C78                      l1732 1D6E                      l1812 1F3E  
                    l1910 127C                      l1806 1BBE                      l1574 1A20  
                    l1566 19EA                      l1558 19B8                      l1726 1968  
                    l1718 1930                      l1478 1BE2                      l1486 1C1E  
                    l1590 12FE                      l1582 12B6                      l1734 1D88  
                    l1496 1EB0                      l1576 1A2C                      l1568 19FA  
                    l1728 196A                      l1488 1C58                      l1592 131C  
                    l1584 12C6                      l1736 1D8C                      l1808 1F36  
                    l1682 1E2E                      l1690 1884                      l1594 1346  
                    l1586 12E4                      l1738 1DA6                      l1684 1E3A  
                    l1780 1B24                      l1692 188A                      l1908 1C32  
                    l1596 1356                      l1588 12EC                      l1686 1E54  
                    l1782 1B34                      l1694 188A                      l1598 1374  
                    l1696 188A                      l1688 1880                      l1794 1B60  
                    l1778 1B14                      l1698 1898                      l1890 1E92  
                    l1796 1B76                      l1788 1B5C                      l1892 1E96  
                    l1798 1B78                      l1894 1E9A                      l1896 1E9E  
                    l1898 1EA2                      u1110 1148                      u1111 1144  
                    u1104 1100                      u1200 14FE                      u1105 10FA  
                    u1201 14FA                      u1050 1024                      u1210 150E  
                    u1051 1020                      u1211 150A                      u1140 11E0  
                    u1124 116A                      u1300 162A                      u1141 11DC  
                    u1125 1166                      u1301 1626                      u1134 1198  
                    u1230 1546                      u1135 1192                      u1231 1542  
                    u1080 10B0                      u1064 1042                      u1320 1654  
                    u1240 1570                      u1400 1A3E                      u1081 10AC  
                    u1065 103E                      u1321 1650                      u1241 156C  
                    u1225 1522                      u1401 1A38                      u1154 1202  
                    u1074 1070                      u1330 167E                      u1250 1580  
                    u1226 1524                      u1410 1A40                      u1155 11FE  
                    u1075 106A                      u1331 167A                      u1315 163E  
                    u1251 157C                      u1164 1230                      u1180 1EC6  
                    u1340 169C                      u1316 1640                      u1500 13D6  
                    u1420 12B6                      u1165 122A                      u1181 1EC0  
                    u1341 1698                      u1501 13D2                      u1421 12B2  
                    _LATA 000F89                      u1094 10D2                      u1190 1EC8  
                    u1270 15B8                      u1174 1C6A                      u1510 1400  
                    u1430 12C6                      _LATB 000F8A                      u1095 10CE  
                    u1271 15B4                      u1175 1C66                      u1511 13FC  
                    u1431 12C2                      _LATC 000F8B                      u1280 15E2  
                    u1360 1982                      u1520 141E                      _LATD 000F8C  
                    u1281 15DE                      u1265 1594                      u1361 197E  
                    u1521 141A                      _LATE 000F8D                      u1290 160C  
                    u1266 1596                      u1370 199C                      u1450 131C  
                    _LATF 000F8E                      u1355 16B0                      u1291 1608  
                    u1371 1998                      u1451 1318                      u1356 16B2  
                    u1380 19D0                      u1540 1466                      u1460 1346  
                    u1381 19CC                      u1541 1462                      u1461 1342  
                    u1445 12FC                      u1390 19EA                      u1550 1490  
                    u1470 1356                      u1446 12FE                      u1391 19E6  
                    u1551 148C                      u1535 1454                      u1471 1352  
                    u1800 18D0                      u1560 14AE                      u1536 1456  
                    u1801 18CC                      u1561 14AA                      u1810 18DE  
                    u1490 13AC                      u1811 18DA                      u1491 13A8  
                    u1820 18F8                      u1821 18F4                      u1485 138C  
                    u1830 1908                      u1486 138E                      u1831 1904  
                    u1575 14E4                      u1840 1916                      u1576 14E6  
                    u1841 1912                      u1850 1930                      u1770 1898  
                    u1851 192C                      u1771 1894                      u1860 1940  
                    u1780 18A6                      u1765 1E52                      u1861 193C  
                    u1781 18A2                      u1766 1E54                      u1870 194E  
                    u1790 18C0                      u1871 194A                      u1791 18BC  
                    u1960 1B88                      u1880 1968                      u1961 1B84  
                    u1881 1964                      u1970 1B9A                      u1971 1B96  
     __end_of_GetQuartet2 16B4                      _main 1E92                      fsr1h 000FE2  
                    fsr2h 000FDA                      indf1 000FE7                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 0045  
        ?i2_ShapeInBounds 000B                      start 000E              ___param_bank 000000  
           i2_RotateShape 1E60                _GetQuartet 12A4                     ?_main 0001  
                   _T0CON 000FD5                     i2l230 1B12                     i2l233 1E90  
                   i2l241 1D48                     i2l254 1DF2                     i2l238 1D34  
                   i2l159 1EE4                     i2l256 1DF6                     i2l248 1E2C  
                   i2l189 187E                     _TMR0H 000FD7                     _TMR0L 000FD6  
                   _PORTA 000F80                     _PORTB 000F81                _BitwiseAnd 1EAE  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95                     _TRISE 000F96                     _TRISF 000F97  
                   _board 003B                     _prevA 0036                     tablat 000FF5  
                   ttemp5 0046                     ttemp6 0049                     ttemp7 004D  
                   status 000FD8                     wtemp8 0046          __end_of_GetBoard 1C76  
          ?i2_RotateShape 0001           __initialization 1EE6             ??_ListenPortA 0031  
              _InitTimers 1EFC              __end_of_main 1EAE            _InitInterrupts 1F10  
       ??_HandleInterrupt 0017               _HandlePortB 1DAA               _HandleTimer 1DF8  
        __end_of_SetBoard 12A4                    ??_main 0035             __activetblptr 000003  
             _GetQuartet2 14E8                    _ADCON1 000FC1                    i2l1630 1ECC  
                  i2l1640 16DA                    i2l1650 173C                    i2l1642 16DE  
                  i2l1634 16B6                    i2l1660 1784                    i2l1652 174C  
                  i2l1644 16F0                    i2l1636 16BA                    i2l1740 1A44  
                  i2l1820 1E28                    i2l1830 1DD0                    i2l1822 1DAA  
                  i2l1670 180C                    i2l1662 17AE                    i2l1654 1750  
                  i2l1646 16F4                    i2l1638 16CA                    i2l1750 1A8A  
                  i2l1742 1A54                    i2l1814 1DF8                    i2l1832 1DE2  
                  i2l1824 1DAE                    i2l1680 186C                    i2l1672 1810  
                  i2l1664 17D8                    i2l1656 1762                    i2l1648 1712  
                  i2l1760 1ACC                    i2l1752 1A92                    i2l1744 1A5E  
                  i2l1816 1E0C                    i2l1834 1DF2                    i2l1826 1DB4  
                  i2l1674 1820                    i2l1666 17F6                    i2l1658 1766  
                  i2l1762 1AD8                    i2l1754 1AA2                    i2l1746 1A6E  
                  i2l1818 1E26                    i2l1772 1E60                    i2l1828 1DC2  
                  i2l1676 184A                    i2l1668 17FA                    i2l1764 1AE0  
                  i2l1756 1AAC                    i2l1748 1A7E                    i2l1774 1E6C  
                  i2l1678 1868                    i2l1766 1AF2                    i2l1758 1ABC  
                  i2l1776 1E86                    i2l1768 1AFE                    i2l1880 1D24  
                  i2l1882 1D28                    i2l1884 1D2C                    i2l1876 1D14  
                  i2l1886 1D42                    i2l1878 1D22                    i2l1888 1D44  
                  _INTCON 000FF2        __size_of_InitBoard 00B8                _SetQuartet 1C76  
                  _SQUARE 1005         _ShapeInBounds$550 0028         _ShapeInBounds$551 002A  
       _ShapeInBounds$552 002C         _ShapeInBounds$549 0026    __end_of_InitInterrupts 1F24  
                  _Render 1F24                    _Update 1F36                    _buffer 0037  
                  _curTet 003F                    clear_0 1EEC               ?_GetQuartet 0022  
     __end_of_ListenPortA 1970               ?_BitwiseAnd 001B              __mediumconst 0000  
      HandleTimer@counter 0035                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8             ??_UpdateBoard 001B                __accesstop 0060  
 __end_of__initialization 1EF2             ___rparam_used 000001           ??i2_RotateShape 0003  
           ??_RotateShape 001D           ?_InitInterrupts 0001            __pcstackCOMRAM 0001  
             ?_InitTimers 0001        i2RotateShape@shape 0001             GetBoard@board 001C  
       __end_of_InitBoard 1BCC    __size_of_ShapeInBounds 00D2    ShapeInBounds@returnVal 002E  
               ?_GetBoard 001B        i2GetQuartet2@shape 0002     __end_ofi2_GetQuartet2 1880  
             SetQuartet@x 0032               SetQuartet@y 002D               ?_SetQuartet 002D  
              __pnvCOMRAM 0043       __size_of_GetQuartet 0244                 ?_SetBoard 001B  
     __size_of_BitwiseAnd 001C                   ?_Render 0001                   ?_Update 0001  
     __end_of_UpdateBoard 1F4A               _ListenPortA 1880            _GetQuartet$470 0029  
          _GetQuartet$471 002B            _GetQuartet$472 002D            _GetQuartet$473 002F  
     __end_of_RotateShape 1E60         i2_GetQuartet2$486 0006         i2_GetQuartet2$487 0007  
       i2_GetQuartet2$488 0008         i2_GetQuartet2$489 0009                ??_GetBoard 001E  
     __size_of_InitTimers 0014        i2BitwiseAnd@shape1 0002        i2BitwiseAnd@shape2 0001  
           _ShapeInBounds 1970           _HandleInterrupt 0008                ??_SetBoard 001F  
                 __Hparam 0000                   __Lparam 0000           __size_of_Render 0012  
         __size_of_Update 000E              __psmallconst 1000  __size_ofi2_ShapeInBounds 00D2  
                 __pcinit 1EE6              ?_HandlePortB 0001              ?_HandleTimer 0001  
                 __ramtop 1000                   __ptext0 1E92                   __ptext1 1F36  
                 __ptext2 1D5C                   __ptext3 1C76                   __ptext4 12A4  
                 __ptext5 1BCC                   __ptext6 1F44                   __ptext7 1880  
                 __ptext8 1970                   __ptext9 14E8                 _T0CONbits 000FD5  
     __size_of_SetQuartet 008C       i2ShapeInBounds@dir0 0015       i2ShapeInBounds@dir1 000B  
           ?i2_BitwiseAnd 0001              ?_GetQuartet2 001B             ?_UpdateBuffer 0001  
          __pintcode_body 1D02      end_of_initialization 1EF2            ?_ShapeInBounds 0025  
                 int_func 1D02               _UpdateBoard 1F44        ShapeInBounds@shape 0030  
               GetBoard@x 0020                 GetBoard@y 001B               _RotateShape 1E2E  
                 postinc0 000FEE              ??_GetQuartet 0027            ??i2_BitwiseAnd 0002  
         GetQuartet@board 0025              ??_BitwiseAnd 001C           GetQuartet@shape 0023  
          ??_UpdateBuffer 0033   __end_of_HandleInterrupt 1D5C          ??_InitInterrupts 001B  
      __end_of_GetQuartet 14E8            __end_of_SQUARE 1009        __end_of_BitwiseAnd 1ECA  
            ??_InitTimers 001B            __end_of_Render 1F36            __end_of_Update 1F44  
               SetBoard@v 001C                 SetBoard@x 0024                 SetBoard@y 001B  
       ??i2_ShapeInBounds 000C       start_initialization 1EE6                 _InitBoard 1B14  
             __end_of_DOT 100D         __size_of_GetBoard 00AA           ??_ShapeInBounds 0026  
      __end_of_InitTimers 1F10              ??_SetQuartet 0032                  ??_Render 001B  
   __end_ofi2_RotateShape 1E92         __size_of_SetBoard 0296                  ??_Update 0035  
            ?_ListenPortA 0001    HandlePortB@changedBits 0003   HandlePortB@currentPortB 0004  
    __size_of_HandlePortB 004E      __size_of_HandleTimer 0036        __end_of_SetQuartet 1D02  
             __pbssCOMRAM 0035                ?_InitBoard 0001                 __end_of_L 1005  
        ?_HandleInterrupt 0001      __size_of_GetQuartet2 01CC              _SetBoard$391 0025  
            _SetBoard$392 0027              _SetBoard$393 0029              _SetBoard$394 002B  
    __end_ofi2_BitwiseAnd 1EE6                 __pintcode 0008      __end_of_UpdateBuffer 1DAA  
  __size_ofi2_GetQuartet2 01CC  i2ShapeInBounds@returnVal 0014           _GetQuartet2$486 0020  
         _GetQuartet2$487 0021           _GetQuartet2$488 0022           _GetQuartet2$489 0023  
             __smallconst 1000                 _lastPortA 0044                 _lastPortB 0043  
            ?_UpdateBoard 0001         ShapeInBounds@dir0 002F         ShapeInBounds@dir1 0025  
  ListenPortA@changedBits 0033                  i2u200_40 1DC2                  i2u200_41 1DBE  
                i2u201_40 1DD0                  i2u201_41 1DCC                  i2u202_40 1DE2  
                i2u202_41 1DDE                  i2u207_40 1D22                  i2u207_41 1D1E  
                i2u160_40 16CA                  i2u208_40 1D42                  i2u160_41 16C6  
                i2u208_41 1D3E              ?_RotateShape 001B                  i2u161_40 16DA  
                i2u161_41 16D6                  i2u170_40 17F6                  i2u170_41 17F2  
                i2u162_45 16EE                  i2u162_46 16F0                  i2u163_40 1712  
                i2u163_41 170E                  i2u171_45 180A                  i2u171_46 180C  
                i2u172_40 1820                  i2u164_40 173C                  i2u172_41 181C  
                i2u164_41 1738                  i2u173_40 184A                  i2u165_40 174C  
                i2u173_41 1846                  i2u165_41 1748                  i2u158_40 1EE2  
                i2u174_40 1868                  i2u190_40 1A6E                  i2u158_41 1EDC  
                i2u174_41 1864                  i2u190_41 1A6A                  i2u166_45 1760  
                i2u166_46 1762                  i2u159_40 1EE4                  i2u167_40 1784  
                i2u191_40 1AA2                  i2u167_41 1780                  i2u191_41 1A9E  
                i2u175_45 187C                  i2u175_46 187E                  i2u168_40 17AE  
                i2u192_40 1ABC                  i2u168_41 17AA                  i2u192_41 1AB8  
                i2u169_40 17D8                  i2u193_40 1B10                  i2u169_41 17D4  
                i2u193_41 1B0A                  i2u194_40 1B12                  i2u195_45 1E84  
                i2u195_46 1E86                  i2u189_40 1A54                  i2u189_41 1A50  
                i2u198_40 1E0C                  i2u198_41 1E08                  i2u199_40 1E26  
                i2u199_41 1E22                  _RCONbits 000FD0               ??_InitBoard 002D  
                _GetBoard 1BCC             i2_GetQuartet2 16B4                  _SetBoard 100E  
                __Hrparam 0000                  __Lrparam 0000            UpdateBuffer@bq 0033  
         i2_ShapeInBounds 1A42              GetQuartet2@x 0024              GetQuartet2@y 001B  
    __size_of_ListenPortA 00F0               GetBoard@col 0021            ?i2_GetQuartet2 0001  
                __ptext10 1EAE                  __ptext11 1F24                  __ptext20 16B4  
                __ptext12 1EFC                  __ptext21 1ECA                  __ptext13 1F10  
                __ptext22 1DAA                  __ptext14 1B14                  __ptext23 1E60  
                __ptext15 100E                  __ptext16 1E2E                  __ptext18 1DF8  
                __ptext19 1A42     __size_ofi2_BitwiseAnd 001C             __size_of_main 001C  
    i2ShapeInBounds@shape 0016   ListenPortA@currentPortA 0034     __size_of_UpdateBuffer 004E  
                int$flags 0045       i2_ShapeInBounds$550 000E       i2_ShapeInBounds$551 0010  
     i2_ShapeInBounds$552 0012       i2_ShapeInBounds$549 000C                _INTCONbits 000FF2  
            i2_BitwiseAnd 1ECA               GetQuartet@x 0031               GetQuartet@y 0022  
           SetBoard@board 001D              _UpdateBuffer 1D5C                  intlevel2 0000  
   __end_of_ShapeInBounds 1A42          RotateShape@shape 001B   __end_ofi2_ShapeInBounds 1B14  
    __size_of_UpdateBoard 0006      __size_of_RotateShape 0032   __size_of_InitInterrupts 0014  
           ??_HandlePortB 0003             ??_HandleTimer 0017          GetQuartet2@shape 001C  
         ??i2_GetQuartet2 0004             ??_GetQuartet2 001E    __size_ofi2_RotateShape 0032  
         SetQuartet@board 0030           SetQuartet@shape 002E  __size_of_HandleInterrupt 1D54  
