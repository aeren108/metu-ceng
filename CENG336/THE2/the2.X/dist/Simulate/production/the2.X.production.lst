

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Fri Apr 19 17:44:26 2024

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	18F8722
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F8722 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     
    69                           	psect	smallconst
    70  001000                     __psmallconst:
    71                           	callstack 0
    72  001000  00                 	db	0
    73  001001                     _L:
    74                           	callstack 0
    75  001001  02                 	db	2
    76  001002  00                 	db	0
    77  001003  00                 	db	0
    78  001004  E0                 	db	224
    79  001005                     __end_of_L:
    80                           	callstack 0
    81  001005  01                 	db	1
    82  001006  00                 	db	0
    83  001007  00                 	db	0
    84  001008  F0                 	db	240
    85  001009                     __end_of_SQUARE:
    86                           	callstack 0
    87  001009  00                 	db	0
    88  00100A  00                 	db	0
    89  00100B  00                 	db	0
    90  00100C  80                 	db	128
    91  00100D                     __end_of_DOT:
    92                           	callstack 0
    93  00100D  00                 	db	0	; dummy byte at the end
    94  0000                     
    95                           	psect	nvCOMRAM
    96  000030                     __pnvCOMRAM:
    97                           	callstack 0
    98  000030                     _lastPortB:
    99                           	callstack 0
   100  000030                     	ds	1
   101  000031                     _lastPortA:
   102                           	callstack 0
   103  000031                     	ds	1
   104  0000                     _INTCONbits	set	4082
   105  0000                     _RCONbits	set	4048
   106  0000                     _INTCON	set	4082
   107  0000                     _T0CONbits	set	4053
   108  0000                     _TMR0L	set	4054
   109  0000                     _TMR0H	set	4055
   110  0000                     _T0CON	set	4053
   111  0000                     _TRISF	set	3991
   112  0000                     _TRISE	set	3990
   113  0000                     _TRISD	set	3989
   114  0000                     _TRISC	set	3988
   115  0000                     _LATF	set	3982
   116  0000                     _LATE	set	3981
   117  0000                     _LATD	set	3980
   118  0000                     _LATC	set	3979
   119  0000                     _TRISB	set	3987
   120  0000                     _LATB	set	3978
   121  0000                     _PORTB	set	3969
   122  0000                     _TRISA	set	3986
   123  0000                     _LATA	set	3977
   124  0000                     _PORTA	set	3968
   125  0000                     _ADCON1	set	4033
   126                           
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  001AB0                     __pcinit:
   131                           	callstack 0
   132  001AB0                     start_initialization:
   133                           	callstack 0
   134  001AB0                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Clear objects allocated to COMRAM (14 bytes)
   138  001AB0  EE00  F022         	lfsr	0,__pbssCOMRAM
   139  001AB4  0E0E               	movlw	14
   140  001AB6                     clear_0:
   141  001AB6  6AEE               	clrf	postinc0,c
   142  001AB8  06E8               	decf	wreg,f,c
   143  001ABA  E1FD               	bnz	clear_0
   144  001ABC                     end_of_initialization:
   145                           	callstack 0
   146  001ABC                     __end_of__initialization:
   147                           	callstack 0
   148  001ABC  9032               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   149  001ABE  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   150  001AC0  0100               	movlb	0
   151  001AC2  EF4A  F00D         	goto	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMRAM
   154  000022                     __pbssCOMRAM:
   155                           	callstack 0
   156  000022                     HandleTimer@counter:
   157                           	callstack 0
   158  000022                     	ds	1
   159  000023                     _prevA:
   160                           	callstack 0
   161  000023                     	ds	1
   162  000024                     _buffer:
   163                           	callstack 0
   164  000024                     	ds	4
   165  000028                     _board:
   166                           	callstack 0
   167  000028                     	ds	4
   168  00002C                     _curTet:
   169                           	callstack 0
   170  00002C                     	ds	4
   171                           
   172                           	psect	cstackCOMRAM
   173  000001                     __pcstackCOMRAM:
   174                           	callstack 0
   175  000001                     ??_HandleTimer:
   176  000001                     i2RotateShape@shape:
   177                           	callstack 0
   178                           
   179                           ; 2 bytes @ 0x0
   180  000001                     	ds	2
   181  000003                     HandlePortB@changedBits:
   182                           	callstack 0
   183                           
   184                           ; 1 bytes @ 0x2
   185  000003                     	ds	1
   186  000004                     HandlePortB@currentPortB:
   187                           	callstack 0
   188                           
   189                           ; 1 bytes @ 0x3
   190  000004                     	ds	1
   191  000005                     ??_HandleInterrupt:
   192                           
   193                           ; 1 bytes @ 0x4
   194  000005                     	ds	4
   195  000009                     ??_ListenPortA:
   196  000009                     SetBoard@y:
   197                           	callstack 0
   198  000009                     GetBoard@y:
   199                           	callstack 0
   200  000009                     RotateShape@shape:
   201                           	callstack 0
   202                           
   203                           ; 2 bytes @ 0x8
   204  000009                     	ds	1
   205  00000A                     SetBoard@v:
   206                           	callstack 0
   207  00000A                     GetBoard@board:
   208                           	callstack 0
   209                           
   210                           ; 2 bytes @ 0x9
   211  00000A                     	ds	1
   212  00000B                     SetBoard@board:
   213                           	callstack 0
   214                           
   215                           ; 2 bytes @ 0xA
   216  00000B                     	ds	1
   217  00000C                     ??_GetBoard:
   218                           
   219                           ; 1 bytes @ 0xB
   220  00000C                     	ds	1
   221  00000D                     ??_SetBoard:
   222  00000D                     ListenPortA@changedBits:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0xC
   226  00000D                     	ds	1
   227  00000E                     GetBoard@x:
   228                           	callstack 0
   229  00000E                     ListenPortA@currentPortA:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0xD
   233  00000E                     	ds	1
   234  00000F                     GetBoard@col:
   235                           	callstack 0
   236  00000F                     ListenPortA@x:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0xE
   240  00000F                     	ds	1
   241  000010                     ListenPortA@y:
   242                           	callstack 0
   243  000010                     GetQuartet@y:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0xF
   247  000010                     	ds	1
   248  000011                     GetQuartet@shape:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x10
   252  000011                     	ds	1
   253  000012                     SetBoard@x:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x11
   257  000012                     	ds	1
   258  000013                     _SetBoard$385:
   259                           	callstack 0
   260  000013                     GetQuartet@board:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x12
   264  000013                     	ds	2
   265  000015                     ??_GetQuartet:
   266  000015                     _SetBoard$386:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x14
   270  000015                     	ds	2
   271  000017                     _SetBoard$387:
   272                           	callstack 0
   273  000017                     _GetQuartet$464:
   274                           	callstack 0
   275                           
   276                           ; 2 bytes @ 0x16
   277  000017                     	ds	2
   278  000019                     _SetBoard$388:
   279                           	callstack 0
   280  000019                     _GetQuartet$465:
   281                           	callstack 0
   282                           
   283                           ; 2 bytes @ 0x18
   284  000019                     	ds	2
   285  00001B                     InitBoard@i:
   286                           	callstack 0
   287  00001B                     SetQuartet@y:
   288                           	callstack 0
   289  00001B                     _GetQuartet$466:
   290                           	callstack 0
   291                           
   292                           ; 2 bytes @ 0x1A
   293  00001B                     	ds	1
   294  00001C                     InitBoard@j:
   295                           	callstack 0
   296  00001C                     SetQuartet@shape:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0x1B
   300  00001C                     	ds	1
   301  00001D                     _GetQuartet$467:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x1C
   305  00001D                     	ds	1
   306  00001E                     SetQuartet@board:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0x1D
   310  00001E                     	ds	1
   311  00001F                     GetQuartet@x:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x1E
   315  00001F                     	ds	1
   316  000020                     SetQuartet@x:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x1F
   320  000020                     	ds	1
   321  000021                     UpdateBuffer@bq:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x20
   325  000021                     	ds	1
   326  000022                     
   327                           ; 1 bytes @ 0x21
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 499 in file "main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels required when called:    7
   353 ;; This function calls:
   354 ;;		_InitBoard
   355 ;;		_InitInterrupts
   356 ;;		_InitTimers
   357 ;;		_Render
   358 ;;		_Update
   359 ;; This function is called by:
   360 ;;		Startup code after reset
   361 ;; This function uses a non-reentrant model
   362 ;;
   363                           
   364                           	psect	text0
   365  001A94                     __ptext0:
   366                           	callstack 0
   367  001A94                     _main:
   368                           	callstack 24
   369  001A94                     
   370                           ;main.c: 501:     InitBoard();
   371  001A94  EC74  F00B         	call	_InitBoard	;wreg free
   372  001A98                     
   373                           ;main.c: 502:     InitTimers();
   374  001A98  EC63  F00D         	call	_InitTimers	;wreg free
   375  001A9C                     
   376                           ;main.c: 503:     InitInterrupts();
   377  001A9C  EC6D  F00D         	call	_InitInterrupts	;wreg free
   378  001AA0                     l1502:
   379                           
   380                           ;main.c: 506:     {;main.c: 507:         Update();
   381  001AA0  EC80  F00D         	call	_Update	;wreg free
   382  001AA4                     
   383                           ;main.c: 508:         Render();
   384  001AA4  EC77  F00D         	call	_Render	;wreg free
   385  001AA8  EF50  F00D         	goto	l1502
   386  001AAC  EF07  F000         	goto	start
   387  001AB0                     __end_of_main:
   388                           	callstack 0
   389                           
   390 ;; *************** function _Update *****************
   391 ;; Defined at:
   392 ;;		line 214 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : 0/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   410 ;;Total ram usage:        0 bytes
   411 ;; Hardware stack levels used:    1
   412 ;; Hardware stack levels required when called:    6
   413 ;; This function calls:
   414 ;;		_ListenPortA
   415 ;;		_UpdateBoard
   416 ;;		_UpdateBuffer
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text1
   423  001B00                     __ptext1:
   424                           	callstack 0
   425  001B00                     _Update:
   426                           	callstack 24
   427  001B00                     
   428                           ;main.c: 216:     ListenPortA();
   429  001B00  EC74  F00A         	call	_ListenPortA	;wreg free
   430  001B04                     
   431                           ;main.c: 217:     UpdateBoard();
   432  001B04  EC87  F00D         	call	_UpdateBoard	;wreg free
   433  001B08                     
   434                           ;main.c: 218:     UpdateBuffer();
   435  001B08  ECF9  F00C         	call	_UpdateBuffer	;wreg free
   436  001B0C  0012               	return		;funcret
   437  001B0E                     __end_of_Update:
   438                           	callstack 0
   439                           
   440 ;; *************** function _UpdateBuffer *****************
   441 ;; Defined at:
   442 ;;		line 343 in file "main.c"
   443 ;; Parameters:    Size  Location     Type
   444 ;;		None
   445 ;; Auto vars:     Size  Location     Type
   446 ;;  bq              1   32[COMRAM] struct .
   447 ;; Return value:  Size  Location     Type
   448 ;;                  1    wreg      void 
   449 ;; Registers used:
   450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 0/0
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   460 ;;Total ram usage:        1 bytes
   461 ;; Hardware stack levels used:    1
   462 ;; Hardware stack levels required when called:    5
   463 ;; This function calls:
   464 ;;		_GetQuartet
   465 ;;		_SetQuartet
   466 ;; This function is called by:
   467 ;;		_Update
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text2
   472  0019F2                     __ptext2:
   473                           	callstack 0
   474  0019F2                     _UpdateBuffer:
   475                           	callstack 24
   476  0019F2                     
   477                           ;main.c: 345:     INTCONbits.TMR0IE = 0;
   478  0019F2  9AF2               	bcf	242,5,c	;volatile
   479  0019F4                     
   480                           ;main.c: 346:     Shape bq;;main.c: 347:     GetQuartet(curTet.x, curTet.y, &bq, &buffer
      +                          );
   481  0019F4  C02E  F010         	movff	_curTet+2,GetQuartet@y
   482  0019F8  0E21               	movlw	low UpdateBuffer@bq
   483  0019FA  6E11               	movwf	GetQuartet@shape^0,c
   484  0019FC  0E00               	movlw	high UpdateBuffer@bq
   485  0019FE  6E12               	movwf	(GetQuartet@shape+1)^0,c
   486  001A00  0E24               	movlw	low _buffer
   487  001A02  6E13               	movwf	GetQuartet@board^0,c
   488  001A04  0E00               	movlw	high _buffer
   489  001A06  6E14               	movwf	(GetQuartet@board+1)^0,c
   490  001A08  502D               	movf	(_curTet+1)^0,w,c
   491  001A0A  EC52  F009         	call	_GetQuartet
   492  001A0E                     
   493                           ;main.c: 348:     bq.byte |= curTet.shape.byte;
   494  001A0E  502F               	movf	(_curTet+3)^0,w,c
   495  001A10  1221               	iorwf	UpdateBuffer@bq^0,f,c
   496  001A12                     
   497                           ;main.c: 350:     SetQuartet(curTet.x, curTet.y, &bq, &buffer);
   498  001A12  C02E  F01B         	movff	_curTet+2,SetQuartet@y
   499  001A16  0E21               	movlw	low UpdateBuffer@bq
   500  001A18  6E1C               	movwf	SetQuartet@shape^0,c
   501  001A1A  0E00               	movlw	high UpdateBuffer@bq
   502  001A1C  6E1D               	movwf	(SetQuartet@shape+1)^0,c
   503  001A1E  0E24               	movlw	low _buffer
   504  001A20  6E1E               	movwf	SetQuartet@board^0,c
   505  001A22  0E00               	movlw	high _buffer
   506  001A24  6E1F               	movwf	(SetQuartet@board+1)^0,c
   507  001A26  502D               	movf	(_curTet+1)^0,w,c
   508  001A28  EC25  F00C         	call	_SetQuartet
   509  001A2C                     
   510                           ;main.c: 351:     INTCONbits.TMR0IE = 1;
   511  001A2C  8AF2               	bsf	242,5,c	;volatile
   512  001A2E  0012               	return		;funcret
   513  001A30                     __end_of_UpdateBuffer:
   514                           	callstack 0
   515                           
   516 ;; *************** function _SetQuartet *****************
   517 ;; Defined at:
   518 ;;		line 370 in file "main.c"
   519 ;; Parameters:    Size  Location     Type
   520 ;;  x               1    wreg     unsigned char 
   521 ;;  y               1   26[COMRAM] unsigned char 
   522 ;;  shape           2   27[COMRAM] PTR struct .
   523 ;;		 -> IsColliding@curQuartet(1), UpdateBuffer@bq(1), 
   524 ;;  board           2   29[COMRAM] PTR struct .
   525 ;;		 -> buffer(4), board(4), 
   526 ;; Auto vars:     Size  Location     Type
   527 ;;  x               1   31[COMRAM] unsigned char 
   528 ;; Return value:  Size  Location     Type
   529 ;;                  1    wreg      void 
   530 ;; Registers used:
   531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   532 ;; Tracked objects:
   533 ;;		On entry : 0/0
   534 ;;		On exit  : 0/0
   535 ;;		Unchanged: 0/0
   536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   537 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   538 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   540 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   541 ;;Total ram usage:        6 bytes
   542 ;; Hardware stack levels used:    1
   543 ;; Hardware stack levels required when called:    4
   544 ;; This function calls:
   545 ;;		_SetBoard
   546 ;; This function is called by:
   547 ;;		_UpdateBuffer
   548 ;;		_IsColliding
   549 ;; This function uses a non-reentrant model
   550 ;;
   551                           
   552                           	psect	text3
   553  00184A                     __ptext3:
   554                           	callstack 0
   555  00184A                     _SetQuartet:
   556                           	callstack 24
   557                           
   558                           ;incstack = 0
   559                           ;SetQuartet@x stored from wreg
   560  00184A  6E20               	movwf	SetQuartet@x^0,c
   561  00184C                     
   562                           ;main.c: 370: void SetQuartet(char x, char y, Shape *shape, Board* board);main.c: 371: {
      +                          ;main.c: 372:     SetBoard(x, y, (char) shape->b0, board);
   563  00184C  C01B  F009         	movff	SetQuartet@y,SetBoard@y
   564  001850  C01C  FFD9         	movff	SetQuartet@shape,fsr2l
   565  001854  C01D  FFDA         	movff	SetQuartet@shape+1,fsr2h
   566  001858  0E00               	movlw	0
   567  00185A  BEDF               	btfsc	indf2,7,c
   568  00185C  0E01               	movlw	1
   569  00185E  6E0A               	movwf	SetBoard@v^0,c
   570  001860  C01E  F00B         	movff	SetQuartet@board,SetBoard@board
   571  001864  C01F  F00C         	movff	SetQuartet@board+1,SetBoard@board+1
   572  001868  5020               	movf	SetQuartet@x^0,w,c
   573  00186A  EC07  F008         	call	_SetBoard
   574                           
   575                           ;main.c: 373:     SetBoard(x + 1, y, (char) shape->b1, board);
   576  00186E  C01B  F009         	movff	SetQuartet@y,SetBoard@y
   577  001872  C01C  FFD9         	movff	SetQuartet@shape,fsr2l
   578  001876  C01D  FFDA         	movff	SetQuartet@shape+1,fsr2h
   579  00187A  0E00               	movlw	0
   580  00187C  BCDF               	btfsc	indf2,6,c
   581  00187E  0E01               	movlw	1
   582  001880  6E0A               	movwf	SetBoard@v^0,c
   583  001882  C01E  F00B         	movff	SetQuartet@board,SetBoard@board
   584  001886  C01F  F00C         	movff	SetQuartet@board+1,SetBoard@board+1
   585  00188A  2820               	incf	SetQuartet@x^0,w,c
   586  00188C  EC07  F008         	call	_SetBoard
   587                           
   588                           ;main.c: 374:     SetBoard(x + 1, y + 1, (char) shape->b2, board);
   589  001890  281B               	incf	SetQuartet@y^0,w,c
   590  001892  6E09               	movwf	SetBoard@y^0,c
   591  001894  C01C  FFD9         	movff	SetQuartet@shape,fsr2l
   592  001898  C01D  FFDA         	movff	SetQuartet@shape+1,fsr2h
   593  00189C  0E00               	movlw	0
   594  00189E  BADF               	btfsc	indf2,5,c
   595  0018A0  0E01               	movlw	1
   596  0018A2  6E0A               	movwf	SetBoard@v^0,c
   597  0018A4  C01E  F00B         	movff	SetQuartet@board,SetBoard@board
   598  0018A8  C01F  F00C         	movff	SetQuartet@board+1,SetBoard@board+1
   599  0018AC  2820               	incf	SetQuartet@x^0,w,c
   600  0018AE  EC07  F008         	call	_SetBoard
   601                           
   602                           ;main.c: 375:     SetBoard(x, y + 1, (char) shape->b3, board);
   603  0018B2  281B               	incf	SetQuartet@y^0,w,c
   604  0018B4  6E09               	movwf	SetBoard@y^0,c
   605  0018B6  C01C  FFD9         	movff	SetQuartet@shape,fsr2l
   606  0018BA  C01D  FFDA         	movff	SetQuartet@shape+1,fsr2h
   607  0018BE  0E00               	movlw	0
   608  0018C0  B8DF               	btfsc	indf2,4,c
   609  0018C2  0E01               	movlw	1
   610  0018C4  6E0A               	movwf	SetBoard@v^0,c
   611  0018C6  C01E  F00B         	movff	SetQuartet@board,SetBoard@board
   612  0018CA  C01F  F00C         	movff	SetQuartet@board+1,SetBoard@board+1
   613  0018CE  5020               	movf	SetQuartet@x^0,w,c
   614  0018D0  EC07  F008         	call	_SetBoard
   615  0018D4  0012               	return		;funcret
   616  0018D6                     __end_of_SetQuartet:
   617                           	callstack 0
   618                           
   619 ;; *************** function _GetQuartet *****************
   620 ;; Defined at:
   621 ;;		line 361 in file "main.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;  x               1    wreg     unsigned char 
   624 ;;  y               1   15[COMRAM] unsigned char 
   625 ;;  shape           2   16[COMRAM] PTR struct .
   626 ;;		 -> IsColliding@shape(1), IsColliding@curQuartet(1), UpdateBuffer@bq(1), 
   627 ;;  board           2   18[COMRAM] PTR struct .
   628 ;;		 -> buffer(4), board(4), 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  x               1   30[COMRAM] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:       16 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    4
   647 ;; This function calls:
   648 ;;		_GetBoard
   649 ;; This function is called by:
   650 ;;		_UpdateBuffer
   651 ;;		_IsColliding
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text4
   656  0012A4                     __ptext4:
   657                           	callstack 0
   658  0012A4                     _GetQuartet:
   659                           	callstack 24
   660                           
   661                           ;incstack = 0
   662                           ;GetQuartet@x stored from wreg
   663  0012A4  6E1F               	movwf	GetQuartet@x^0,c
   664  0012A6                     
   665                           ;main.c: 361: void GetQuartet(char x, char y, Shape *shape, Board* board);main.c: 362: {
      +                          ;main.c: 363:     shape->b0 = (((x) < 0) || ((x) > 3) || ((y) > 7) || ((y) < 0)) ? 1 : G
      +                          etBoard(x, y, board);
   666  0012A6  0E04               	movlw	4
   667  0012A8  601F               	cpfslt	GetQuartet@x^0,c
   668  0012AA  EF59  F009         	goto	u821
   669  0012AE  EF5B  F009         	goto	u820
   670  0012B2                     u821:
   671  0012B2  EF72  F009         	goto	l1326
   672  0012B6                     u820:
   673  0012B6  0E08               	movlw	8
   674  0012B8  6010               	cpfslt	GetQuartet@y^0,c
   675  0012BA  EF61  F009         	goto	u831
   676  0012BE  EF63  F009         	goto	u830
   677  0012C2                     u831:
   678  0012C2  EF72  F009         	goto	l1326
   679  0012C6                     u830:
   680  0012C6  C010  F009         	movff	GetQuartet@y,GetBoard@y
   681  0012CA  C013  F00A         	movff	GetQuartet@board,GetBoard@board
   682  0012CE  C014  F00B         	movff	GetQuartet@board+1,GetBoard@board+1
   683  0012D2  501F               	movf	GetQuartet@x^0,w,c
   684  0012D4  ECD0  F00B         	call	_GetBoard
   685  0012D8  6E15               	movwf	??_GetQuartet^0,c
   686  0012DA  5015               	movf	??_GetQuartet^0,w,c
   687  0012DC  6E17               	movwf	_GetQuartet$464^0,c
   688  0012DE  6A18               	clrf	(_GetQuartet$464+1)^0,c
   689  0012E0  EF76  F009         	goto	l1328
   690  0012E4                     l1326:
   691  0012E4  0E00               	movlw	0
   692  0012E6  6E18               	movwf	(_GetQuartet$464+1)^0,c
   693  0012E8  0E01               	movlw	1
   694  0012EA  6E17               	movwf	_GetQuartet$464^0,c
   695  0012EC                     l1328:
   696  0012EC  C011  FFD9         	movff	GetQuartet@shape,fsr2l
   697  0012F0  C012  FFDA         	movff	GetQuartet@shape+1,fsr2h
   698  0012F4  B017               	btfsc	_GetQuartet$464^0,0,c
   699  0012F6  D002               	bra	u845
   700  0012F8  9EDF               	bcf	indf2,7,c
   701  0012FA  D001               	bra	u846
   702  0012FC                     u845:
   703  0012FC  8EDF               	bsf	indf2,7,c
   704  0012FE                     u846:
   705  0012FE                     
   706                           ;main.c: 364:     shape->b1 = (((x + 1) < 0) || ((x + 1) > 3) || ((y) > 7) || ((y) < 0))
      +                           ? 1 : GetBoard(x + 1, y, board);
   707  0012FE  501F               	movf	GetQuartet@x^0,w,c
   708  001300  6E15               	movwf	??_GetQuartet^0,c
   709  001302  6A16               	clrf	(??_GetQuartet+1)^0,c
   710  001304  0E01               	movlw	1
   711  001306  2415               	addwf	??_GetQuartet^0,w,c
   712  001308  0E00               	movlw	0
   713  00130A  2016               	addwfc	(??_GetQuartet+1)^0,w,c
   714  00130C  0B80               	andlw	128
   715  00130E  A4D8               	btfss	status,2,c
   716  001310  EF8C  F009         	goto	u851
   717  001314  EF8E  F009         	goto	u850
   718  001318                     u851:
   719  001318  EFBA  F009         	goto	l1338
   720  00131C                     u850:
   721  00131C  501F               	movf	GetQuartet@x^0,w,c
   722  00131E  6E15               	movwf	??_GetQuartet^0,c
   723  001320  6A16               	clrf	(??_GetQuartet+1)^0,c
   724  001322  0E01               	movlw	1
   725  001324  2615               	addwf	??_GetQuartet^0,f,c
   726  001326  0E00               	movlw	0
   727  001328  2216               	addwfc	(??_GetQuartet+1)^0,f,c
   728  00132A  BE16               	btfsc	(??_GetQuartet+1)^0,7,c
   729  00132C  EFA3  F009         	goto	u860
   730  001330  5016               	movf	(??_GetQuartet+1)^0,w,c
   731  001332  E107               	bnz	u861
   732  001334  0E04               	movlw	4
   733  001336  5C15               	subwf	??_GetQuartet^0,w,c
   734  001338  B0D8               	btfsc	status,0,c
   735  00133A  EFA1  F009         	goto	u861
   736  00133E  EFA3  F009         	goto	u860
   737  001342                     u861:
   738  001342  EFBA  F009         	goto	l1338
   739  001346                     u860:
   740  001346  0E08               	movlw	8
   741  001348  6010               	cpfslt	GetQuartet@y^0,c
   742  00134A  EFA9  F009         	goto	u871
   743  00134E  EFAB  F009         	goto	u870
   744  001352                     u871:
   745  001352  EFBA  F009         	goto	l1338
   746  001356                     u870:
   747  001356  C010  F009         	movff	GetQuartet@y,GetBoard@y
   748  00135A  C013  F00A         	movff	GetQuartet@board,GetBoard@board
   749  00135E  C014  F00B         	movff	GetQuartet@board+1,GetBoard@board+1
   750  001362  281F               	incf	GetQuartet@x^0,w,c
   751  001364  ECD0  F00B         	call	_GetBoard
   752  001368  6E15               	movwf	??_GetQuartet^0,c
   753  00136A  5015               	movf	??_GetQuartet^0,w,c
   754  00136C  6E19               	movwf	_GetQuartet$465^0,c
   755  00136E  6A1A               	clrf	(_GetQuartet$465+1)^0,c
   756  001370  EFBE  F009         	goto	l1340
   757  001374                     l1338:
   758  001374  0E00               	movlw	0
   759  001376  6E1A               	movwf	(_GetQuartet$465+1)^0,c
   760  001378  0E01               	movlw	1
   761  00137A  6E19               	movwf	_GetQuartet$465^0,c
   762  00137C                     l1340:
   763  00137C  C011  FFD9         	movff	GetQuartet@shape,fsr2l
   764  001380  C012  FFDA         	movff	GetQuartet@shape+1,fsr2h
   765  001384  B019               	btfsc	_GetQuartet$465^0,0,c
   766  001386  D002               	bra	u885
   767  001388  9CDF               	bcf	indf2,6,c
   768  00138A  D001               	bra	u886
   769  00138C                     u885:
   770  00138C  8CDF               	bsf	indf2,6,c
   771  00138E                     u886:
   772  00138E                     
   773                           ;main.c: 365:     shape->b2 = (((x + 1) < 0) || ((x + 1) > 3) || ((y + 1) > 7) || ((y + 
      +                          1) < 0)) ? 1 : GetBoard(x + 1, y + 1, board);
   774  00138E  501F               	movf	GetQuartet@x^0,w,c
   775  001390  6E15               	movwf	??_GetQuartet^0,c
   776  001392  6A16               	clrf	(??_GetQuartet+1)^0,c
   777  001394  0E01               	movlw	1
   778  001396  2415               	addwf	??_GetQuartet^0,w,c
   779  001398  0E00               	movlw	0
   780  00139A  2016               	addwfc	(??_GetQuartet+1)^0,w,c
   781  00139C  0B80               	andlw	128
   782  00139E  A4D8               	btfss	status,2,c
   783  0013A0  EFD4  F009         	goto	u891
   784  0013A4  EFD6  F009         	goto	u890
   785  0013A8                     u891:
   786  0013A8  EF1E  F00A         	goto	l1352
   787  0013AC                     u890:
   788  0013AC  501F               	movf	GetQuartet@x^0,w,c
   789  0013AE  6E15               	movwf	??_GetQuartet^0,c
   790  0013B0  6A16               	clrf	(??_GetQuartet+1)^0,c
   791  0013B2  0E01               	movlw	1
   792  0013B4  2615               	addwf	??_GetQuartet^0,f,c
   793  0013B6  0E00               	movlw	0
   794  0013B8  2216               	addwfc	(??_GetQuartet+1)^0,f,c
   795  0013BA  BE16               	btfsc	(??_GetQuartet+1)^0,7,c
   796  0013BC  EFEB  F009         	goto	u900
   797  0013C0  5016               	movf	(??_GetQuartet+1)^0,w,c
   798  0013C2  E107               	bnz	u901
   799  0013C4  0E04               	movlw	4
   800  0013C6  5C15               	subwf	??_GetQuartet^0,w,c
   801  0013C8  B0D8               	btfsc	status,0,c
   802  0013CA  EFE9  F009         	goto	u901
   803  0013CE  EFEB  F009         	goto	u900
   804  0013D2                     u901:
   805  0013D2  EF1E  F00A         	goto	l1352
   806  0013D6                     u900:
   807  0013D6  5010               	movf	GetQuartet@y^0,w,c
   808  0013D8  6E15               	movwf	??_GetQuartet^0,c
   809  0013DA  6A16               	clrf	(??_GetQuartet+1)^0,c
   810  0013DC  0E01               	movlw	1
   811  0013DE  2615               	addwf	??_GetQuartet^0,f,c
   812  0013E0  0E00               	movlw	0
   813  0013E2  2216               	addwfc	(??_GetQuartet+1)^0,f,c
   814  0013E4  BE16               	btfsc	(??_GetQuartet+1)^0,7,c
   815  0013E6  EF00  F00A         	goto	u910
   816  0013EA  5016               	movf	(??_GetQuartet+1)^0,w,c
   817  0013EC  E107               	bnz	u911
   818  0013EE  0E08               	movlw	8
   819  0013F0  5C15               	subwf	??_GetQuartet^0,w,c
   820  0013F2  B0D8               	btfsc	status,0,c
   821  0013F4  EFFE  F009         	goto	u911
   822  0013F8  EF00  F00A         	goto	u910
   823  0013FC                     u911:
   824  0013FC  EF1E  F00A         	goto	l1352
   825  001400                     u910:
   826  001400  5010               	movf	GetQuartet@y^0,w,c
   827  001402  6E15               	movwf	??_GetQuartet^0,c
   828  001404  6A16               	clrf	(??_GetQuartet+1)^0,c
   829  001406  0E01               	movlw	1
   830  001408  2415               	addwf	??_GetQuartet^0,w,c
   831  00140A  0E00               	movlw	0
   832  00140C  2016               	addwfc	(??_GetQuartet+1)^0,w,c
   833  00140E  0B80               	andlw	128
   834  001410  A4D8               	btfss	status,2,c
   835  001412  EF0D  F00A         	goto	u921
   836  001416  EF0F  F00A         	goto	u920
   837  00141A                     u921:
   838  00141A  EF1E  F00A         	goto	l1352
   839  00141E                     u920:
   840  00141E  2810               	incf	GetQuartet@y^0,w,c
   841  001420  6E09               	movwf	GetBoard@y^0,c
   842  001422  C013  F00A         	movff	GetQuartet@board,GetBoard@board
   843  001426  C014  F00B         	movff	GetQuartet@board+1,GetBoard@board+1
   844  00142A  281F               	incf	GetQuartet@x^0,w,c
   845  00142C  ECD0  F00B         	call	_GetBoard
   846  001430  6E15               	movwf	??_GetQuartet^0,c
   847  001432  5015               	movf	??_GetQuartet^0,w,c
   848  001434  6E1B               	movwf	_GetQuartet$466^0,c
   849  001436  6A1C               	clrf	(_GetQuartet$466+1)^0,c
   850  001438  EF22  F00A         	goto	l1354
   851  00143C                     l1352:
   852  00143C  0E00               	movlw	0
   853  00143E  6E1C               	movwf	(_GetQuartet$466+1)^0,c
   854  001440  0E01               	movlw	1
   855  001442  6E1B               	movwf	_GetQuartet$466^0,c
   856  001444                     l1354:
   857  001444  C011  FFD9         	movff	GetQuartet@shape,fsr2l
   858  001448  C012  FFDA         	movff	GetQuartet@shape+1,fsr2h
   859  00144C  B01B               	btfsc	_GetQuartet$466^0,0,c
   860  00144E  D002               	bra	u935
   861  001450  9ADF               	bcf	indf2,5,c
   862  001452  D001               	bra	u936
   863  001454                     u935:
   864  001454  8ADF               	bsf	indf2,5,c
   865  001456                     u936:
   866  001456                     
   867                           ;main.c: 366:     shape->b3 = (((x) < 0) || ((x) > 3) || ((y + 1) > 7) || ((y + 1) < 0))
      +                           ? 1 : GetBoard(x, y + 1, board);
   868  001456  0E04               	movlw	4
   869  001458  601F               	cpfslt	GetQuartet@x^0,c
   870  00145A  EF31  F00A         	goto	u941
   871  00145E  EF33  F00A         	goto	u940
   872  001462                     u941:
   873  001462  EF66  F00A         	goto	l1364
   874  001466                     u940:
   875  001466  5010               	movf	GetQuartet@y^0,w,c
   876  001468  6E15               	movwf	??_GetQuartet^0,c
   877  00146A  6A16               	clrf	(??_GetQuartet+1)^0,c
   878  00146C  0E01               	movlw	1
   879  00146E  2615               	addwf	??_GetQuartet^0,f,c
   880  001470  0E00               	movlw	0
   881  001472  2216               	addwfc	(??_GetQuartet+1)^0,f,c
   882  001474  BE16               	btfsc	(??_GetQuartet+1)^0,7,c
   883  001476  EF48  F00A         	goto	u950
   884  00147A  5016               	movf	(??_GetQuartet+1)^0,w,c
   885  00147C  E107               	bnz	u951
   886  00147E  0E08               	movlw	8
   887  001480  5C15               	subwf	??_GetQuartet^0,w,c
   888  001482  B0D8               	btfsc	status,0,c
   889  001484  EF46  F00A         	goto	u951
   890  001488  EF48  F00A         	goto	u950
   891  00148C                     u951:
   892  00148C  EF66  F00A         	goto	l1364
   893  001490                     u950:
   894  001490  5010               	movf	GetQuartet@y^0,w,c
   895  001492  6E15               	movwf	??_GetQuartet^0,c
   896  001494  6A16               	clrf	(??_GetQuartet+1)^0,c
   897  001496  0E01               	movlw	1
   898  001498  2415               	addwf	??_GetQuartet^0,w,c
   899  00149A  0E00               	movlw	0
   900  00149C  2016               	addwfc	(??_GetQuartet+1)^0,w,c
   901  00149E  0B80               	andlw	128
   902  0014A0  A4D8               	btfss	status,2,c
   903  0014A2  EF55  F00A         	goto	u961
   904  0014A6  EF57  F00A         	goto	u960
   905  0014AA                     u961:
   906  0014AA  EF66  F00A         	goto	l1364
   907  0014AE                     u960:
   908  0014AE  2810               	incf	GetQuartet@y^0,w,c
   909  0014B0  6E09               	movwf	GetBoard@y^0,c
   910  0014B2  C013  F00A         	movff	GetQuartet@board,GetBoard@board
   911  0014B6  C014  F00B         	movff	GetQuartet@board+1,GetBoard@board+1
   912  0014BA  501F               	movf	GetQuartet@x^0,w,c
   913  0014BC  ECD0  F00B         	call	_GetBoard
   914  0014C0  6E15               	movwf	??_GetQuartet^0,c
   915  0014C2  5015               	movf	??_GetQuartet^0,w,c
   916  0014C4  6E1D               	movwf	_GetQuartet$467^0,c
   917  0014C6  6A1E               	clrf	(_GetQuartet$467+1)^0,c
   918  0014C8  EF6A  F00A         	goto	l1366
   919  0014CC                     l1364:
   920  0014CC  0E00               	movlw	0
   921  0014CE  6E1E               	movwf	(_GetQuartet$467+1)^0,c
   922  0014D0  0E01               	movlw	1
   923  0014D2  6E1D               	movwf	_GetQuartet$467^0,c
   924  0014D4                     l1366:
   925  0014D4  C011  FFD9         	movff	GetQuartet@shape,fsr2l
   926  0014D8  C012  FFDA         	movff	GetQuartet@shape+1,fsr2h
   927  0014DC  B01D               	btfsc	_GetQuartet$467^0,0,c
   928  0014DE  D002               	bra	u975
   929  0014E0  98DF               	bcf	indf2,4,c
   930  0014E2  D001               	bra	u976
   931  0014E4                     u975:
   932  0014E4  88DF               	bsf	indf2,4,c
   933  0014E6                     u976:
   934  0014E6  0012               	return		;funcret
   935  0014E8                     __end_of_GetQuartet:
   936                           	callstack 0
   937                           
   938 ;; *************** function _GetBoard *****************
   939 ;; Defined at:
   940 ;;		line 248 in file "main.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  x               1    wreg     unsigned char 
   943 ;;  y               1    8[COMRAM] unsigned char 
   944 ;;  board           2    9[COMRAM] PTR struct .
   945 ;;		 -> buffer(4), board(4), 
   946 ;; Auto vars:     Size  Location     Type
   947 ;;  x               1   13[COMRAM] unsigned char 
   948 ;;  col             1   14[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      unsigned char 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   958 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;Total ram usage:        7 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    3
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		_GetQuartet
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text5
   973  0017A0                     __ptext5:
   974                           	callstack 0
   975  0017A0                     _GetBoard:
   976                           	callstack 24
   977                           
   978                           ;incstack = 0
   979                           ;GetBoard@x stored from wreg
   980  0017A0  6E0E               	movwf	GetBoard@x^0,c
   981  0017A2                     
   982                           ;main.c: 248: char GetBoard(char x, char y, Board *board);main.c: 249: {;main.c: 250:   
      +                            char col;;main.c: 251:     switch (x)
   983  0017A2  EFF9  F00B         	goto	l1310
   984  0017A6                     l1300:
   985                           
   986                           ;main.c: 254:             col = board->col0;
   987  0017A6  C00A  FFD9         	movff	GetBoard@board,fsr2l
   988  0017AA  C00B  FFDA         	movff	GetBoard@board+1,fsr2h
   989  0017AE  50DF               	movf	indf2,w,c
   990  0017B0  6E0F               	movwf	GetBoard@col^0,c
   991                           
   992                           ;main.c: 255:             break;
   993  0017B2  EF16  F00C         	goto	l1312
   994  0017B6                     l1302:
   995                           
   996                           ;main.c: 257:             col = board->col1;
   997  0017B6  EE20 F001          	lfsr	2,1
   998  0017BA  500A               	movf	GetBoard@board^0,w,c
   999  0017BC  26D9               	addwf	fsr2l,f,c
  1000  0017BE  500B               	movf	(GetBoard@board+1)^0,w,c
  1001  0017C0  22DA               	addwfc	fsr2h,f,c
  1002  0017C2  50DF               	movf	indf2,w,c
  1003  0017C4  6E0F               	movwf	GetBoard@col^0,c
  1004                           
  1005                           ;main.c: 258:             break;
  1006  0017C6  EF16  F00C         	goto	l1312
  1007  0017CA                     l1304:
  1008                           
  1009                           ;main.c: 260:             col = board->col2;
  1010  0017CA  EE20 F002          	lfsr	2,2
  1011  0017CE  500A               	movf	GetBoard@board^0,w,c
  1012  0017D0  26D9               	addwf	fsr2l,f,c
  1013  0017D2  500B               	movf	(GetBoard@board+1)^0,w,c
  1014  0017D4  22DA               	addwfc	fsr2h,f,c
  1015  0017D6  50DF               	movf	indf2,w,c
  1016  0017D8  6E0F               	movwf	GetBoard@col^0,c
  1017                           
  1018                           ;main.c: 261:             break;
  1019  0017DA  EF16  F00C         	goto	l1312
  1020  0017DE                     l1306:
  1021                           
  1022                           ;main.c: 263:             col = board->col3;
  1023  0017DE  EE20 F003          	lfsr	2,3
  1024  0017E2  500A               	movf	GetBoard@board^0,w,c
  1025  0017E4  26D9               	addwf	fsr2l,f,c
  1026  0017E6  500B               	movf	(GetBoard@board+1)^0,w,c
  1027  0017E8  22DA               	addwfc	fsr2h,f,c
  1028  0017EA  50DF               	movf	indf2,w,c
  1029  0017EC  6E0F               	movwf	GetBoard@col^0,c
  1030                           
  1031                           ;main.c: 264:             break;
  1032  0017EE  EF16  F00C         	goto	l1312
  1033  0017F2                     l1310:
  1034  0017F2  500E               	movf	GetBoard@x^0,w,c
  1035  0017F4  6E0C               	movwf	??_GetBoard^0,c
  1036  0017F6  6A0D               	clrf	(??_GetBoard+1)^0,c
  1037                           
  1038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1039                           ; Switch size 1, requested type "simple"
  1040                           ; Number of cases is 1, Range of values is 0 to 0
  1041                           ; switch strategies available:
  1042                           ; Name         Instructions Cycles
  1043                           ; simple_byte            4     3 (average)
  1044                           ;	Chosen strategy is simple_byte
  1045  0017F8  500D               	movf	(??_GetBoard+1)^0,w,c
  1046  0017FA  0A00               	xorlw	0	; case 0
  1047  0017FC  B4D8               	btfsc	status,2,c
  1048  0017FE  EF03  F00C         	goto	l1514
  1049  001802  EF16  F00C         	goto	l1312
  1050  001806                     l1514:
  1051                           
  1052                           ; Switch size 1, requested type "simple"
  1053                           ; Number of cases is 4, Range of values is 0 to 3
  1054                           ; switch strategies available:
  1055                           ; Name         Instructions Cycles
  1056                           ; simple_byte           13     7 (average)
  1057                           ;	Chosen strategy is simple_byte
  1058  001806  500C               	movf	??_GetBoard^0,w,c
  1059  001808  0A00               	xorlw	0	; case 0
  1060  00180A  B4D8               	btfsc	status,2,c
  1061  00180C  EFD3  F00B         	goto	l1300
  1062  001810  0A01               	xorlw	1	; case 1
  1063  001812  B4D8               	btfsc	status,2,c
  1064  001814  EFDB  F00B         	goto	l1302
  1065  001818  0A03               	xorlw	3	; case 2
  1066  00181A  B4D8               	btfsc	status,2,c
  1067  00181C  EFE5  F00B         	goto	l1304
  1068  001820  0A01               	xorlw	1	; case 3
  1069  001822  B4D8               	btfsc	status,2,c
  1070  001824  EFEF  F00B         	goto	l1306
  1071  001828  EF16  F00C         	goto	l1312
  1072  00182C                     l1312:
  1073                           
  1074                           ;main.c: 267:     return ((col >> y) & 0x01);
  1075  00182C  C009  F00C         	movff	GetBoard@y,??_GetBoard
  1076  001830  C00F  F00D         	movff	GetBoard@col,??_GetBoard+1
  1077  001834  2A0C               	incf	??_GetBoard^0,f,c
  1078  001836  EF1F  F00C         	goto	u814
  1079  00183A                     u815:
  1080  00183A  90D8               	bcf	status,0,c
  1081  00183C  320D               	rrcf	(??_GetBoard+1)^0,f,c
  1082  00183E                     u814:
  1083  00183E  2E0C               	decfsz	??_GetBoard^0,f,c
  1084  001840  EF1D  F00C         	goto	u815
  1085  001844  500D               	movf	(??_GetBoard+1)^0,w,c
  1086  001846  0B01               	andlw	1
  1087  001848  0012               	return		;funcret
  1088  00184A                     __end_of_GetBoard:
  1089                           	callstack 0
  1090                           
  1091 ;; *************** function _UpdateBoard *****************
  1092 ;; Defined at:
  1093 ;;		line 332 in file "main.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  bq              1    0        struct .
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		None
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    3
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_Update
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text6
  1122  001B0E                     __ptext6:
  1123                           	callstack 0
  1124  001B0E                     _UpdateBoard:
  1125                           	callstack 26
  1126  001B0E                     
  1127                           ;main.c: 334:     INTCONbits.TMR0IE = 0;
  1128  001B0E  9AF2               	bcf	242,5,c	;volatile
  1129                           
  1130                           ;main.c: 335:     Shape bq;;main.c: 340:     INTCONbits.TMR0IE = 1;
  1131  001B10  8AF2               	bsf	242,5,c	;volatile
  1132  001B12  0012               	return		;funcret
  1133  001B14                     __end_of_UpdateBoard:
  1134                           	callstack 0
  1135                           
  1136 ;; *************** function _ListenPortA *****************
  1137 ;; Defined at:
  1138 ;;		line 270 in file "main.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  y               1   15[COMRAM] unsigned char 
  1143 ;;  x               1   14[COMRAM] unsigned char 
  1144 ;;  currentPortA    1   13[COMRAM] unsigned char 
  1145 ;;  changedBits     1   12[COMRAM] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1156 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;Total ram usage:        8 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    3
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_Update
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text7
  1170  0014E8                     __ptext7:
  1171                           	callstack 0
  1172  0014E8                     _ListenPortA:
  1173                           	callstack 26
  1174  0014E8                     
  1175                           ;main.c: 273:     char currentPortA = PORTA;
  1176  0014E8  CF80 F00E          	movff	3968,ListenPortA@currentPortA	;volatile
  1177  0014EC                     
  1178                           ;main.c: 275:     char changedBits = currentPortA ^ lastPortA;
  1179  0014EC  500E               	movf	ListenPortA@currentPortA^0,w,c
  1180  0014EE  1831               	xorwf	_lastPortA^0,w,c
  1181  0014F0  6E0D               	movwf	ListenPortA@changedBits^0,c
  1182  0014F2                     
  1183                           ;main.c: 278:     char x = curTet.x;
  1184  0014F2  C02D  F00F         	movff	_curTet+1,ListenPortA@x
  1185  0014F6                     
  1186                           ;main.c: 279:     char y = curTet.y;
  1187  0014F6  C02E  F010         	movff	_curTet+2,ListenPortA@y
  1188  0014FA                     
  1189                           ;main.c: 280:     if (changedBits & (1 << 0))
  1190  0014FA  A00D               	btfss	ListenPortA@changedBits^0,0,c
  1191  0014FC  EF82  F00A         	goto	u311
  1192  001500  EF84  F00A         	goto	u310
  1193  001504                     u311:
  1194  001504  EFB8  F00A         	goto	l1042
  1195  001508                     u310:
  1196  001508                     
  1197                           ;main.c: 281:     {;main.c: 282:         if (currentPortA & (1 << 0))
  1198  001508  A00E               	btfss	ListenPortA@currentPortA^0,0,c
  1199  00150A  EF89  F00A         	goto	u321
  1200  00150E  EF8B  F00A         	goto	u320
  1201  001512                     u321:
  1202  001512  EFB8  F00A         	goto	l1042
  1203  001516                     u320:
  1204  001516                     
  1205                           ;main.c: 283:         {;main.c: 284:             if(!(((x + 1) < 0) || ((x + 1) > 3) || 
      +                          ((y) > 7) || ((y) < 0)))
  1206  001516  500F               	movf	ListenPortA@x^0,w,c
  1207  001518  6E09               	movwf	??_ListenPortA^0,c
  1208  00151A  6A0A               	clrf	(??_ListenPortA+1)^0,c
  1209  00151C  0E01               	movlw	1
  1210  00151E  2409               	addwf	??_ListenPortA^0,w,c
  1211  001520  0E00               	movlw	0
  1212  001522  200A               	addwfc	(??_ListenPortA+1)^0,w,c
  1213  001524  0B80               	andlw	128
  1214  001526  A4D8               	btfss	status,2,c
  1215  001528  EF98  F00A         	goto	u331
  1216  00152C  EF9A  F00A         	goto	u330
  1217  001530                     u331:
  1218  001530  EFB8  F00A         	goto	l1042
  1219  001534                     u330:
  1220  001534  500F               	movf	ListenPortA@x^0,w,c
  1221  001536  6E09               	movwf	??_ListenPortA^0,c
  1222  001538  6A0A               	clrf	(??_ListenPortA+1)^0,c
  1223  00153A  0E01               	movlw	1
  1224  00153C  2609               	addwf	??_ListenPortA^0,f,c
  1225  00153E  0E00               	movlw	0
  1226  001540  220A               	addwfc	(??_ListenPortA+1)^0,f,c
  1227  001542  BE0A               	btfsc	(??_ListenPortA+1)^0,7,c
  1228  001544  EFAF  F00A         	goto	u340
  1229  001548  500A               	movf	(??_ListenPortA+1)^0,w,c
  1230  00154A  E107               	bnz	u341
  1231  00154C  0E04               	movlw	4
  1232  00154E  5C09               	subwf	??_ListenPortA^0,w,c
  1233  001550  B0D8               	btfsc	status,0,c
  1234  001552  EFAD  F00A         	goto	u341
  1235  001556  EFAF  F00A         	goto	u340
  1236  00155A                     u341:
  1237  00155A  EFB8  F00A         	goto	l1042
  1238  00155E                     u340:
  1239  00155E  0E08               	movlw	8
  1240  001560  6010               	cpfslt	ListenPortA@y^0,c
  1241  001562  EFB5  F00A         	goto	u351
  1242  001566  EFB7  F00A         	goto	u350
  1243  00156A                     u351:
  1244  00156A  EFB8  F00A         	goto	l1042
  1245  00156E                     u350:
  1246  00156E                     
  1247                           ;main.c: 285:             {;main.c: 286:                 curTet.x++;
  1248  00156E  2A2D               	incf	(_curTet+1)^0,f,c
  1249  001570                     l1042:
  1250                           
  1251                           ;main.c: 291:     if (changedBits & (1 << 1))
  1252  001570  A20D               	btfss	ListenPortA@changedBits^0,1,c
  1253  001572  EFBD  F00A         	goto	u361
  1254  001576  EFBF  F00A         	goto	u360
  1255  00157A                     u361:
  1256  00157A  EFF7  F00A         	goto	l1054
  1257  00157E                     u360:
  1258  00157E                     
  1259                           ;main.c: 292:     {;main.c: 293:         if (currentPortA & (1 << 1))
  1260  00157E  A20E               	btfss	ListenPortA@currentPortA^0,1,c
  1261  001580  EFC4  F00A         	goto	u371
  1262  001584  EFC6  F00A         	goto	u370
  1263  001588                     u371:
  1264  001588  EFF7  F00A         	goto	l1054
  1265  00158C                     u370:
  1266  00158C                     
  1267                           ;main.c: 294:         {;main.c: 295:             if(!(((x) < 0) || ((x) > 3) || ((y - 1)
      +                           > 7) || ((y - 1) < 0)))
  1268  00158C  0E04               	movlw	4
  1269  00158E  600F               	cpfslt	ListenPortA@x^0,c
  1270  001590  EFCC  F00A         	goto	u381
  1271  001594  EFCE  F00A         	goto	u380
  1272  001598                     u381:
  1273  001598  EFF7  F00A         	goto	l1054
  1274  00159C                     u380:
  1275  00159C  0EFF               	movlw	255
  1276  00159E  6E09               	movwf	??_ListenPortA^0,c
  1277  0015A0  0EFF               	movlw	255
  1278  0015A2  6E0A               	movwf	(??_ListenPortA+1)^0,c
  1279  0015A4  5010               	movf	ListenPortA@y^0,w,c
  1280  0015A6  6E0B               	movwf	(??_ListenPortA+2)^0,c
  1281  0015A8  6A0C               	clrf	(??_ListenPortA+3)^0,c
  1282  0015AA  5009               	movf	??_ListenPortA^0,w,c
  1283  0015AC  260B               	addwf	(??_ListenPortA+2)^0,f,c
  1284  0015AE  500A               	movf	(??_ListenPortA+1)^0,w,c
  1285  0015B0  220C               	addwfc	(??_ListenPortA+3)^0,f,c
  1286  0015B2  BE0C               	btfsc	(??_ListenPortA+3)^0,7,c
  1287  0015B4  EFE7  F00A         	goto	u390
  1288  0015B8  500C               	movf	(??_ListenPortA+3)^0,w,c
  1289  0015BA  E107               	bnz	u391
  1290  0015BC  0E08               	movlw	8
  1291  0015BE  5C0B               	subwf	(??_ListenPortA+2)^0,w,c
  1292  0015C0  B0D8               	btfsc	status,0,c
  1293  0015C2  EFE5  F00A         	goto	u391
  1294  0015C6  EFE7  F00A         	goto	u390
  1295  0015CA                     u391:
  1296  0015CA  EFF7  F00A         	goto	l1054
  1297  0015CE                     u390:
  1298  0015CE  5010               	movf	ListenPortA@y^0,w,c
  1299  0015D0  6E09               	movwf	??_ListenPortA^0,c
  1300  0015D2  6A0A               	clrf	(??_ListenPortA+1)^0,c
  1301  0015D4  0EFF               	movlw	255
  1302  0015D6  2409               	addwf	??_ListenPortA^0,w,c
  1303  0015D8  0EFF               	movlw	255
  1304  0015DA  200A               	addwfc	(??_ListenPortA+1)^0,w,c
  1305  0015DC  0B80               	andlw	128
  1306  0015DE  A4D8               	btfss	status,2,c
  1307  0015E0  EFF4  F00A         	goto	u401
  1308  0015E4  EFF6  F00A         	goto	u400
  1309  0015E8                     u401:
  1310  0015E8  EFF7  F00A         	goto	l1054
  1311  0015EC                     u400:
  1312  0015EC                     
  1313                           ;main.c: 296:             {;main.c: 297:                 curTet.y--;
  1314  0015EC  062E               	decf	(_curTet+2)^0,f,c
  1315  0015EE                     l1054:
  1316                           
  1317                           ;main.c: 302:     if (changedBits & (1 << 2))
  1318  0015EE  A40D               	btfss	ListenPortA@changedBits^0,2,c
  1319  0015F0  EFFC  F00A         	goto	u411
  1320  0015F4  EFFE  F00A         	goto	u410
  1321  0015F8                     u411:
  1322  0015F8  EF32  F00B         	goto	l1066
  1323  0015FC                     u410:
  1324  0015FC                     
  1325                           ;main.c: 303:     {;main.c: 304:         if (currentPortA & (1 << 2))
  1326  0015FC  A40E               	btfss	ListenPortA@currentPortA^0,2,c
  1327  0015FE  EF03  F00B         	goto	u421
  1328  001602  EF05  F00B         	goto	u420
  1329  001606                     u421:
  1330  001606  EF32  F00B         	goto	l1066
  1331  00160A                     u420:
  1332  00160A                     
  1333                           ;main.c: 305:         {;main.c: 306:             if(!(((x) < 0) || ((x) > 3) || ((y + 1)
      +                           > 7) || ((y + 1) < 0)))
  1334  00160A  0E04               	movlw	4
  1335  00160C  600F               	cpfslt	ListenPortA@x^0,c
  1336  00160E  EF0B  F00B         	goto	u431
  1337  001612  EF0D  F00B         	goto	u430
  1338  001616                     u431:
  1339  001616  EF32  F00B         	goto	l1066
  1340  00161A                     u430:
  1341  00161A  5010               	movf	ListenPortA@y^0,w,c
  1342  00161C  6E09               	movwf	??_ListenPortA^0,c
  1343  00161E  6A0A               	clrf	(??_ListenPortA+1)^0,c
  1344  001620  0E01               	movlw	1
  1345  001622  2609               	addwf	??_ListenPortA^0,f,c
  1346  001624  0E00               	movlw	0
  1347  001626  220A               	addwfc	(??_ListenPortA+1)^0,f,c
  1348  001628  BE0A               	btfsc	(??_ListenPortA+1)^0,7,c
  1349  00162A  EF22  F00B         	goto	u440
  1350  00162E  500A               	movf	(??_ListenPortA+1)^0,w,c
  1351  001630  E107               	bnz	u441
  1352  001632  0E08               	movlw	8
  1353  001634  5C09               	subwf	??_ListenPortA^0,w,c
  1354  001636  B0D8               	btfsc	status,0,c
  1355  001638  EF20  F00B         	goto	u441
  1356  00163C  EF22  F00B         	goto	u440
  1357  001640                     u441:
  1358  001640  EF32  F00B         	goto	l1066
  1359  001644                     u440:
  1360  001644  5010               	movf	ListenPortA@y^0,w,c
  1361  001646  6E09               	movwf	??_ListenPortA^0,c
  1362  001648  6A0A               	clrf	(??_ListenPortA+1)^0,c
  1363  00164A  0E01               	movlw	1
  1364  00164C  2409               	addwf	??_ListenPortA^0,w,c
  1365  00164E  0E00               	movlw	0
  1366  001650  200A               	addwfc	(??_ListenPortA+1)^0,w,c
  1367  001652  0B80               	andlw	128
  1368  001654  A4D8               	btfss	status,2,c
  1369  001656  EF2F  F00B         	goto	u451
  1370  00165A  EF31  F00B         	goto	u450
  1371  00165E                     u451:
  1372  00165E  EF32  F00B         	goto	l1066
  1373  001662                     u450:
  1374  001662                     
  1375                           ;main.c: 307:             {;main.c: 308:                 curTet.y++;
  1376  001662  2A2E               	incf	(_curTet+2)^0,f,c
  1377  001664                     l1066:
  1378                           
  1379                           ;main.c: 313:     if (changedBits & (1 << 3))
  1380  001664  A60D               	btfss	ListenPortA@changedBits^0,3,c
  1381  001666  EF37  F00B         	goto	u461
  1382  00166A  EF39  F00B         	goto	u460
  1383  00166E                     u461:
  1384  00166E  EF71  F00B         	goto	l1078
  1385  001672                     u460:
  1386  001672                     
  1387                           ;main.c: 314:     {;main.c: 315:         if (currentPortA & (1 << 3))
  1388  001672  A60E               	btfss	ListenPortA@currentPortA^0,3,c
  1389  001674  EF3E  F00B         	goto	u471
  1390  001678  EF40  F00B         	goto	u470
  1391  00167C                     u471:
  1392  00167C  EF71  F00B         	goto	l1078
  1393  001680                     u470:
  1394  001680                     
  1395                           ;main.c: 316:         {;main.c: 317:             if(!(((x - 1) < 0) || ((x - 1) > 3) || 
      +                          ((y) > 7) || ((y) < 0)))
  1396  001680  500F               	movf	ListenPortA@x^0,w,c
  1397  001682  6E09               	movwf	??_ListenPortA^0,c
  1398  001684  6A0A               	clrf	(??_ListenPortA+1)^0,c
  1399  001686  0EFF               	movlw	255
  1400  001688  2409               	addwf	??_ListenPortA^0,w,c
  1401  00168A  0EFF               	movlw	255
  1402  00168C  200A               	addwfc	(??_ListenPortA+1)^0,w,c
  1403  00168E  0B80               	andlw	128
  1404  001690  A4D8               	btfss	status,2,c
  1405  001692  EF4D  F00B         	goto	u481
  1406  001696  EF4F  F00B         	goto	u480
  1407  00169A                     u481:
  1408  00169A  EF71  F00B         	goto	l1078
  1409  00169E                     u480:
  1410  00169E  0EFF               	movlw	255
  1411  0016A0  6E09               	movwf	??_ListenPortA^0,c
  1412  0016A2  0EFF               	movlw	255
  1413  0016A4  6E0A               	movwf	(??_ListenPortA+1)^0,c
  1414  0016A6  500F               	movf	ListenPortA@x^0,w,c
  1415  0016A8  6E0B               	movwf	(??_ListenPortA+2)^0,c
  1416  0016AA  6A0C               	clrf	(??_ListenPortA+3)^0,c
  1417  0016AC  5009               	movf	??_ListenPortA^0,w,c
  1418  0016AE  260B               	addwf	(??_ListenPortA+2)^0,f,c
  1419  0016B0  500A               	movf	(??_ListenPortA+1)^0,w,c
  1420  0016B2  220C               	addwfc	(??_ListenPortA+3)^0,f,c
  1421  0016B4  BE0C               	btfsc	(??_ListenPortA+3)^0,7,c
  1422  0016B6  EF68  F00B         	goto	u490
  1423  0016BA  500C               	movf	(??_ListenPortA+3)^0,w,c
  1424  0016BC  E107               	bnz	u491
  1425  0016BE  0E04               	movlw	4
  1426  0016C0  5C0B               	subwf	(??_ListenPortA+2)^0,w,c
  1427  0016C2  B0D8               	btfsc	status,0,c
  1428  0016C4  EF66  F00B         	goto	u491
  1429  0016C8  EF68  F00B         	goto	u490
  1430  0016CC                     u491:
  1431  0016CC  EF71  F00B         	goto	l1078
  1432  0016D0                     u490:
  1433  0016D0  0E08               	movlw	8
  1434  0016D2  6010               	cpfslt	ListenPortA@y^0,c
  1435  0016D4  EF6E  F00B         	goto	u501
  1436  0016D8  EF70  F00B         	goto	u500
  1437  0016DC                     u501:
  1438  0016DC  EF71  F00B         	goto	l1078
  1439  0016E0                     u500:
  1440  0016E0                     
  1441                           ;main.c: 318:             {;main.c: 319:                 curTet.x--;
  1442  0016E0  062D               	decf	(_curTet+1)^0,f,c
  1443  0016E2                     l1078:
  1444                           
  1445                           ;main.c: 325:     lastPortA = currentPortA;
  1446  0016E2  C00E  F031         	movff	ListenPortA@currentPortA,_lastPortA
  1447  0016E6  0012               	return		;funcret
  1448  0016E8                     __end_of_ListenPortA:
  1449                           	callstack 0
  1450                           
  1451 ;; *************** function _Render *****************
  1452 ;; Defined at:
  1453 ;;		line 221 in file "main.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;		None
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  1    wreg      void 
  1460 ;; Registers used:
  1461 ;;		None
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1471 ;;Total ram usage:        0 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    3
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text8
  1482  001AEE                     __ptext8:
  1483                           	callstack 0
  1484  001AEE                     _Render:
  1485                           	callstack 27
  1486  001AEE                     
  1487                           ;main.c: 223:     LATC = buffer.col0;
  1488  001AEE  C024  FF8B         	movff	_buffer,3979	;volatile
  1489                           
  1490                           ;main.c: 224:     LATD = buffer.col1;
  1491  001AF2  C025  FF8C         	movff	_buffer+1,3980	;volatile
  1492                           
  1493                           ;main.c: 225:     LATE = buffer.col2;
  1494  001AF6  C026  FF8D         	movff	_buffer+2,3981	;volatile
  1495                           
  1496                           ;main.c: 226:     LATF = buffer.col3;
  1497  001AFA  C027  FF8E         	movff	_buffer+3,3982	;volatile
  1498  001AFE  0012               	return		;funcret
  1499  001B00                     __end_of_Render:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _InitTimers *****************
  1503 ;; Defined at:
  1504 ;;		line 187 in file "main.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;		None
  1507 ;; Auto vars:     Size  Location     Type
  1508 ;;		None
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, status,2, status,0
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;Total ram usage:        0 bytes
  1523 ;; Hardware stack levels used:    1
  1524 ;; Hardware stack levels required when called:    3
  1525 ;; This function calls:
  1526 ;;		Nothing
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text9
  1533  001AC6                     __ptext9:
  1534                           	callstack 0
  1535  001AC6                     _InitTimers:
  1536                           	callstack 27
  1537  001AC6                     
  1538                           ;main.c: 189:     T0CON = 0x00;
  1539  001AC6  0E00               	movlw	0
  1540  001AC8  6ED5               	movwf	213,c	;volatile
  1541  001ACA                     
  1542                           ;main.c: 191:     T0CON |= 0x05;
  1543  001ACA  0E05               	movlw	5
  1544  001ACC  12D5               	iorwf	213,f,c	;volatile
  1545  001ACE                     
  1546                           ;main.c: 192:     TMR0H = 0x67;
  1547  001ACE  0E67               	movlw	103
  1548  001AD0  6ED7               	movwf	215,c	;volatile
  1549  001AD2                     
  1550                           ;main.c: 193:     TMR0L = 0x69;
  1551  001AD2  0E69               	movlw	105
  1552  001AD4  6ED6               	movwf	214,c	;volatile
  1553  001AD6                     
  1554                           ;main.c: 195:     T0CONbits.TMR0ON = 1;
  1555  001AD6  8ED5               	bsf	213,7,c	;volatile
  1556  001AD8  0012               	return		;funcret
  1557  001ADA                     __end_of_InitTimers:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _InitInterrupts *****************
  1561 ;; Defined at:
  1562 ;;		line 198 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    3
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text10
  1591  001ADA                     __ptext10:
  1592                           	callstack 0
  1593  001ADA                     _InitInterrupts:
  1594                           	callstack 27
  1595  001ADA                     
  1596                           ;main.c: 202:     INTCON &= 0b00000111;
  1597  001ADA  0E07               	movlw	7
  1598  001ADC  16F2               	andwf	242,f,c	;volatile
  1599  001ADE                     
  1600                           ;main.c: 204:     RCONbits.IPEN = 0;
  1601  001ADE  9ED0               	bcf	208,7,c	;volatile
  1602  001AE0                     
  1603                           ;main.c: 206:     INTCONbits.GIE = 1;
  1604  001AE0  8EF2               	bsf	242,7,c	;volatile
  1605  001AE2                     
  1606                           ;main.c: 207:     INTCONbits.PEIE = 0;
  1607  001AE2  9CF2               	bcf	242,6,c	;volatile
  1608  001AE4                     
  1609                           ;main.c: 208:     INTCONbits.TMR0IE = 1;
  1610  001AE4  8AF2               	bsf	242,5,c	;volatile
  1611  001AE6                     
  1612                           ;main.c: 209:     INTCONbits.RBIE = 1;
  1613  001AE6  86F2               	bsf	242,3,c	;volatile
  1614  001AE8                     
  1615                           ;main.c: 211:     TRISB = 0b01100000;
  1616  001AE8  0E60               	movlw	96
  1617  001AEA  6E93               	movwf	147,c	;volatile
  1618  001AEC  0012               	return		;funcret
  1619  001AEE                     __end_of_InitInterrupts:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _InitBoard *****************
  1623 ;; Defined at:
  1624 ;;		line 146 in file "main.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;  j               1   27[COMRAM] unsigned char 
  1629 ;;  i               1   26[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1642 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1643 ;;Total ram usage:        2 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    4
  1646 ;; This function calls:
  1647 ;;		_RotateShape
  1648 ;;		_SetBoard
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text11
  1655  0016E8                     __ptext11:
  1656                           	callstack 0
  1657  0016E8                     _InitBoard:
  1658                           	callstack 26
  1659  0016E8                     
  1660                           ;main.c: 148:     ADCON1 = 0x0F;
  1661  0016E8  0E0F               	movlw	15
  1662  0016EA  6EC1               	movwf	193,c	;volatile
  1663                           
  1664                           ;main.c: 151:     PORTA = 0x00;
  1665  0016EC  0E00               	movlw	0
  1666  0016EE  6E80               	movwf	128,c	;volatile
  1667                           
  1668                           ;main.c: 152:     LATA = 0x00;
  1669  0016F0  0E00               	movlw	0
  1670  0016F2  6E89               	movwf	137,c	;volatile
  1671                           
  1672                           ;main.c: 153:     TRISA = 0b00001111;
  1673  0016F4  0E0F               	movlw	15
  1674  0016F6  6E92               	movwf	146,c	;volatile
  1675  0016F8                     
  1676                           ;main.c: 154:     lastPortA = PORTA;
  1677  0016F8  CF80 F031          	movff	3968,_lastPortA	;volatile
  1678                           
  1679                           ;main.c: 157:     PORTB = 0x00;
  1680  0016FC  0E00               	movlw	0
  1681  0016FE  6E81               	movwf	129,c	;volatile
  1682                           
  1683                           ;main.c: 158:     LATB = 0x00;
  1684  001700  0E00               	movlw	0
  1685  001702  6E8A               	movwf	138,c	;volatile
  1686                           
  1687                           ;main.c: 159:     TRISB = 0b01100000;
  1688  001704  0E60               	movlw	96
  1689  001706  6E93               	movwf	147,c	;volatile
  1690  001708                     
  1691                           ;main.c: 160:     lastPortB = PORTB;
  1692  001708  CF81 F030          	movff	3969,_lastPortB	;volatile
  1693                           
  1694                           ;main.c: 163:     LATC = 0x00;
  1695  00170C  0E00               	movlw	0
  1696  00170E  6E8B               	movwf	139,c	;volatile
  1697                           
  1698                           ;main.c: 164:     LATD = 0x00;
  1699  001710  0E00               	movlw	0
  1700  001712  6E8C               	movwf	140,c	;volatile
  1701                           
  1702                           ;main.c: 165:     LATE = 0x00;
  1703  001714  0E00               	movlw	0
  1704  001716  6E8D               	movwf	141,c	;volatile
  1705                           
  1706                           ;main.c: 166:     LATF = 0x00;
  1707  001718  0E00               	movlw	0
  1708  00171A  6E8E               	movwf	142,c	;volatile
  1709                           
  1710                           ;main.c: 169:     TRISC = 0x00;
  1711  00171C  0E00               	movlw	0
  1712  00171E  6E94               	movwf	148,c	;volatile
  1713                           
  1714                           ;main.c: 170:     TRISD = 0x00;
  1715  001720  0E00               	movlw	0
  1716  001722  6E95               	movwf	149,c	;volatile
  1717                           
  1718                           ;main.c: 171:     TRISE = 0x00;
  1719  001724  0E00               	movlw	0
  1720  001726  6E96               	movwf	150,c	;volatile
  1721                           
  1722                           ;main.c: 172:     TRISF = 0x00;
  1723  001728  0E00               	movlw	0
  1724  00172A  6E97               	movwf	151,c	;volatile
  1725                           
  1726                           ;main.c: 174:     for (char i = 0; i < 8; i++)
  1727  00172C  0E00               	movlw	0
  1728  00172E  6E1B               	movwf	InitBoard@i^0,c
  1729  001730                     l1402:
  1730                           
  1731                           ;main.c: 175:     {;main.c: 176:         for (char j = 0; j < 4; j++)
  1732  001730  0E00               	movlw	0
  1733  001732  6E1C               	movwf	InitBoard@j^0,c
  1734  001734                     l1408:
  1735                           
  1736                           ;main.c: 177:         {;main.c: 178:             SetBoard(j, i, 0, &board);
  1737  001734  C01B  F009         	movff	InitBoard@i,SetBoard@y
  1738  001738  0E00               	movlw	0
  1739  00173A  6E0A               	movwf	SetBoard@v^0,c
  1740  00173C  0E28               	movlw	low _board
  1741  00173E  6E0B               	movwf	SetBoard@board^0,c
  1742  001740  0E00               	movlw	high _board
  1743  001742  6E0C               	movwf	(SetBoard@board+1)^0,c
  1744  001744  501C               	movf	InitBoard@j^0,w,c
  1745  001746  EC07  F008         	call	_SetBoard
  1746  00174A                     
  1747                           ;main.c: 179:         }
  1748  00174A  2A1C               	incf	InitBoard@j^0,f,c
  1749  00174C  0E03               	movlw	3
  1750  00174E  641C               	cpfsgt	InitBoard@j^0,c
  1751  001750  EFAC  F00B         	goto	u1001
  1752  001754  EFAE  F00B         	goto	u1000
  1753  001758                     u1001:
  1754  001758  EF9A  F00B         	goto	l1408
  1755  00175C                     u1000:
  1756  00175C                     
  1757                           ;main.c: 180:     }
  1758  00175C  2A1B               	incf	InitBoard@i^0,f,c
  1759  00175E  0E07               	movlw	7
  1760  001760  641B               	cpfsgt	InitBoard@i^0,c
  1761  001762  EFB5  F00B         	goto	u1011
  1762  001766  EFB7  F00B         	goto	u1010
  1763  00176A                     u1011:
  1764  00176A  EF98  F00B         	goto	l1402
  1765  00176E                     u1010:
  1766  00176E                     
  1767                           ;main.c: 183:     curTet = L;
  1768  00176E  0E01               	movlw	low _L
  1769  001770  6EF6               	movwf	tblptrl,c
  1770  001772                     	if	1	;There is more than 1 active tblptr byte
  1771  001772  0E10               	movlw	high _L
  1772  001774  6EF7               	movwf	tblptrh,c
  1773  001776                     	endif
  1774  001776                     	if	1	;There are 3 active tblptr bytes
  1775  001776  0E00               	movlw	low (_L shr (0+16))
  1776  001778  6EF8               	movwf	tblptru,c
  1777  00177A                     	endif
  1778  00177A  0009               	tblrd		*+
  1779  00177C  CFF5 F02C          	movff	tablat,_curTet
  1780  001780  0009               	tblrd		*+
  1781  001782  CFF5 F02D          	movff	tablat,_curTet+1
  1782  001786  0009               	tblrd		*+
  1783  001788  CFF5 F02E          	movff	tablat,_curTet+2
  1784  00178C  000A               	tblrd		*-
  1785  00178E  CFF5 F02F          	movff	tablat,_curTet+3
  1786  001792                     
  1787                           ;main.c: 184:     RotateShape(&curTet.shape);
  1788  001792  0E2F               	movlw	low (_curTet+3)
  1789  001794  6E09               	movwf	RotateShape@shape^0,c
  1790  001796  0E00               	movlw	high (_curTet+3)
  1791  001798  6E0A               	movwf	(RotateShape@shape+1)^0,c
  1792  00179A  EC18  F00D         	call	_RotateShape	;wreg free
  1793  00179E  0012               	return		;funcret
  1794  0017A0                     __end_of_InitBoard:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _SetBoard *****************
  1798 ;; Defined at:
  1799 ;;		line 229 in file "main.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  x               1    wreg     unsigned char 
  1802 ;;  y               1    8[COMRAM] unsigned char 
  1803 ;;  v               1    9[COMRAM] unsigned char 
  1804 ;;  board           2   10[COMRAM] PTR struct .
  1805 ;;		 -> buffer(4), board(4), 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  x               1   17[COMRAM] unsigned char 
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  1    wreg      void 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:       18 bytes
  1822 ;; Hardware stack levels used:    1
  1823 ;; Hardware stack levels required when called:    3
  1824 ;; This function calls:
  1825 ;;		Nothing
  1826 ;; This function is called by:
  1827 ;;		_InitBoard
  1828 ;;		_SetQuartet
  1829 ;; This function uses a non-reentrant model
  1830 ;;
  1831                           
  1832                           	psect	text12
  1833  00100E                     __ptext12:
  1834                           	callstack 0
  1835  00100E                     _SetBoard:
  1836                           	callstack 24
  1837                           
  1838                           ;incstack = 0
  1839                           ;SetBoard@x stored from wreg
  1840  00100E  6E12               	movwf	SetBoard@x^0,c
  1841  001010                     
  1842                           ;main.c: 229: void SetBoard(char x, char y, char v, Board* board);main.c: 230: {;main.c:
      +                           231:     switch (x)
  1843  001010  EF34  F009         	goto	l1292
  1844  001014                     l1264:
  1845                           
  1846                           ;main.c: 234:             board->col0 = v == 1 ? board->col0 | (v << y) : board->col0 & 
      +                          ~(1 << y);
  1847  001014  040A               	decf	SetBoard@v^0,w,c
  1848  001016  B4D8               	btfsc	status,2,c
  1849  001018  EF10  F008         	goto	u691
  1850  00101C  EF12  F008         	goto	u690
  1851  001020                     u691:
  1852  001020  EF2D  F008         	goto	l1268
  1853  001024                     u690:
  1854  001024  C00B  FFD9         	movff	SetBoard@board,fsr2l
  1855  001028  C00C  FFDA         	movff	SetBoard@board+1,fsr2h
  1856  00102C  50DF               	movf	indf2,w,c
  1857  00102E  6E0D               	movwf	??_SetBoard^0,c
  1858  001030  C009  F00E         	movff	SetBoard@y,??_SetBoard+1
  1859  001034  0E01               	movlw	1
  1860  001036  6E0F               	movwf	(??_SetBoard+2)^0,c
  1861  001038  2A0E               	incf	(??_SetBoard+1)^0,f,c
  1862  00103A  EF21  F008         	goto	u704
  1863  00103E                     u705:
  1864  00103E  90D8               	bcf	status,0,c
  1865  001040  360F               	rlcf	(??_SetBoard+2)^0,f,c
  1866  001042                     u704:
  1867  001042  2E0E               	decfsz	(??_SetBoard+1)^0,f,c
  1868  001044  EF1F  F008         	goto	u705
  1869  001048  500F               	movf	(??_SetBoard+2)^0,w,c
  1870  00104A  0AFF               	xorlw	255
  1871  00104C  140D               	andwf	??_SetBoard^0,w,c
  1872  00104E  6E10               	movwf	(??_SetBoard+3)^0,c
  1873  001050  5010               	movf	(??_SetBoard+3)^0,w,c
  1874  001052  6E13               	movwf	_SetBoard$385^0,c
  1875  001054  6A14               	clrf	(_SetBoard$385+1)^0,c
  1876  001056  EF48  F008         	goto	l1270
  1877  00105A                     l1268:
  1878  00105A  C009  F00D         	movff	SetBoard@y,??_SetBoard
  1879  00105E  500A               	movf	SetBoard@v^0,w,c
  1880  001060  6E0E               	movwf	(??_SetBoard+1)^0,c
  1881  001062  6A0F               	clrf	(??_SetBoard+2)^0,c
  1882  001064  2A0D               	incf	??_SetBoard^0,f,c
  1883  001066  EF38  F008         	goto	u714
  1884  00106A                     u715:
  1885  00106A  90D8               	bcf	status,0,c
  1886  00106C  360E               	rlcf	(??_SetBoard+1)^0,f,c
  1887  00106E  360F               	rlcf	(??_SetBoard+2)^0,f,c
  1888  001070                     u714:
  1889  001070  2E0D               	decfsz	??_SetBoard^0,f,c
  1890  001072  EF35  F008         	goto	u715
  1891  001076  C00B  FFD9         	movff	SetBoard@board,fsr2l
  1892  00107A  C00C  FFDA         	movff	SetBoard@board+1,fsr2h
  1893  00107E  50DF               	movf	indf2,w,c
  1894  001080  6E10               	movwf	(??_SetBoard+3)^0,c
  1895  001082  6A11               	clrf	(??_SetBoard+4)^0,c
  1896  001084  500E               	movf	(??_SetBoard+1)^0,w,c
  1897  001086  1010               	iorwf	(??_SetBoard+3)^0,w,c
  1898  001088  6E13               	movwf	_SetBoard$385^0,c
  1899  00108A  500F               	movf	(??_SetBoard+2)^0,w,c
  1900  00108C  1011               	iorwf	(??_SetBoard+4)^0,w,c
  1901  00108E  6E14               	movwf	(_SetBoard$385+1)^0,c
  1902  001090                     l1270:
  1903  001090  C00B  FFD9         	movff	SetBoard@board,fsr2l
  1904  001094  C00C  FFDA         	movff	SetBoard@board+1,fsr2h
  1905  001098  C013  FFDF         	movff	_SetBoard$385,indf2
  1906                           
  1907                           ;main.c: 235:             break;
  1908  00109C  EF51  F009         	goto	l124
  1909  0010A0                     l1272:
  1910                           
  1911                           ;main.c: 237:             board->col1 = v == 1 ? board->col1 | (v << y) : board->col1 & 
      +                          ~(1 << y);
  1912  0010A0  040A               	decf	SetBoard@v^0,w,c
  1913  0010A2  B4D8               	btfsc	status,2,c
  1914  0010A4  EF56  F008         	goto	u721
  1915  0010A8  EF58  F008         	goto	u720
  1916  0010AC                     u721:
  1917  0010AC  EF75  F008         	goto	l1276
  1918  0010B0                     u720:
  1919  0010B0  EE20 F001          	lfsr	2,1
  1920  0010B4  500B               	movf	SetBoard@board^0,w,c
  1921  0010B6  26D9               	addwf	fsr2l,f,c
  1922  0010B8  500C               	movf	(SetBoard@board+1)^0,w,c
  1923  0010BA  22DA               	addwfc	fsr2h,f,c
  1924  0010BC  50DF               	movf	indf2,w,c
  1925  0010BE  6E0D               	movwf	??_SetBoard^0,c
  1926  0010C0  C009  F00E         	movff	SetBoard@y,??_SetBoard+1
  1927  0010C4  0E01               	movlw	1
  1928  0010C6  6E0F               	movwf	(??_SetBoard+2)^0,c
  1929  0010C8  2A0E               	incf	(??_SetBoard+1)^0,f,c
  1930  0010CA  EF69  F008         	goto	u734
  1931  0010CE                     u735:
  1932  0010CE  90D8               	bcf	status,0,c
  1933  0010D0  360F               	rlcf	(??_SetBoard+2)^0,f,c
  1934  0010D2                     u734:
  1935  0010D2  2E0E               	decfsz	(??_SetBoard+1)^0,f,c
  1936  0010D4  EF67  F008         	goto	u735
  1937  0010D8  500F               	movf	(??_SetBoard+2)^0,w,c
  1938  0010DA  0AFF               	xorlw	255
  1939  0010DC  140D               	andwf	??_SetBoard^0,w,c
  1940  0010DE  6E10               	movwf	(??_SetBoard+3)^0,c
  1941  0010E0  5010               	movf	(??_SetBoard+3)^0,w,c
  1942  0010E2  6E15               	movwf	_SetBoard$386^0,c
  1943  0010E4  6A16               	clrf	(_SetBoard$386+1)^0,c
  1944  0010E6  EF92  F008         	goto	l113
  1945  0010EA                     l1276:
  1946  0010EA  C009  F00D         	movff	SetBoard@y,??_SetBoard
  1947  0010EE  500A               	movf	SetBoard@v^0,w,c
  1948  0010F0  6E0E               	movwf	(??_SetBoard+1)^0,c
  1949  0010F2  6A0F               	clrf	(??_SetBoard+2)^0,c
  1950  0010F4  2A0D               	incf	??_SetBoard^0,f,c
  1951  0010F6  EF80  F008         	goto	u744
  1952  0010FA                     u745:
  1953  0010FA  90D8               	bcf	status,0,c
  1954  0010FC  360E               	rlcf	(??_SetBoard+1)^0,f,c
  1955  0010FE  360F               	rlcf	(??_SetBoard+2)^0,f,c
  1956  001100                     u744:
  1957  001100  2E0D               	decfsz	??_SetBoard^0,f,c
  1958  001102  EF7D  F008         	goto	u745
  1959  001106  EE20 F001          	lfsr	2,1
  1960  00110A  500B               	movf	SetBoard@board^0,w,c
  1961  00110C  26D9               	addwf	fsr2l,f,c
  1962  00110E  500C               	movf	(SetBoard@board+1)^0,w,c
  1963  001110  22DA               	addwfc	fsr2h,f,c
  1964  001112  50DF               	movf	indf2,w,c
  1965  001114  6E10               	movwf	(??_SetBoard+3)^0,c
  1966  001116  6A11               	clrf	(??_SetBoard+4)^0,c
  1967  001118  500E               	movf	(??_SetBoard+1)^0,w,c
  1968  00111A  1010               	iorwf	(??_SetBoard+3)^0,w,c
  1969  00111C  6E15               	movwf	_SetBoard$386^0,c
  1970  00111E  500F               	movf	(??_SetBoard+2)^0,w,c
  1971  001120  1011               	iorwf	(??_SetBoard+4)^0,w,c
  1972  001122  6E16               	movwf	(_SetBoard$386+1)^0,c
  1973  001124                     l113:
  1974  001124  EE20 F001          	lfsr	2,1
  1975  001128  500B               	movf	SetBoard@board^0,w,c
  1976  00112A  26D9               	addwf	fsr2l,f,c
  1977  00112C  500C               	movf	(SetBoard@board+1)^0,w,c
  1978  00112E  22DA               	addwfc	fsr2h,f,c
  1979  001130  C015  FFDF         	movff	_SetBoard$386,indf2
  1980                           
  1981                           ;main.c: 238:             break;
  1982  001134  EF51  F009         	goto	l124
  1983  001138                     l1278:
  1984                           
  1985                           ;main.c: 240:             board->col2 = v == 1 ? board->col2 | (v << y) : board->col2 & 
      +                          ~(1 << y);
  1986  001138  040A               	decf	SetBoard@v^0,w,c
  1987  00113A  B4D8               	btfsc	status,2,c
  1988  00113C  EFA2  F008         	goto	u751
  1989  001140  EFA4  F008         	goto	u750
  1990  001144                     u751:
  1991  001144  EFC1  F008         	goto	l1282
  1992  001148                     u750:
  1993  001148  EE20 F002          	lfsr	2,2
  1994  00114C  500B               	movf	SetBoard@board^0,w,c
  1995  00114E  26D9               	addwf	fsr2l,f,c
  1996  001150  500C               	movf	(SetBoard@board+1)^0,w,c
  1997  001152  22DA               	addwfc	fsr2h,f,c
  1998  001154  50DF               	movf	indf2,w,c
  1999  001156  6E0D               	movwf	??_SetBoard^0,c
  2000  001158  C009  F00E         	movff	SetBoard@y,??_SetBoard+1
  2001  00115C  0E01               	movlw	1
  2002  00115E  6E0F               	movwf	(??_SetBoard+2)^0,c
  2003  001160  2A0E               	incf	(??_SetBoard+1)^0,f,c
  2004  001162  EFB5  F008         	goto	u764
  2005  001166                     u765:
  2006  001166  90D8               	bcf	status,0,c
  2007  001168  360F               	rlcf	(??_SetBoard+2)^0,f,c
  2008  00116A                     u764:
  2009  00116A  2E0E               	decfsz	(??_SetBoard+1)^0,f,c
  2010  00116C  EFB3  F008         	goto	u765
  2011  001170  500F               	movf	(??_SetBoard+2)^0,w,c
  2012  001172  0AFF               	xorlw	255
  2013  001174  140D               	andwf	??_SetBoard^0,w,c
  2014  001176  6E10               	movwf	(??_SetBoard+3)^0,c
  2015  001178  5010               	movf	(??_SetBoard+3)^0,w,c
  2016  00117A  6E17               	movwf	_SetBoard$387^0,c
  2017  00117C  6A18               	clrf	(_SetBoard$387+1)^0,c
  2018  00117E  EFDE  F008         	goto	l118
  2019  001182                     l1282:
  2020  001182  C009  F00D         	movff	SetBoard@y,??_SetBoard
  2021  001186  500A               	movf	SetBoard@v^0,w,c
  2022  001188  6E0E               	movwf	(??_SetBoard+1)^0,c
  2023  00118A  6A0F               	clrf	(??_SetBoard+2)^0,c
  2024  00118C  2A0D               	incf	??_SetBoard^0,f,c
  2025  00118E  EFCC  F008         	goto	u774
  2026  001192                     u775:
  2027  001192  90D8               	bcf	status,0,c
  2028  001194  360E               	rlcf	(??_SetBoard+1)^0,f,c
  2029  001196  360F               	rlcf	(??_SetBoard+2)^0,f,c
  2030  001198                     u774:
  2031  001198  2E0D               	decfsz	??_SetBoard^0,f,c
  2032  00119A  EFC9  F008         	goto	u775
  2033  00119E  EE20 F002          	lfsr	2,2
  2034  0011A2  500B               	movf	SetBoard@board^0,w,c
  2035  0011A4  26D9               	addwf	fsr2l,f,c
  2036  0011A6  500C               	movf	(SetBoard@board+1)^0,w,c
  2037  0011A8  22DA               	addwfc	fsr2h,f,c
  2038  0011AA  50DF               	movf	indf2,w,c
  2039  0011AC  6E10               	movwf	(??_SetBoard+3)^0,c
  2040  0011AE  6A11               	clrf	(??_SetBoard+4)^0,c
  2041  0011B0  500E               	movf	(??_SetBoard+1)^0,w,c
  2042  0011B2  1010               	iorwf	(??_SetBoard+3)^0,w,c
  2043  0011B4  6E17               	movwf	_SetBoard$387^0,c
  2044  0011B6  500F               	movf	(??_SetBoard+2)^0,w,c
  2045  0011B8  1011               	iorwf	(??_SetBoard+4)^0,w,c
  2046  0011BA  6E18               	movwf	(_SetBoard$387+1)^0,c
  2047  0011BC                     l118:
  2048  0011BC  EE20 F002          	lfsr	2,2
  2049  0011C0  500B               	movf	SetBoard@board^0,w,c
  2050  0011C2  26D9               	addwf	fsr2l,f,c
  2051  0011C4  500C               	movf	(SetBoard@board+1)^0,w,c
  2052  0011C6  22DA               	addwfc	fsr2h,f,c
  2053  0011C8  C017  FFDF         	movff	_SetBoard$387,indf2
  2054                           
  2055                           ;main.c: 241:             break;
  2056  0011CC  EF51  F009         	goto	l124
  2057  0011D0                     l1284:
  2058                           
  2059                           ;main.c: 243:             board->col3 = v == 1 ? board->col3 | (v << y) : board->col3 & 
      +                          ~(1 << y);
  2060  0011D0  040A               	decf	SetBoard@v^0,w,c
  2061  0011D2  B4D8               	btfsc	status,2,c
  2062  0011D4  EFEE  F008         	goto	u781
  2063  0011D8  EFF0  F008         	goto	u780
  2064  0011DC                     u781:
  2065  0011DC  EF0D  F009         	goto	l1288
  2066  0011E0                     u780:
  2067  0011E0  EE20 F003          	lfsr	2,3
  2068  0011E4  500B               	movf	SetBoard@board^0,w,c
  2069  0011E6  26D9               	addwf	fsr2l,f,c
  2070  0011E8  500C               	movf	(SetBoard@board+1)^0,w,c
  2071  0011EA  22DA               	addwfc	fsr2h,f,c
  2072  0011EC  50DF               	movf	indf2,w,c
  2073  0011EE  6E0D               	movwf	??_SetBoard^0,c
  2074  0011F0  C009  F00E         	movff	SetBoard@y,??_SetBoard+1
  2075  0011F4  0E01               	movlw	1
  2076  0011F6  6E0F               	movwf	(??_SetBoard+2)^0,c
  2077  0011F8  2A0E               	incf	(??_SetBoard+1)^0,f,c
  2078  0011FA  EF01  F009         	goto	u794
  2079  0011FE                     u795:
  2080  0011FE  90D8               	bcf	status,0,c
  2081  001200  360F               	rlcf	(??_SetBoard+2)^0,f,c
  2082  001202                     u794:
  2083  001202  2E0E               	decfsz	(??_SetBoard+1)^0,f,c
  2084  001204  EFFF  F008         	goto	u795
  2085  001208  500F               	movf	(??_SetBoard+2)^0,w,c
  2086  00120A  0AFF               	xorlw	255
  2087  00120C  140D               	andwf	??_SetBoard^0,w,c
  2088  00120E  6E10               	movwf	(??_SetBoard+3)^0,c
  2089  001210  5010               	movf	(??_SetBoard+3)^0,w,c
  2090  001212  6E19               	movwf	_SetBoard$388^0,c
  2091  001214  6A1A               	clrf	(_SetBoard$388+1)^0,c
  2092  001216  EF2A  F009         	goto	l123
  2093  00121A                     l1288:
  2094  00121A  C009  F00D         	movff	SetBoard@y,??_SetBoard
  2095  00121E  500A               	movf	SetBoard@v^0,w,c
  2096  001220  6E0E               	movwf	(??_SetBoard+1)^0,c
  2097  001222  6A0F               	clrf	(??_SetBoard+2)^0,c
  2098  001224  2A0D               	incf	??_SetBoard^0,f,c
  2099  001226  EF18  F009         	goto	u804
  2100  00122A                     u805:
  2101  00122A  90D8               	bcf	status,0,c
  2102  00122C  360E               	rlcf	(??_SetBoard+1)^0,f,c
  2103  00122E  360F               	rlcf	(??_SetBoard+2)^0,f,c
  2104  001230                     u804:
  2105  001230  2E0D               	decfsz	??_SetBoard^0,f,c
  2106  001232  EF15  F009         	goto	u805
  2107  001236  EE20 F003          	lfsr	2,3
  2108  00123A  500B               	movf	SetBoard@board^0,w,c
  2109  00123C  26D9               	addwf	fsr2l,f,c
  2110  00123E  500C               	movf	(SetBoard@board+1)^0,w,c
  2111  001240  22DA               	addwfc	fsr2h,f,c
  2112  001242  50DF               	movf	indf2,w,c
  2113  001244  6E10               	movwf	(??_SetBoard+3)^0,c
  2114  001246  6A11               	clrf	(??_SetBoard+4)^0,c
  2115  001248  500E               	movf	(??_SetBoard+1)^0,w,c
  2116  00124A  1010               	iorwf	(??_SetBoard+3)^0,w,c
  2117  00124C  6E19               	movwf	_SetBoard$388^0,c
  2118  00124E  500F               	movf	(??_SetBoard+2)^0,w,c
  2119  001250  1011               	iorwf	(??_SetBoard+4)^0,w,c
  2120  001252  6E1A               	movwf	(_SetBoard$388+1)^0,c
  2121  001254                     l123:
  2122  001254  EE20 F003          	lfsr	2,3
  2123  001258  500B               	movf	SetBoard@board^0,w,c
  2124  00125A  26D9               	addwf	fsr2l,f,c
  2125  00125C  500C               	movf	(SetBoard@board+1)^0,w,c
  2126  00125E  22DA               	addwfc	fsr2h,f,c
  2127  001260  C019  FFDF         	movff	_SetBoard$388,indf2
  2128                           
  2129                           ;main.c: 244:             break;
  2130  001264  EF51  F009         	goto	l124
  2131  001268                     l1292:
  2132  001268  5012               	movf	SetBoard@x^0,w,c
  2133  00126A  6E0D               	movwf	??_SetBoard^0,c
  2134  00126C  6A0E               	clrf	(??_SetBoard+1)^0,c
  2135                           
  2136                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2137                           ; Switch size 1, requested type "simple"
  2138                           ; Number of cases is 1, Range of values is 0 to 0
  2139                           ; switch strategies available:
  2140                           ; Name         Instructions Cycles
  2141                           ; simple_byte            4     3 (average)
  2142                           ;	Chosen strategy is simple_byte
  2143  00126E  500E               	movf	(??_SetBoard+1)^0,w,c
  2144  001270  0A00               	xorlw	0	; case 0
  2145  001272  B4D8               	btfsc	status,2,c
  2146  001274  EF3E  F009         	goto	l1516
  2147  001278  EF51  F009         	goto	l124
  2148  00127C                     l1516:
  2149                           
  2150                           ; Switch size 1, requested type "simple"
  2151                           ; Number of cases is 4, Range of values is 0 to 3
  2152                           ; switch strategies available:
  2153                           ; Name         Instructions Cycles
  2154                           ; simple_byte           13     7 (average)
  2155                           ;	Chosen strategy is simple_byte
  2156  00127C  500D               	movf	??_SetBoard^0,w,c
  2157  00127E  0A00               	xorlw	0	; case 0
  2158  001280  B4D8               	btfsc	status,2,c
  2159  001282  EF0A  F008         	goto	l1264
  2160  001286  0A01               	xorlw	1	; case 1
  2161  001288  B4D8               	btfsc	status,2,c
  2162  00128A  EF50  F008         	goto	l1272
  2163  00128E  0A03               	xorlw	3	; case 2
  2164  001290  B4D8               	btfsc	status,2,c
  2165  001292  EF9C  F008         	goto	l1278
  2166  001296  0A01               	xorlw	1	; case 3
  2167  001298  B4D8               	btfsc	status,2,c
  2168  00129A  EFE8  F008         	goto	l1284
  2169  00129E  EF51  F009         	goto	l124
  2170  0012A2                     l124:
  2171  0012A2  0012               	return		;funcret
  2172  0012A4                     __end_of_SetBoard:
  2173                           	callstack 0
  2174                           
  2175 ;; *************** function _RotateShape *****************
  2176 ;; Defined at:
  2177 ;;		line 423 in file "main.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  shape           2    8[COMRAM] PTR struct .
  2180 ;;		 -> curTet(4), 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;		None
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;Total ram usage:        2 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    3
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_InitBoard
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text13
  2207  001A30                     __ptext13:
  2208                           	callstack 0
  2209  001A30                     _RotateShape:
  2210                           	callstack 26
  2211  001A30                     
  2212                           ;main.c: 423: void RotateShape(Shape *shape);main.c: 424: {;main.c: 425:     shape->byte
      +                           >>= 1;
  2213  001A30  C009  FFD9         	movff	RotateShape@shape,fsr2l
  2214  001A34  C00A  FFDA         	movff	RotateShape@shape+1,fsr2h
  2215  001A38  90D8               	bcf	status,0,c
  2216  001A3A  32DF               	rrcf	indf2,f,c
  2217  001A3C                     
  2218                           ;main.c: 426:     shape->b0 = shape->r3;
  2219  001A3C  C009  FFD9         	movff	RotateShape@shape,fsr2l
  2220  001A40  C00A  FFDA         	movff	RotateShape@shape+1,fsr2h
  2221  001A44  C009  FFE1         	movff	RotateShape@shape,fsr1l
  2222  001A48  C00A  FFE2         	movff	RotateShape@shape+1,fsr1h
  2223  001A4C  B6DF               	btfsc	indf2,3,c
  2224  001A4E  D002               	bra	u985
  2225  001A50  9EE7               	bcf	indf1,7,c
  2226  001A52  D001               	bra	u986
  2227  001A54                     u985:
  2228  001A54  8EE7               	bsf	indf1,7,c
  2229  001A56                     u986:
  2230  001A56                     
  2231                           ;main.c: 427:     shape->r3 = 0;
  2232  001A56  C009  FFD9         	movff	RotateShape@shape,fsr2l
  2233  001A5A  C00A  FFDA         	movff	RotateShape@shape+1,fsr2h
  2234  001A5E  96DF               	bcf	indf2,3,c
  2235  001A60  0012               	return		;funcret
  2236  001A62                     __end_of_RotateShape:
  2237                           	callstack 0
  2238                           
  2239 ;; *************** function _HandleInterrupt *****************
  2240 ;; Defined at:
  2241 ;;		line 435 in file "main.c"
  2242 ;; Parameters:    Size  Location     Type
  2243 ;;		None
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;		None
  2246 ;; Return value:  Size  Location     Type
  2247 ;;                  1    wreg      void 
  2248 ;; Registers used:
  2249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2250 ;; Tracked objects:
  2251 ;;		On entry : 0/0
  2252 ;;		On exit  : 0/0
  2253 ;;		Unchanged: 0/0
  2254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;Total ram usage:        4 bytes
  2260 ;; Hardware stack levels used:    1
  2261 ;; Hardware stack levels required when called:    2
  2262 ;; This function calls:
  2263 ;;		_HandlePortB
  2264 ;;		_HandleTimer
  2265 ;; This function is called by:
  2266 ;;		Interrupt level 2
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	intcode
  2271  000008                     __pintcode:
  2272                           	callstack 0
  2273  000008                     _HandleInterrupt:
  2274                           	callstack 24
  2275                           
  2276                           ;incstack = 0
  2277  000008  8232               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2278  00000A  EDA5  F00C         	call	int_func,f	;refresh shadow registers
  2279                           
  2280                           	psect	intcode_body
  2281  00194A                     __pintcode_body:
  2282                           	callstack 24
  2283  00194A                     int_func:
  2284                           	callstack 24
  2285  00194A  0006               	pop		; remove dummy address from shadow register refresh
  2286  00194C  CFE1 F005          	movff	fsr1l,??_HandleInterrupt
  2287  001950  CFE2 F006          	movff	fsr1h,??_HandleInterrupt+1
  2288  001954  CFD9 F007          	movff	fsr2l,??_HandleInterrupt+2
  2289  001958  CFDA F008          	movff	fsr2h,??_HandleInterrupt+3
  2290  00195C                     
  2291                           ;main.c: 437:     if (INTCONbits.TMR0IF)
  2292  00195C  A4F2               	btfss	242,2,c	;volatile
  2293  00195E  EFB3  F00C         	goto	i2u109_41
  2294  001962  EFB5  F00C         	goto	i2u109_40
  2295  001966                     i2u109_41:
  2296  001966  EFBE  F00C         	goto	i2l206
  2297  00196A                     i2u109_40:
  2298  00196A                     
  2299                           ;main.c: 438:     {;main.c: 439:         INTCONbits.TMR0IF = 0;
  2300  00196A  94F2               	bcf	242,2,c	;volatile
  2301  00196C                     
  2302                           ;main.c: 440:         HandleTimer();
  2303  00196C  EC6B  F00C         	call	_HandleTimer	;wreg free
  2304  001970                     
  2305                           ;main.c: 443:         TMR0H = 0x67;
  2306  001970  0E67               	movlw	103
  2307  001972  6ED7               	movwf	215,c	;volatile
  2308  001974                     
  2309                           ;main.c: 444:         TMR0L = 0x69;
  2310  001974  0E69               	movlw	105
  2311  001976  6ED6               	movwf	214,c	;volatile
  2312                           
  2313                           ;main.c: 445:     }
  2314  001978  EFC8  F00C         	goto	i2l209
  2315  00197C                     i2l206:
  2316  00197C  A0F2               	btfss	242,0,c	;volatile
  2317  00197E  EFC3  F00C         	goto	i2u110_41
  2318  001982  EFC5  F00C         	goto	i2u110_40
  2319  001986                     i2u110_41:
  2320  001986  EFC8  F00C         	goto	i2l209
  2321  00198A                     i2u110_40:
  2322  00198A                     
  2323                           ;main.c: 447:     {;main.c: 448:         INTCONbits.RBIF = 0;
  2324  00198A  90F2               	bcf	242,0,c	;volatile
  2325  00198C                     
  2326                           ;main.c: 449:         HandlePortB();
  2327  00198C  ECD2  F00C         	call	_HandlePortB	;wreg free
  2328  001990                     i2l209:
  2329  001990  C008  FFDA         	movff	??_HandleInterrupt+3,fsr2h
  2330  001994  C007  FFD9         	movff	??_HandleInterrupt+2,fsr2l
  2331  001998  C006  FFE2         	movff	??_HandleInterrupt+1,fsr1h
  2332  00199C  C005  FFE1         	movff	??_HandleInterrupt,fsr1l
  2333  0019A0  9232               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2334  0019A2  0011               	retfie		f
  2335  0019A4                     __end_of_HandleInterrupt:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _HandleTimer *****************
  2339 ;; Defined at:
  2340 ;;		line 453 in file "main.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2, status,0
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2356 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;Total ram usage:        2 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; This function calls:
  2361 ;;		Nothing
  2362 ;; This function is called by:
  2363 ;;		_HandleInterrupt
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           
  2367                           	psect	text15
  2368  0018D6                     __ptext15:
  2369                           	callstack 0
  2370  0018D6                     _HandleTimer:
  2371                           	callstack 25
  2372  0018D6                     
  2373                           ;main.c: 455:     static char counter = 0;;main.c: 457:     if (++counter == 8)
  2374  0018D6  2A22               	incf	HandleTimer@counter^0,f,c
  2375  0018D8  0E08               	movlw	8
  2376  0018DA  1822               	xorwf	HandleTimer@counter^0,w,c
  2377  0018DC  A4D8               	btfss	status,2,c
  2378  0018DE  EF73  F00C         	goto	i2u56_41
  2379  0018E2  EF75  F00C         	goto	i2u56_40
  2380  0018E6                     i2u56_41:
  2381  0018E6  EFA4  F00C         	goto	i2l216
  2382  0018EA                     i2u56_40:
  2383  0018EA                     
  2384                           ;main.c: 458:     {;main.c: 459:         if(!(((curTet.x) < 0) || ((curTet.x) > 3) || ((
      +                          curTet.y + 1) > 7) || ((curTet.y + 1) < 0)))
  2385  0018EA  0E04               	movlw	4
  2386  0018EC  602D               	cpfslt	(_curTet+1)^0,c
  2387  0018EE  EF7B  F00C         	goto	i2u57_41
  2388  0018F2  EF7D  F00C         	goto	i2u57_40
  2389  0018F6                     i2u57_41:
  2390  0018F6  EFA2  F00C         	goto	i2l1174
  2391  0018FA                     i2u57_40:
  2392  0018FA  502E               	movf	(_curTet+2)^0,w,c
  2393  0018FC  6E01               	movwf	??_HandleTimer^0,c
  2394  0018FE  6A02               	clrf	(??_HandleTimer+1)^0,c
  2395  001900  0E01               	movlw	1
  2396  001902  2601               	addwf	??_HandleTimer^0,f,c
  2397  001904  0E00               	movlw	0
  2398  001906  2202               	addwfc	(??_HandleTimer+1)^0,f,c
  2399  001908  BE02               	btfsc	(??_HandleTimer+1)^0,7,c
  2400  00190A  EF92  F00C         	goto	i2u58_40
  2401  00190E  5002               	movf	(??_HandleTimer+1)^0,w,c
  2402  001910  E107               	bnz	i2u58_41
  2403  001912  0E08               	movlw	8
  2404  001914  5C01               	subwf	??_HandleTimer^0,w,c
  2405  001916  B0D8               	btfsc	status,0,c
  2406  001918  EF90  F00C         	goto	i2u58_41
  2407  00191C  EF92  F00C         	goto	i2u58_40
  2408  001920                     i2u58_41:
  2409  001920  EFA2  F00C         	goto	i2l1174
  2410  001924                     i2u58_40:
  2411  001924  502E               	movf	(_curTet+2)^0,w,c
  2412  001926  6E01               	movwf	??_HandleTimer^0,c
  2413  001928  6A02               	clrf	(??_HandleTimer+1)^0,c
  2414  00192A  0E01               	movlw	1
  2415  00192C  2401               	addwf	??_HandleTimer^0,w,c
  2416  00192E  0E00               	movlw	0
  2417  001930  2002               	addwfc	(??_HandleTimer+1)^0,w,c
  2418  001932  0B80               	andlw	128
  2419  001934  A4D8               	btfss	status,2,c
  2420  001936  EF9F  F00C         	goto	i2u59_41
  2421  00193A  EFA1  F00C         	goto	i2u59_40
  2422  00193E                     i2u59_41:
  2423  00193E  EFA2  F00C         	goto	i2l1174
  2424  001942                     i2u59_40:
  2425  001942                     
  2426                           ;main.c: 460:         {;main.c: 461:             curTet.y++;
  2427  001942  2A2E               	incf	(_curTet+2)^0,f,c
  2428  001944                     i2l1174:
  2429                           
  2430                           ;main.c: 463:         counter = 0;
  2431  001944  0E00               	movlw	0
  2432  001946  6E22               	movwf	HandleTimer@counter^0,c
  2433  001948                     i2l216:
  2434  001948  0012               	return		;funcret
  2435  00194A                     __end_of_HandleTimer:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _HandlePortB *****************
  2439 ;; Defined at:
  2440 ;;		line 467 in file "main.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;		None
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  currentPortB    1    3[COMRAM] unsigned char 
  2445 ;;  changedBits     1    2[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        2 bytes
  2460 ;; Hardware stack levels used:    1
  2461 ;; Hardware stack levels required when called:    1
  2462 ;; This function calls:
  2463 ;;		i2_RotateShape
  2464 ;; This function is called by:
  2465 ;;		_HandleInterrupt
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text16
  2470  0019A4                     __ptext16:
  2471                           	callstack 0
  2472  0019A4                     _HandlePortB:
  2473                           	callstack 24
  2474  0019A4                     
  2475                           ;main.c: 469:     char currentPortB = PORTB;
  2476  0019A4  CF81 F004          	movff	3969,HandlePortB@currentPortB	;volatile
  2477  0019A8                     
  2478                           ;main.c: 470:     char changedBits = currentPortB ^ lastPortB;
  2479  0019A8  5004               	movf	HandlePortB@currentPortB^0,w,c
  2480  0019AA  1830               	xorwf	_lastPortB^0,w,c
  2481  0019AC  6E03               	movwf	HandlePortB@changedBits^0,c
  2482  0019AE                     
  2483                           ;main.c: 473:     if (changedBits & (1 << 5))
  2484  0019AE  AA03               	btfss	HandlePortB@changedBits^0,5,c
  2485  0019B0  EFDC  F00C         	goto	i2u102_41
  2486  0019B4  EFDE  F00C         	goto	i2u102_40
  2487  0019B8                     i2u102_41:
  2488  0019B8  EFF6  F00C         	goto	i2l1440
  2489  0019BC                     i2u102_40:
  2490  0019BC                     
  2491                           ;main.c: 474:     {;main.c: 475:         if (currentPortB & (1 << 5))
  2492  0019BC  AA04               	btfss	HandlePortB@currentPortB^0,5,c
  2493  0019BE  EFE3  F00C         	goto	i2u103_41
  2494  0019C2  EFE5  F00C         	goto	i2u103_40
  2495  0019C6                     i2u103_41:
  2496  0019C6  EFF6  F00C         	goto	i2l1440
  2497  0019CA                     i2u103_40:
  2498  0019CA                     
  2499                           ;main.c: 476:         {;main.c: 478:             if (curTet.type == 2)
  2500  0019CA  0E02               	movlw	2
  2501  0019CC  182C               	xorwf	_curTet^0,w,c
  2502  0019CE  A4D8               	btfss	status,2,c
  2503  0019D0  EFEC  F00C         	goto	i2u104_41
  2504  0019D4  EFEE  F00C         	goto	i2u104_40
  2505  0019D8                     i2u104_41:
  2506  0019D8  EFF6  F00C         	goto	i2l1440
  2507  0019DC                     i2u104_40:
  2508  0019DC                     
  2509                           ;main.c: 479:             {;main.c: 480:                 RotateShape(&curTet.shape);
  2510  0019DC  0E2F               	movlw	low (_curTet+3)
  2511  0019DE  6E01               	movwf	i2RotateShape@shape^0,c
  2512  0019E0  0E00               	movlw	high (_curTet+3)
  2513  0019E2  6E02               	movwf	(i2RotateShape@shape+1)^0,c
  2514  0019E4  EC31  F00D         	call	i2_RotateShape	;wreg free
  2515  0019E8  EFF6  F00C         	goto	i2l222
  2516  0019EC                     i2l1440:
  2517  0019EC                     i2l222:
  2518                           
  2519                           ;main.c: 493:     lastPortB = currentPortB;
  2520  0019EC  C004  F030         	movff	HandlePortB@currentPortB,_lastPortB
  2521  0019F0  0012               	return		;funcret
  2522  0019F2                     __end_of_HandlePortB:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function i2_RotateShape *****************
  2526 ;; Defined at:
  2527 ;;		line 423 in file "main.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  shape           2    0[COMRAM] PTR struct .
  2530 ;;		 -> curTet(4), 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;		None
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2542 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2546 ;;Total ram usage:        2 bytes
  2547 ;; Hardware stack levels used:    1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_HandlePortB
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text17
  2556  001A62                     __ptext17:
  2557                           	callstack 0
  2558  001A62                     i2_RotateShape:
  2559                           	callstack 24
  2560  001A62                     
  2561                           ;main.c: 423: void RotateShape(Shape *shape);main.c: 424: {;main.c: 425:     shape->byte
      +                           >>= 1;
  2562  001A62  C001  FFD9         	movff	i2RotateShape@shape,fsr2l
  2563  001A66  C002  FFDA         	movff	i2RotateShape@shape+1,fsr2h
  2564  001A6A  90D8               	bcf	status,0,c
  2565  001A6C  32DF               	rrcf	indf2,f,c
  2566  001A6E                     
  2567                           ;main.c: 426:     shape->b0 = shape->r3;
  2568  001A6E  C001  FFD9         	movff	i2RotateShape@shape,fsr2l
  2569  001A72  C002  FFDA         	movff	i2RotateShape@shape+1,fsr2h
  2570  001A76  C001  FFE1         	movff	i2RotateShape@shape,fsr1l
  2571  001A7A  C002  FFE2         	movff	i2RotateShape@shape+1,fsr1h
  2572  001A7E  B6DF               	btfsc	indf2,3,c
  2573  001A80  D002               	bra	i2u99_45
  2574  001A82  9EE7               	bcf	indf1,7,c
  2575  001A84  D001               	bra	i2u99_46
  2576  001A86                     i2u99_45:
  2577  001A86  8EE7               	bsf	indf1,7,c
  2578  001A88                     i2u99_46:
  2579  001A88                     
  2580                           ;main.c: 427:     shape->r3 = 0;
  2581  001A88  C001  FFD9         	movff	i2RotateShape@shape,fsr2l
  2582  001A8C  C002  FFDA         	movff	i2RotateShape@shape+1,fsr2h
  2583  001A90  96DF               	bcf	indf2,3,c
  2584  001A92  0012               	return		;funcret
  2585  001A94                     __end_ofi2_RotateShape:
  2586                           	callstack 0
  2587                           
  2588                           	psect	rparam
  2589  0000                     
  2590                           	psect	temp
  2591  000032                     btemp:
  2592                           	callstack 0
  2593  000032                     	ds	1
  2594  0000                     int$flags	set	btemp
  2595  0000                     wtemp8	set	btemp+1
  2596  0000                     ttemp5	set	btemp+1
  2597  0000                     ttemp6	set	btemp+4
  2598  0000                     ttemp7	set	btemp+8
  2599                           
  2600                           	psect	config
  2601                           
  2602                           ; Padding undefined space
  2603  300000                     	org	3145728
  2604  300000  FF                 	db	255
  2605                           
  2606                           ;Config register CONFIG1H @ 0x300001
  2607                           ;	Oscillator Selection bits
  2608                           ;	OSC = HSPLL, HS oscillator, PLL enabled (Clock Frequency = 4 x FOSC1)
  2609                           ;	Fail-Safe Clock Monitor Enable bit
  2610                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2611                           ;	Internal/External Oscillator Switchover bit
  2612                           ;	IESO = OFF, Two-Speed Start-up disabled
  2613  300001                     	org	3145729
  2614  300001  06                 	db	6
  2615                           
  2616                           ;Config register CONFIG2L @ 0x300002
  2617                           ;	Power-up Timer Enable bit
  2618                           ;	PWRT = OFF, PWRT disabled
  2619                           ;	Brown-out Reset Enable bits
  2620                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  2621                           ;	Brown-out Voltage bits
  2622                           ;	BORV = 0x3, unprogrammed default
  2623  300002                     	org	3145730
  2624  300002  19                 	db	25
  2625                           
  2626                           ;Config register CONFIG2H @ 0x300003
  2627                           ;	Watchdog Timer
  2628                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2629                           ;	Watchdog Timer Postscale Select bits
  2630                           ;	WDTPS = 0xF, unprogrammed default
  2631  300003                     	org	3145731
  2632  300003  1E                 	db	30
  2633                           
  2634                           ;Config register CONFIG3L @ 0x300004
  2635                           ;	unspecified, using default values
  2636                           ;	Processor Data Memory Mode Select bits
  2637                           ;	MODE = 0x3, unprogrammed default
  2638                           ;	Address Bus Width Select bits
  2639                           ;	ADDRBW = 0x3, unprogrammed default
  2640                           ;	Data Bus Width Select bit
  2641                           ;	DATABW = 0x1, unprogrammed default
  2642                           ;	External Bus Data Wait Enable bit
  2643                           ;	WAIT = 0x1, unprogrammed default
  2644  300004                     	org	3145732
  2645  300004  F3                 	db	243
  2646                           
  2647                           ;Config register CONFIG3H @ 0x300005
  2648                           ;	CCP2 MUX bit
  2649                           ;	CCP2MX = 0x1, unprogrammed default
  2650                           ;	ECCP MUX bit
  2651                           ;	ECCPMX = 0x1, unprogrammed default
  2652                           ;	Low-Power Timer1 Oscillator Enable bit
  2653                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2654                           ;	MCLR Pin Enable bit
  2655                           ;	MCLRE = ON, MCLR pin enabled; RG5 input pin disabled
  2656  300005                     	org	3145733
  2657  300005  83                 	db	131
  2658                           
  2659                           ;Config register CONFIG4L @ 0x300006
  2660                           ;	Stack Full/Underflow Reset Enable bit
  2661                           ;	STVREN = 0x1, unprogrammed default
  2662                           ;	Single-Supply ICSP Enable bit
  2663                           ;	LVP = OFF, Single-Supply ICSP disabled
  2664                           ;	Boot Block Size Select bits
  2665                           ;	BBSIZ = 0x0, unprogrammed default
  2666                           ;	Extended Instruction Set Enable bit
  2667                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2668                           ;	Background Debugger Enable bit
  2669                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  2670  300006                     	org	3145734
  2671  300006  81                 	db	129
  2672                           
  2673                           ; Padding undefined space
  2674  300007                     	org	3145735
  2675  300007  FF                 	db	255
  2676                           tosu	equ	0xFFF
  2677                           tosh	equ	0xFFE
  2678                           tosl	equ	0xFFD
  2679                           stkptr	equ	0xFFC
  2680                           pclatu	equ	0xFFB
  2681                           pclath	equ	0xFFA
  2682                           pcl	equ	0xFF9
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           prodh	equ	0xFF4
  2688                           prodl	equ	0xFF3
  2689                           indf0	equ	0xFEF
  2690                           postinc0	equ	0xFEE
  2691                           postdec0	equ	0xFED
  2692                           preinc0	equ	0xFEC
  2693                           plusw0	equ	0xFEB
  2694                           fsr0h	equ	0xFEA
  2695                           fsr0l	equ	0xFE9
  2696                           wreg	equ	0xFE8
  2697                           indf1	equ	0xFE7
  2698                           postinc1	equ	0xFE6
  2699                           postdec1	equ	0xFE5
  2700                           preinc1	equ	0xFE4
  2701                           plusw1	equ	0xFE3
  2702                           fsr1h	equ	0xFE2
  2703                           fsr1l	equ	0xFE1
  2704                           bsr	equ	0xFE0
  2705                           indf2	equ	0xFDF
  2706                           postinc2	equ	0xFDE
  2707                           postdec2	equ	0xFDD
  2708                           preinc2	equ	0xFDC
  2709                           plusw2	equ	0xFDB
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    12
    Data        0
    BSS         14
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      49
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    RotateShape@shape	PTR struct . size(2) Largest target is 4
		 -> curTet(COMRAM[4]), 

    SetQuartet@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 

    SetQuartet@shape	PTR struct . size(2) Largest target is 1
		 -> IsColliding@curQuartet(COMRAM[1]), UpdateBuffer@bq(COMRAM[1]), 

    GetQuartet@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 

    GetQuartet@shape	PTR struct . size(2) Largest target is 1
		 -> IsColliding@shape(COMRAM[1]), IsColliding@curQuartet(COMRAM[1]), UpdateBuffer@bq(COMRAM[1]), 

    GetBoard@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 

    SetBoard@board	PTR struct . size(2) Largest target is 4
		 -> buffer(COMRAM[4]), board(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _Update->_UpdateBuffer
    _UpdateBuffer->_SetQuartet
    _SetQuartet->_SetBoard
    _GetQuartet->_GetBoard
    _InitBoard->_SetBoard

Critical Paths under _HandleInterrupt in COMRAM

    _HandleInterrupt->_HandlePortB
    _HandlePortB->i2_RotateShape

Critical Paths under _main in BANK0

    None.

Critical Paths under _HandleInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _HandleInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HandleInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HandleInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HandleInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HandleInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HandleInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HandleInterrupt in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _HandleInterrupt in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _HandleInterrupt in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _HandleInterrupt in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _HandleInterrupt in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _HandleInterrupt in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _HandleInterrupt in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _HandleInterrupt in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _HandleInterrupt in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7907
                          _InitBoard
                     _InitInterrupts
                         _InitTimers
                             _Render
                             _Update
 ---------------------------------------------------------------------------------
 (1) _Update                                               0     0      0    5683
                        _ListenPortA
                        _UpdateBoard
                       _UpdateBuffer
 ---------------------------------------------------------------------------------
 (2) _UpdateBuffer                                         1     1      0    5353
                                             32 COMRAM     1     1      0
                         _GetQuartet
                         _SetQuartet
 ---------------------------------------------------------------------------------
 (3) _SetQuartet                                           6     1      5    2910
                                             26 COMRAM     6     1      5
                           _SetBoard
 ---------------------------------------------------------------------------------
 (3) _GetQuartet                                          16    11      5    2390
                                             15 COMRAM    16    11      5
                           _GetBoard
 ---------------------------------------------------------------------------------
 (4) _GetBoard                                             7     4      3     766
                                              8 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (2) _UpdateBoard                                          1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _ListenPortA                                          8     8      0     330
                                              8 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 (1) _Render                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitTimers                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitBoard                                            2     2      0    2224
                                             26 COMRAM     2     2      0
                        _RotateShape
                           _SetBoard
 ---------------------------------------------------------------------------------
 (4) _SetBoard                                            18    14      4    1874
                                              8 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (2) _RotateShape                                          2     0      2     214
                                              8 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _HandleInterrupt                                      4     4      0     248
                                              4 COMRAM     4     4      0
                        _HandlePortB
                        _HandleTimer
 ---------------------------------------------------------------------------------
 (6) _HandleTimer                                          2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _HandlePortB                                          2     2      0     248
                                              2 COMRAM     2     2      0
                      i2_RotateShape
 ---------------------------------------------------------------------------------
 (7) i2_RotateShape                                        2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitBoard
     _RotateShape
     _SetBoard
   _InitInterrupts
   _InitTimers
   _Render
   _Update
     _ListenPortA
     _UpdateBoard
     _UpdateBuffer
       _GetQuartet
         _GetBoard
       _SetQuartet
         _SetBoard

 _HandleInterrupt (ROOT)
   _HandlePortB
     i2_RotateShape
   _HandleTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      31       1       52.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      32        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Fri Apr 19 17:44:26 2024

                       _L 1001                        l90 1AD8                        l93 1AEC  
                      l87 179E                        l96 1B0C                        l99 1AFE  
                     l201 1A60                       l113 1124                       l123 1254  
                     l124 12A2                       l133 1848                       l118 11BC  
                     l151 1B12                       l154 1A2E                       l148 16E6  
                     l176 14E6                       l179 18D4                       _DOT 1009  
                     u310 1508                       u311 1504                       u400 15EC  
                     u320 1516                       u401 15E8                       u321 1512  
                     u410 15FC                       u330 1534                       u411 15F8  
                     u331 1530                       u500 16E0                       u420 160A  
                     u340 155E                       u501 16DC                       u421 1606  
                     u341 155A                       u430 161A                       u350 156E  
                     u431 1616                       u351 156A                       u440 1644  
                     u360 157E                       u441 1640                       u361 157A  
                     u450 1662                       u370 158C                       u451 165E  
                     u371 1588                       u460 1672                       u380 159C  
                     u461 166E                       u381 1598                       u470 1680  
                     u390 15CE                       u471 167C                       u391 15CA  
                     u720 10B0                       u704 1042                       u480 169E  
                     u721 10AC                       u705 103E                       u481 169A  
                     u714 1070                       u490 16D0                       u715 106A  
                     u491 16CC                       u804 1230                       u900 13D6  
                     u820 12B6                       u805 122A                       u901 13D2  
                     u821 12B2                       u750 1148                       u734 10D2  
                     u814 183E                       u910 1400                       u830 12C6  
                     u751 1144                       u735 10CE                       u815 183A  
                     u911 13FC                       u831 12C2                       u744 1100  
                     u920 141E                       u745 10FA                       u921 141A  
                     u690 1024                       u850 131C                       u691 1020  
                     u851 1318                       u780 11E0                       u764 116A  
                     u940 1466                       u860 1346                       u781 11DC  
                     u765 1166                       u941 1462                       u861 1342  
                     u845 12FC                       u774 1198                       u950 1490  
                     u870 1356                       u846 12FE                       u775 1192  
                     u951 148C                       u935 1454                       u871 1352  
                     u960 14AE                       u936 1456                       u961 14AA  
                     u794 1202                       u890 13AC                       u795 11FE  
                     u891 13A8                       u885 138C                       u886 138E  
                     u975 14E4                       u976 14E6                       u985 1A54  
                     u986 1A56                       wreg 000FE8       __end_of_HandlePortB 19F2  
     __end_of_HandleTimer 194A                InitBoard@i 001B                InitBoard@j 001C  
                    l1030 14FA                      l1022 14E8                      l1040 156E  
                    l1032 1508                      l1024 14EC                      l1130 1ACA  
                    l1050 15CE                      l1034 1516                      l1042 1570  
                    l1026 14F2                      l1140 1ADE                      l1132 1ACE  
                    l1060 161A                      l1052 15EC                      l1044 157E  
                    l1036 1534                      l1028 14F6                      l1300 17A6  
                    l1150 1AE8                      l1142 1AE0                      l1134 1AD2  
                    l1070 1680                      l1062 1644                      l1046 158C  
                    l1054 15EE                      l1038 155E                      l1302 17B6  
                    l1310 17F2                      l1144 1AE2                      l1136 1AD6  
                    l1128 1AC6                      l1072 169E                      l1064 1662  
                    l1056 15FC                      l1048 159C                      l1080 1B0E  
                    l1304 17CA                      l1312 182C                      l1320 12A6  
                    l1410 174A                      l1402 1730                      l1146 1AE4  
                    l1138 1ADA                      l1074 16D0                      l1058 160A  
                    l1066 1664                      l1306 17DE                      l1330 12FE  
                    l1322 12B6                      l1420 1792                      l1412 174C  
                    l1148 1AE6                      l1076 16E0                      l1068 1672  
                    l1340 137C                      l1332 131C                      l1324 12C6  
                    l1500 1A9C                      l1270 1090                      l1262 1010  
                    l1414 175C                      l1158 1AEE                      l1078 16E2  
                    l1350 141E                      l1342 138E                      l1334 1346  
                    l1326 12E4                      l1422 1B00                      l1502 1AA0  
                    l1280 1148                      l1272 10A0                      l1264 1014  
                    l1416 175E                      l1408 1734                      l1360 1490  
                    l1344 13AC                      l1352 143C                      l1336 1356  
                    l1328 12EC                      l1424 1B04                      l1504 1AA4  
                    l1370 1A30                      l1282 1182                      l1274 10B0  
                    l1266 1024                      l1418 176E                      l1514 1806  
                    l1362 14AE                      l1354 1444                      l1346 13D6  
                    l1338 1374                      l1426 1B08                      l1372 1A3C  
                    l1516 127C                      l1284 11D0                      l1276 10EA  
                    l1268 105A                      l1292 1268                      l1364 14CC  
                    l1356 1456                      l1348 1400                      l1380 1A0E  
                    l1374 1A56                      l1286 11E0                      l1278 1138  
                    l1366 14D4                      l1358 1466                      l1382 1A12  
                    l1288 121A                      l1392 16E8                      l1368 184C  
                    l1384 1A2C                      l1376 19F2                      l1394 16F8  
                    l1298 17A2                      l1378 19F4                      l1396 1708  
                    l1496 1A94                      l1498 1A98                      u1000 175C  
                    u1001 1758                      u1010 176E                      u1011 176A  
                    _LATA 000F89                      _LATB 000F8A                      _LATC 000F8B  
                    _LATD 000F8C                      _LATE 000F8D                      _LATF 000F8E  
                    _main 1A94                      fsr1h 000FE2                      fsr2h 000FDA  
                    indf1 000FE7                      indf2 000FDF                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0032                      start 000E  
            ___param_bank 000000             i2_RotateShape 1A62                _GetQuartet 12A4  
                   ?_main 0001                     _T0CON 000FD5                     i2l201 1A92  
                   i2l222 19EC                     i2l206 197C                     i2l224 19F0  
                   i2l216 1948                     i2l209 1990                     _TMR0H 000FD7  
                   _TMR0L 000FD6                     _PORTA 000F80                     _PORTB 000F81  
                   _TRISA 000F92                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95                     _TRISE 000F96                     _TRISF 000F97  
                   _board 0028                     _prevA 0023                     tablat 000FF5  
                   ttemp5 0033                     ttemp6 0036                     ttemp7 003A  
                   status 000FD8                     wtemp8 0033          __end_of_GetBoard 184A  
          ?i2_RotateShape 0001           __initialization 1AB0             ??_ListenPortA 0009  
              _InitTimers 1AC6              __end_of_main 1AB0            _InitInterrupts 1ADA  
       ??_HandleInterrupt 0005               _HandlePortB 19A4               _HandleTimer 18D6  
        __end_of_SetBoard 12A4                    ??_main 0022             __activetblptr 000003  
                  _ADCON1 000FC1                    i2l1170 1924                    i2l1172 1942  
                  i2l1164 18D6                    i2l1430 19A8                    i2l1174 1944  
                  i2l1166 18EA                    i2l1440 19EC                    i2l1432 19AE  
                  i2l1168 18FA                    i2l1434 19BC                    i2l1436 19CA  
                  i2l1428 19A4                    i2l1390 1A88                    i2l1438 19DC  
                  i2l1386 1A62                    i2l1490 1974                    i2l1482 195C  
                  i2l1388 1A6E                    i2l1492 198A                    i2l1484 196A  
                  i2l1494 198C                    i2l1486 196C                    i2l1488 1970  
                  _INTCON 000FF2        __size_of_InitBoard 00B8                _SetQuartet 184A  
                  _SQUARE 1005    __end_of_InitInterrupts 1AEE                    _Render 1AEE  
                  _Update 1B00                    _buffer 0024                    _curTet 002C  
                  clear_0 1AB6               ?_GetQuartet 0010       __end_of_ListenPortA 16E8  
            __mediumconst 0000        HandleTimer@counter 0022                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8             ??_UpdateBoard 0009  
              __accesstop 0060   __end_of__initialization 1ABC             ___rparam_used 000001  
         ??i2_RotateShape 0003             ??_RotateShape 000B           ?_InitInterrupts 0001  
          __pcstackCOMRAM 0001               ?_InitTimers 0001        i2RotateShape@shape 0001  
           GetBoard@board 000A         __end_of_InitBoard 17A0                 ?_GetBoard 0009  
             SetQuartet@x 0020               SetQuartet@y 001B               ?_SetQuartet 001B  
              __pnvCOMRAM 0030       __size_of_GetQuartet 0244                 ?_SetBoard 0009  
                 ?_Render 0001                   ?_Update 0001       __end_of_UpdateBoard 1B14  
             _ListenPortA 14E8            _GetQuartet$464 0017            _GetQuartet$465 0019  
          _GetQuartet$466 001B            _GetQuartet$467 001D       __end_of_RotateShape 1A62  
              ??_GetBoard 000C                   i2u56_40 18EA                   i2u56_41 18E6  
                 i2u57_40 18FA                   i2u57_41 18F6                   i2u58_40 1924  
                 i2u58_41 1920                   i2u59_40 1942                   i2u59_41 193E  
                 i2u99_45 1A86                   i2u99_46 1A88       __size_of_InitTimers 0014  
         _HandleInterrupt 0008                ??_SetBoard 000D                   __Hparam 0000  
                 __Lparam 0000           __size_of_Render 0012           __size_of_Update 000E  
            __psmallconst 1000                   __pcinit 1AB0              ?_HandlePortB 0001  
            ?_HandleTimer 0001                   __ramtop 1000                   __ptext0 1A94  
                 __ptext1 1B00                   __ptext2 19F2                   __ptext3 184A  
                 __ptext4 12A4                   __ptext5 17A0                   __ptext6 1B0E  
                 __ptext7 14E8                   __ptext8 1AEE                   __ptext9 1AC6  
               _T0CONbits 000FD5       __size_of_SetQuartet 008C             ?_UpdateBuffer 0001  
          __pintcode_body 194A      end_of_initialization 1ABC                   int_func 194A  
             _UpdateBoard 1B0E                 GetBoard@x 000E                 GetBoard@y 0009  
             _RotateShape 1A30                   postinc0 000FEE              ??_GetQuartet 0015  
            ListenPortA@x 000F              ListenPortA@y 0010           GetQuartet@board 0013  
         GetQuartet@shape 0011            ??_UpdateBuffer 0021   __end_of_HandleInterrupt 19A4  
        ??_InitInterrupts 0009        __end_of_GetQuartet 14E8            __end_of_SQUARE 1009  
            ??_InitTimers 0009            __end_of_Render 1B00            __end_of_Update 1B0E  
               SetBoard@v 000A                 SetBoard@x 0012                 SetBoard@y 0009  
     start_initialization 1AB0                 _InitBoard 16E8               __end_of_DOT 100D  
       __size_of_GetBoard 00AA        __end_of_InitTimers 1ADA              ??_SetQuartet 0020  
                ??_Render 0009     __end_ofi2_RotateShape 1A94         __size_of_SetBoard 0296  
                ??_Update 0022              ?_ListenPortA 0001    HandlePortB@changedBits 0003  
 HandlePortB@currentPortB 0004      __size_of_HandlePortB 004E      __size_of_HandleTimer 0074  
      __end_of_SetQuartet 18D6               __pbssCOMRAM 0022                ?_InitBoard 0001  
               __end_of_L 1005          ?_HandleInterrupt 0001              _SetBoard$385 0013  
            _SetBoard$386 0015              _SetBoard$387 0017              _SetBoard$388 0019  
               __pintcode 0008      __end_of_UpdateBuffer 1A30               __smallconst 1000  
               _lastPortA 0031                 _lastPortB 0030              ?_UpdateBoard 0001  
  ListenPortA@changedBits 000D                  i2u102_40 19BC                  i2u110_40 198A  
                i2u102_41 19B8                  i2u110_41 1986                  i2u103_40 19CA  
                i2u103_41 19C6                  i2u104_40 19DC                  i2u104_41 19D8  
                i2u109_40 196A                  i2u109_41 1966              ?_RotateShape 0009  
                _RCONbits 000FD0               ??_InitBoard 001B                  _GetBoard 17A0  
                _SetBoard 100E                  __Hrparam 0000                  __Lrparam 0000  
          UpdateBuffer@bq 0021      __size_of_ListenPortA 0200               GetBoard@col 000F  
                __ptext10 1ADA                  __ptext11 16E8                  __ptext12 100E  
                __ptext13 1A30                  __ptext15 18D6                  __ptext16 19A4  
                __ptext17 1A62             __size_of_main 001C   ListenPortA@currentPortA 000E  
   __size_of_UpdateBuffer 003E                  int$flags 0032                _INTCONbits 000FF2  
             GetQuartet@x 001F               GetQuartet@y 0010             SetBoard@board 000B  
            _UpdateBuffer 19F2                  intlevel2 0000          RotateShape@shape 0009  
    __size_of_UpdateBoard 0006      __size_of_RotateShape 0032   __size_of_InitInterrupts 0014  
           ??_HandlePortB 0003             ??_HandleTimer 0001    __size_ofi2_RotateShape 0032  
         SetQuartet@board 001E           SetQuartet@shape 001C  __size_of_HandleInterrupt 199C  
